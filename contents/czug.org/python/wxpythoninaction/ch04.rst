---
created: 
creator: Benky
description: ''
title: 第四章 用PyCrust使得wxPython更易处理
---
<div lang="en" id="content" dir="ltr"><span id="top" class="anchor"/>
<span id="line-1" class="anchor"/><p class="line867"/><div class="table-of-contents"><p class="table-of-contents-heading">目录</p><ol><li><a href="#head-59b00a898ed65b5af05bb6d9e48ca1b6e725999a">用PyCrust使得wxPython更易处理</a><ol><li><a href="#head-b1c89accbc3df6d8068189fba7b5fc388237ae4c">如何与wxPython程序交互？</a></li><li><a href="#head-a257759ea6ed9f33b82a64e6565c31806e38a35e">PyCrust的有用特性是什么？</a><ol><li><a href="#head-17fc721ceb3cbe94da7fdf536e1151ae6a2912aa">自动完成</a></li><li><a href="#head-ca707adf9166721e8e0153994747f36f54aaed12">调用提示和参数默认</a></li><li><a href="#head-0e3d599ce9f478be40a0f8f28e1af3eb805c706a">语法高亮</a></li><li><a href="#head-6b770ace7b792be81bfe8efb34f612b1d7ba7bde">Python</a></li><li><a
href="#head-06a5d09914ee9c129aae7733bb3d7db607b76bfb">命令重调用</a></li><li><a href="#head-8094ac1b8020a48848d3cca61f239ab48b637282">剪切和粘贴</a></li><li><a href="#head-0049832f51ab8f19efe0967924afd12f6a89136a">标准shell环境</a></li><li><a href="#head-18510320a31e454e26338d374ac0783a8890cab8">动态更新</a></li></ol></li><li><a href="#head-9c0781bac84babdaadf5f216e6d02a60b60446b8">PyCrust</a><ol><li><a href="#head-983099b9ddf4922f9676193235d4a6b66146cbb0">Namespace标签</a></li><li><a href="#head-457820a791a8d3ba4301cc85e292a76cb52b74c4">Display标签</a></li><li><a href="#head-9989877760206dcbd6ae16bc311b7633fc22ebc6">Session标签</a></li><li><a href="#head-c09b3d0e729812919178b8e9559b1a41bf238f03">Dispatcher</a></li></ol></li><li><a
href="#head-9fbcfd2689593a5b5b4a4d85097c24a55dbdb983">如何将PyCrust应用于wxPython应用程序</a></li><li><a href="#head-ea37861641f71702b80667691252f06dd53726a0">在Py包中还有其它什么？</a><ol><li><a href="#head-17c5c676c2a130d35858d648285eba74099ca7db">使用GUI程序工作</a></li><li><a href="#head-2c2dd60943b107507f404df7815b34c35298ca5a">使用支持模块工作</a></li></ol></li><li><a href="#head-249d31f01ee72c5a26d272fc81749837b666810c">如何在wxPython中使用Py包中的模块?</a></li><li><a href="#head-a4fc9e756c5762c5ebbda76e2a5b91445b5ea3bc">本章小结</a></li></ol></li></ol></div> <span id="line-2" class="anchor"/><span id="line-3" class="anchor"/><p class="line867">
</p><h1 id="head-59b00a898ed65b5af05bb6d9e48ca1b6e725999a">1. 用PyCrust使得wxPython更易处理</h1>
<span id="line-4" class="anchor"/><span id="line-5" class="anchor"/><p class="line867"><tt>PyCrust</tt>是一个图形化的<tt>shell</tt>程序，使用<tt>wxPython</tt>写成，它可以用来帮助你分析你的<tt>wxPython</tt>程序。 <span id="line-6" class="anchor"/><span id="line-7" class="anchor"/></p><p class="line862">为何称它为<tt>PyCrust</tt>？这是因为当<tt>Patrick O’Brien</tt>使用<tt>wxPython</tt>创建一个交互式的<tt>Python</tt> <tt>shell</tt>时，<tt>PyShell</tt>已被使用了，所以选用了<tt>PyCrust</tt>这个名字。 <span id="line-8" class="anchor"/><span id="line-9" class="anchor"/></p><p class="line867"><tt>PyCrust</tt>是<tt>Py</tt>包中的一部分，<tt>Py</tt>包目前被包含在<tt>wxPython</tt>中。这个<tt>Py</tt>包还包含了其它相关功能的程序，这包括<tt>PyFilling</tt>, <tt>PyAlaMode</tt>,
<tt>PyAlaCarte</tt>, 和<tt>PyShell</tt>。这些程序每个都是想成为融图形化、点击环境 、<tt>wxPython</tt>的交互、内省运行特点为一体。但是<tt>PyCrust</tt>表现最完善。 <span id="line-10" class="anchor"/><span id="line-11" class="anchor"/></p><p class="line862">在这章中，我们将说明<tt>PyCrust</tt>和那些相关程序都干些什么，还有，你如何使用它们才能使得你用<tt>wxPython</tt>工作得更流畅。我们以谈论普通的<tt>Python</tt> <tt>shell</tt>作为开始，然后专门针对<tt>PyCrust</tt>，最后我们将涉及<tt>Py</tt>包中剩下的程序。 <span id="line-12" class="anchor"/><span id="line-13" class="anchor"/><span id="line-14" class="anchor"/></p><p class="line867">
</p><h2 id="head-b1c89accbc3df6d8068189fba7b5fc388237ae4c">1.1. 如何与wxPython程序交互？</h2>
<span id="line-15" class="anchor"/><span id="line-16" class="anchor"/><span id="line-17" class="anchor"/><p class="line862">与其它编程语言相比，<tt>Python</tt>的一个显著的特点是你可以以两种方式来使用它：你可以用它来运行存在的使用<tt>Python</tt>语言写的程序，或从命令提示符来交互地运行<tt>Python</tt>。交互地运行<tt>Python</tt>如同与<tt>Python</tt>解释器会话。 <span id="line-18" class="anchor"/><span id="line-19" class="anchor"/></p><p class="line862">在下例4.1中，我们从命令行启动<tt>Python</tt>，并键入一些数学运算。<tt>Python</tt>启动后显示几行信息，然后是它的主提示符'   '。当你键入的东西要求额外的代码行时，<tt>Python</tt>显示它的次提示符'...'。 <span id="line-20" class="anchor"/><span id="line-21" class="anchor"/></p><p class="line862">例4.1 简单的<tt>Python</tt>交互式会话
<span id="line-22" class="anchor"/><span id="line-23" class="anchor"/></p><pre>$ Python
<span id="line-24" class="anchor"/>Python 2.3.3 (#1, Jan 25 2004, 11:06:18)
<span id="line-25" class="anchor"/>[GCC 3.2.2 (Mandrake Linux 9.1 3.2.2-3mdk)] on linux2
<span id="line-26" class="anchor"/>Type "help", "copyright", "credits" o "license" for more information.
<span id="line-27" class="anchor"/>    2 + 2
<span id="line-28" class="anchor"/>4
<span id="line-29" class="anchor"/>    7 * 6
<span id="line-30" class="anchor"/>42
<span id="line-31" class="anchor"/>    5 ** 3
<span id="line-32" class="anchor"/>125
<span id="line-33" class="anchor"/>    for n in range(5):
<span id="line-34" class="anchor"/>...     print n * 9
<span id="line-35" class="anchor"/>...
<span id="line-36" class="anchor"/>0
<span id="line-37" class="anchor"/>9
<span id="line-38" class="anchor"/>18
<span id="line-39" class="anchor"/>27
<span id="line-40" class="anchor"/>36
<span id="line-41" class="anchor"/></pre><span id="line-42" class="anchor"/><span id="line-43" class="anchor"/><p class="line862">交互式的<tt>Python</tt>不仅仅是一个好的桌面计算器，它也是一个好的学习工具，因为它提供了及时的反馈。当你有疑问时，你可以运行<tt>Python</tt>，键入几行试验性的代码，看<tt>Python</tt>如何反应，据此调整你的主要代码。学习<tt>Python</tt>或学习现有的<tt>Python</tt>代码是如何工作的，最好的方法之一就是交互式地调试。 <span id="line-44" class="anchor"/><span id="line-45" class="anchor"/><span id="line-46" class="anchor"/></p><p class="line867"><strong><tt>PyCrust</tt>配置了标准的<tt>Python</tt></strong>  <span id="line-47" class="anchor"/><strong><tt>shell</tt></strong> <span id="line-48" class="anchor"/><span id="line-49" class="anchor"/></p><p
class="line862">当你交互式的使用<tt>Python</tt>工作时，你工作在一个称为<tt>Python</tt> <tt>shell</tt>的环境中，它类似于其它的<tt>shell</tt>环境，如微软平台的<tt>DOS</tt>窗口，或类<tt>Unix</tt>系统的<tt>bash</tt>命令行。 <span id="line-50" class="anchor"/><span id="line-51" class="anchor"/></p><p class="line862">所有<tt>Python</tt> <tt>shell</tt>中最基本的是例4.1中所出现的，它是你从命令行启动<tt>Python</tt>时所见到的。虽然它是一个有用的<tt>shell</tt>，但是它基于文本的，而非图形化的，并且它不提供快捷方式或有帮助的提示。有几个图形化的<tt>Python</tt> <tt>shell</tt>已经被开发出来了，它们提供了这些额外的功能。最著名的是<tt>IDLE</tt>，它是<tt>Python</tt>发布版的标准部分。<tt>IDLE</tt>如下图4.1所示： <span id="line-52" class="anchor"/><span id="line-53" class="anchor"/></p><p
class="line867"><img title="attachment:w4.1.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.1.gif" class="attachment"/> <span id="line-54" class="anchor"/><span id="line-55" class="anchor"/></p><p class="line867"><tt>IDLE</tt>看起来很像命令行<tt>Python</tt> <tt>shell</tt>，但是它有额外的特性如调用提示。 <span id="line-56" class="anchor"/><span id="line-57" class="anchor"/></p><p class="line862">其它的<tt>Python</tt>开发工具，如<tt>PythonWin</tt>和<tt>Boa</tt> <tt>Constructor</tt>，包括了类似于<tt>IDLE</tt>中的图形化<tt>Python</tt> <tt>shell</tt>。虽然每种工具的<tt>shell</tt>各有一些有用的特性，如命令再调用(<tt>recall)</tt>、自动完成、调用提示，但是没有一个工具完整包含了所有的特性
。在这种情况下，<tt>PyCrust</tt>产生了，<tt>PyCrust</tt>的目的之一就是提供所有现存的<tt>Python</tt> <tt>shell</tt>的特性。 <span id="line-58" class="anchor"/><span id="line-59" class="anchor"/></p><p class="line862">创建<tt>PyCrust</tt>的另一个动机是：使用一个<tt>GUI</tt>工具包所写的代码不能工作在另一个不同的<tt>GUI</tt>工具包上。例如，<tt>IDLE</tt>是用<tt>Tkinter</tt>写的，而不是<tt>wxPython</tt>。由于这样，如果你试图在<tt>IDLE</tt>的<tt>Python</tt> <tt>shell</tt>中引入和使用<tt>wxPython</tt>模块，那么你将陷入<tt>wxPython</tt>的事件循环与<tt>Tkinter</tt>事件循环间的冲突，结果将导致程序的冻结或崩溃。 <span id="line-60" class="anchor"/><span id="line-61" class="anchor"/></p><p
class="line862">事实上，这两个工具包将在控制事件循环上产生冲突。因此，如果你使用<tt>wxPython</tt>模块工作时想要内省运行特性，你的<tt>Python</tt> <tt>shell</tt>必须是用<tt>wxPython</tt>写的。由于没有现存的<tt>Python</tt> <tt>shell</tt>支持完整的特性，<tt>PyCrust</tt>被创建来填补这种需要。 <span id="line-62" class="anchor"/><span id="line-63" class="anchor"/><span id="line-64" class="anchor"/></p><p class="line867">
</p><h2 id="head-a257759ea6ed9f33b82a64e6565c31806e38a35e">1.2. PyCrust的有用特性是什么？</h2>
<span id="line-65" class="anchor"/><span id="line-66" class="anchor"/><span id="line-67" class="anchor"/><p class="line862">现在，我们将关注<tt>PyCrust</tt>提供的<tt>shell</tt>的一些特性。<tt>PyCrust</tt>的<tt>shell</tt>看起来有些熟悉，这是因为它也显示了如同命令行<tt>Python</tt> <tt>shell</tt>相同的信息行和提示符。下图4.2显示了一个打开着的<tt>PyCrust</tt>的屏幕： <span id="line-68" class="anchor"/><span id="line-69" class="anchor"/></p><p class="line867"><img title="attachment:w4.2.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.2.gif" class="attachment"/> <span id="line-70" class="anchor"/><span id="line-71" class="anchor"/><span id="line-72" class="anchor"/></p><p
class="line862">你应该注意一下这个<tt>PyCrust</tt>框架，它包含了一个<tt>wx.SplitterWindow</tt>控件，框架被分成两个区域：上部的区域看起来像通常的<tt>Python</tt> <tt>shell</tt>；底部的区域包含了一个<tt>Notebook</tt>控件，这个控件包含了不同的标签，默认标签显示的信息是有关当前的名字空间的。上部区域是<tt>PyCrust</tt> <tt>shell</tt>，它有几个有用的特性，我们将在下面几节讨论。 <span id="line-73" class="anchor"/><span id="line-74" class="anchor"/><span id="line-75" class="anchor"/><span id="line-76" class="anchor"/><span id="line-77" class="anchor"/></p><p class="line867">
</p><h3 id="head-17fc721ceb3cbe94da7fdf536e1151ae6a2912aa">1.2.1. 自动完成</h3>
<span id="line-78" class="anchor"/><span id="line-79" class="anchor"/><span id="line-80" class="anchor"/><p class="line862">当你在一个对象名后键入一点号时将引发自动完成功能。<tt>PyCrust</tt>将按字母顺序显示关于该对象的所有已知的属性的一个列表。当你在点号后输入字母时，在列表中的高亮选项将改变去匹配你所输入的字母。如果高亮选项正是你所要的，这时按下<tt>Tab</tt>键，<tt>PyCrust</tt>将为你补全该属性名的其余部分。 <span id="line-81" class="anchor"/><span id="line-82" class="anchor"/></p><p class="line862">在下图4.3中，<tt>PyCrust</tt>显示一个字符串对象的属性的列表。这个自动完成的列表包含了该对象的所有属性和方法。 <span id="line-83" class="anchor"/><span id="line-84" class="anchor"/></p><p class="line874">图4.3 <span id="line-85" class="anchor"/><span id="line-86"
class="anchor"/></p><p class="line867"><img title="attachment:w4.3.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.3.gif" class="attachment"/> <span id="line-87" class="anchor"/><span id="line-88" class="anchor"/><span id="line-89" class="anchor"/><span id="line-90" class="anchor"/></p><p class="line867">
</p><h3 id="head-ca707adf9166721e8e0153994747f36f54aaed12">1.2.2. 调用提示和参数默认</h3>
<span id="line-91" class="anchor"/><span id="line-92" class="anchor"/><span id="line-93" class="anchor"/><p class="line862">当你在一个可调用的对象名后键入左括号时，<tt>PyCrust</tt>显示一个调用提示窗口（如图4.4），该窗口包含了所能提供的参数信息和文档字符串（如果可调用对象中定义了文档字符串的话）。 <span id="line-94" class="anchor"/><span id="line-95" class="anchor"/></p><p class="line874">可调用对象可以是函数、方法、内建的或类。可调用对象的定义都可以有参数，并且可以有用来说明功能的文档字符串，以及返回值的类型。如果你知道如何使用该可调用对象，那么你可以忽略调用提示并继续键入。 <span id="line-96" class="anchor"/><span id="line-97" class="anchor"/></p><p class="line874">图4.4 <span id="line-98" class="anchor"/><span id="line-99" class="anchor"/></p><p class="line867"><img
title="attachment:w4.4.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.4.gif" class="attachment"/> <span id="line-100" class="anchor"/><span id="line-101" class="anchor"/><span id="line-102" class="anchor"/><span id="line-103" class="anchor"/></p><p class="line867">
</p><h3 id="head-0e3d599ce9f478be40a0f8f28e1af3eb805c706a">1.2.3. 语法高亮</h3>
<span id="line-104" class="anchor"/><span id="line-105" class="anchor"/><span id="line-106" class="anchor"/><p class="line862">当你在<tt>shell</tt>中键入代码时，<tt>PyCrust</tt>根据它的重要性改变文本的颜色。例如，<tt>Python</tt>的关键词用一种颜色显示，原义字符串用另一种颜色，注释用另一种颜色。这就使得你可以通过颜色来确认你的输入是否有误。 <span id="line-107" class="anchor"/><span id="line-108" class="anchor"/><span id="line-109" class="anchor"/></p><p class="line867">
</p><h3 id="head-6b770ace7b792be81bfe8efb34f612b1d7ba7bde">1.2.4. Python</h3>
<span id="line-110" class="anchor"/><span id="line-111" class="anchor"/><p class="line867"><strong>帮助</strong> <span id="line-112" class="anchor"/><span id="line-113" class="anchor"/></p><p class="line867"><tt>PyCrust</tt>完整地提供了关于<tt>Python</tt>的帮助功能。<tt>Python</tt>的帮助功能显示了几乎所有<tt>Python</tt>方面的信息，如下图4.5所示 <span id="line-114" class="anchor"/><span id="line-115" class="anchor"/></p><p class="line874">图4.5 <span id="line-116" class="anchor"/><span id="line-117" class="anchor"/></p><p class="line867"><img title="attachment:w4.5.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.5.gif" class="attachment"/> <span id="line-118" class="anchor"/><span id="line-119" class="anchor"/><span id="line-120"
class="anchor"/></p><p class="line867"><tt>Python</tt>的帮助功能提供了另外一个提示符(<tt>help)</tt>。在使用了<tt>help</tt>之后，你可以通过在<tt>help</tt>提示符之后键入<tt>quit</tt>来退出帮助模式，返回到通常的<tt>Python</tt>提示符(   )。 <span id="line-121" class="anchor"/><span id="line-122" class="anchor"/><span id="line-123" class="anchor"/></p><p class="line867">
</p><h3 id="head-06a5d09914ee9c129aae7733bb3d7db607b76bfb">1.2.5. 命令重调用</h3>
<span id="line-124" class="anchor"/><span id="line-125" class="anchor"/><span id="line-126" class="anchor"/><p class="line862">在<tt>PyCrust</tt> <tt>shell</tt>中有多种方法可以用来减少重复输入。它们大都通过捕获你先前的键入来实现，如果有必要，你可以修改所捕获的内容，之后它们将之发送给<tt>Python</tt>解释器。 <span id="line-127" class="anchor"/><span id="line-128" class="anchor"/></p><p class="line862">例如，<tt>PyCrust</tt>维护着当前会话中你所键入的所有命令的一个历史记录。你可以从命令历史记录中重调用你先前键入的任何<tt>Python</tt>命令（一行或多行）。下表4.1显示了一个关于该功能的快捷键列表。 <span id="line-129" class="anchor"/><span id="line-130" class="anchor"/></p><p class="line867"><tt>Ctrl</tt>+上箭头：获取前一个历史项 <span id="line-131"
class="anchor"/><tt>Alt</tt>+P：获取前一个历史项 <span id="line-132" class="anchor"/><tt>Ctrl</tt>+下箭头：获取下一个历史项 <span id="line-133" class="anchor"/><tt>Alt</tt>+N：获取下一个历史项 <span id="line-134" class="anchor"/><tt>Shift</tt>+上箭头：插入前一个历史项 <span id="line-135" class="anchor"/><tt>Shift</tt>+下箭头：插入下一个历史项 <span id="line-136" class="anchor"/><tt>F8</tt>：历史项命令补全（键入先前命令的少量字符并按<tt>F8</tt>） <span id="line-137" class="anchor"/><tt>Ctrl</tt>+<tt>Enter</tt>：在多行命令中插入新行 <span id="line-138" class="anchor"/><span id="line-139" class="anchor"/></p><p
class="line862">正如你所看到的，这儿有不同的命令用于获取和插入旧命令，它们通过<tt>PyCrust</tt>如何处理当前<tt>wxPythob</tt>提示符中所键入的文本被区分。要替换你的键入或插入一个旧的命令，可以使用快捷键来获取或插入一个历史项。 <span id="line-140" class="anchor"/><span id="line-141" class="anchor"/></p><p class="line862">插入一行到一个多行命令中的工作与插入到一单行命令不同。要插入一行到一个多行命令，你不能只按<tt>Enter</tt>键，因为这样将把当前的命令发送给<tt>Python</tt>解释器。替代的方法是，按下<tt>Ctrl</tt>+<tt>Enter</tt>来插入一个中断到当前行。如果你处于行尾，那么一个空行被插入当前行之后。这个过程类似于你在一个通常的文本编辑中剪切和粘帖文本的方法。 <span id="line-142" class="anchor"/><span id="line-143" class="anchor"/></p><p
class="line862">最后一种重调用命令的方法是简单地将光标移到想要使用的命令，然后按<tt>Enter</tt>键。<tt>PyCrust</tt>复制该命令到当前的<tt>Python</tt>提示符。然后你可以修改该命令或按<tt>Enter</tt>键以将该命令提交给解释器。 <span id="line-144" class="anchor"/><span id="line-145" class="anchor"/></p><p class="line862">快捷键让你可以快速地开发代码，并做每步的测试。例如，你可以定义一个新的<tt>Python</tt>类，创建该类的一个实例，并看它的行为如何。然后，你可以返回到这个类的定义，增加更多的方法或编辑已有的方法，并创建一个新的实例。通过这样的反复，你可以将你的类的定义做得足够好，然后将它粘帖到你的源代码中。 <span id="line-146" class="anchor"/><span id="line-147" class="anchor"/><span id="line-148" class="anchor"/></p><p class="line867">
</p><h3 id="head-8094ac1b8020a48848d3cca61f239ab48b637282">1.2.6. 剪切和粘贴</h3>
<span id="line-149" class="anchor"/><span id="line-150" class="anchor"/><span id="line-151" class="anchor"/><p class="line862">你可能想重用在<tt>shell</tt>中已开发的代码，而避免重新键入。有时，你可能找到一些样例代码（可能来自在线的教程），你想把它用到一个<tt>Python</tt> <tt>shell</tt>中。<tt>PyCrust</tt>提供了一些简单的剪切和粘贴选项，列表于下表4.2 <span id="line-152" class="anchor"/><span id="line-153" class="anchor"/></p><p class="line867"><tt>Ctrl</tt>+C：复制所选的文本，去掉提示符 <span id="line-154" class="anchor"/><tt>Ctrl</tt>+<tt>Shift</tt>+C：复制所选的文本，保留提示符 <span id="line-155" class="anchor"/><tt>Ctrl</tt>+X：剪切所选的文本 <span id="line-156" class="anchor"/><tt>Ctrl</tt>+V：粘贴自剪贴板 <span id="line-157"
class="anchor"/><tt>Ctrl</tt>+<tt>Shift</tt>+V：粘贴自剪贴板的多个命令并运行 <span id="line-158" class="anchor"/><span id="line-159" class="anchor"/></p><p class="line862">粘贴的另一个特性是：<tt>PyCrust</tt>从所粘贴到<tt>PyCrust</tt> <tt>shell</tt>中的代码中识别并自动去掉标准的<tt>Python</tt>提示符。这使得复制教程或<tt>email</tt>信息中的例子代码，把它粘贴到<tt>PyCrust</tt>中，并测试它变得简单了，省去了手工的清理。 <span id="line-160" class="anchor"/><span id="line-161" class="anchor"/></p><p class="line862">某些时候，当你复制代码时，你可能想去除<tt>PyCrust</tt>提示符，如当你复制代码到你的源文件中时。另一些时候，你可能想保留这个提示符，如录你复制例子到一个文档中，或把它发送到一个新闻组。当从<tt>shell</tt>复制时，<tt>PyCrust</tt>对这两种情况都提供了支持。 <span id="line-162"
class="anchor"/><span id="line-163" class="anchor"/><span id="line-164" class="anchor"/></p><p class="line867">
</p><h3 id="head-0049832f51ab8f19efe0967924afd12f6a89136a">1.2.7. 标准shell环境</h3>
<span id="line-165" class="anchor"/><span id="line-166" class="anchor"/><span id="line-167" class="anchor"/><p class="line862">在<tt>wxPython</tt>环境中，<tt>PyCrust</tt>的行为尽可能地与命令行的<tt>Python</tt> <tt>shell</tt>相同。不同的是，一旦<tt>Python</tt>代码被输入到了<tt>PyCrust</tt> <tt>shell</tt>中，就没有办法来中断该代码的运行。例如，假定你在<tt>PyCrust</tt>中写了一个无限循环，如下所示： <span id="line-168" class="anchor"/><span id="line-169" class="anchor"/></p><ul><li style="list-style-type: none;"><p class="line891"><tt>while</tt> <tt>True:</tt>  <span id="line-170" class="anchor"/></p></li></ul><p class="line862">...     <tt>print</tt> "<tt>Hello</tt>"  <span id="line-171" class="anchor"/>...  <span id="line-172" class="anchor"/><span id="line-173"
class="anchor"/></p><p class="line862">在你按下<tt>Enter</tt>之后，上面的代码被传送到<tt>Python</tt>解释器，<tt>PyCrust</tt>停止响应。要中断这个无限的循环，必须关闭<tt>PyCrust</tt>程序。这个缺点是与命令行的<tt>Python</tt> <tt>shell</tt>对比而言的。命令行的<tt>Python</tt> <tt>shell</tt>保留了处理键盘中断(<tt>Ctrl</tt>+C）的能力。在命令行的<tt>Python</tt> <tt>shell</tt>中你会看到如下的行为： <span id="line-174" class="anchor"/><span id="line-175" class="anchor"/></p><p class="line867"><span id="line-176" class="anchor"/></p><pre>    while True:
<span id="line-177" class="anchor"/>...     print "Hello"
<span id="line-178" class="anchor"/>...
<span id="line-179" class="anchor"/>Hello
<span id="line-180" class="anchor"/>Hello
<span id="line-181" class="anchor"/>Hello
<span id="line-182" class="anchor"/>Hello
<span id="line-183" class="anchor"/>Hello
<span id="line-184" class="anchor"/>Hello
<span id="line-185" class="anchor"/>Hello
<span id="line-186" class="anchor"/>Hello
<span id="line-187" class="anchor"/>Hello
<span id="line-188" class="anchor"/>Hello
<span id="line-189" class="anchor"/>Hello
<span id="line-190" class="anchor"/>Traceback (most recent call last):
<span id="line-191" class="anchor"/>  File " stdin ", line 2, in ?
<span id="line-192" class="anchor"/>KeyboardInterrupt
<span id="line-193" class="anchor"/></pre><span id="line-194" class="anchor"/><span id="line-195" class="anchor"/><p class="line862">在<tt>GUI</tt>环境中的事件处理的本质，使得设计出能够让<tt>PyCrust</tt>中断一个无限循环或在<tt>shell</tt>提示符中键入的长时间运行的代码序列的方法有很大的不同。将来的<tt>PyCrust</tt>版本可能会提供对这个缺点的一个解决办法。幸运的是，在<tt>PyCrust</tt>和标准命令<tt>shell</tt>之间只有这一个不同点。在其它方面，<tt>PyCrust</tt> <tt>shell</tt>和命令行的<tt>Python</tt> <tt>shell</tt>工作的完全一样。 <span id="line-196" class="anchor"/><span id="line-197" class="anchor"/><span id="line-198" class="anchor"/></p><p class="line867">
</p><h3 id="head-18510320a31e454e26338d374ac0783a8890cab8">1.2.8. 动态更新</h3>
<span id="line-199" class="anchor"/><span id="line-200" class="anchor"/><span id="line-201" class="anchor"/><p class="line862">当你在运行<tt>PyCrust</tt>时，<tt>PyCrust</tt>的<tt>shell</tt>的所有特性都是动态地被更新的，这意味着，诸如“自动完成”和“调用提示”等特性是有效的，即使是在<tt>shell</tt>提示符中定义的对象。例如图4.6和4.7所显示的会话，那么我们定义并使用了一个类。 <span id="line-202" class="anchor"/><span id="line-203" class="anchor"/></p><p class="line862">在图4.6中，<tt>PyCrust</tt>为新类显示了自动完成选项。 <span id="line-204" class="anchor"/>图4.6 <span id="line-205" class="anchor"/><span id="line-206" class="anchor"/></p><p class="line867"><img title="attachment:w4.6.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.6.gif"
class="attachment"/> <span id="line-207" class="anchor"/><span id="line-208" class="anchor"/></p><p class="line862">在图4.7中，<tt>PyCrust</tt>显示了关于类所定义的新的方法的调用提示。 <span id="line-209" class="anchor"/>图4.7 <span id="line-210" class="anchor"/><span id="line-211" class="anchor"/></p><p class="line867"><img title="attachment:w4.7.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.7.gif" class="attachment"/> <span id="line-212" class="anchor"/><span id="line-213" class="anchor"/><span id="line-214" class="anchor"/><span id="line-215" class="anchor"/></p><p class="line867">
</p><h2 id="head-9c0781bac84babdaadf5f216e6d02a60b60446b8">1.3. PyCrust</h2>
<span id="line-216" class="anchor"/><span id="line-217" class="anchor"/><p class="line867"><strong><tt>notebook</tt>的标签是干什么的？</strong> <span id="line-218" class="anchor"/><span id="line-219" class="anchor"/></p><p class="line867"><tt>PyCrust</tt>界面的下半部是一个<tt>notebook</tt>控件，<tt>notebook</tt>控件包括了几个带有有用信息的标签。<tt>PyCrust</tt>开始时，你所看到的标签是“<tt>Namespace</tt>”标签。 <span id="line-220" class="anchor"/><span id="line-221" class="anchor"/><span id="line-222" class="anchor"/></p><p class="line867">
</p><h3 id="head-983099b9ddf4922f9676193235d4a6b66146cbb0">1.3.1. Namespace标签</h3>
<span id="line-223" class="anchor"/><span id="line-224" class="anchor"/><span id="line-225" class="anchor"/><p class="line862">如图4.8所示，<tt>Namespace</tt>标签又被用<tt>wx.SplitterWindow</tt>控件分成两部分。左边包含一个树控件，它显示当前的名字空间，而右边显示在名字空间树中当前被选择的对象的细节。 <span id="line-226" class="anchor"/><span id="line-227" class="anchor"/></p><p class="line874">图4.8 <span id="line-228" class="anchor"/><span id="line-229" class="anchor"/></p><p class="line867"><img title="attachment:w4.8.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.8.gif" class="attachment"/> <span id="line-230" class="anchor"/><span id="line-231" class="anchor"/><span id="line-232" class="anchor"/></p><p
class="line862">名字空间树呈现一个关于在当前名字空间中所有对象的层次关系的视图。如果你运行<tt>Python</tt>的内建函数<tt>locals()</tt>，这些对象将作为返回结果。在图4.8中，我们已经导入了<tt>wx</tt>包并在名字空间树中选择了它。右边显示了所选择的项目的名字，它的类型和它的当前值。如果对象有与之相关联的源代码，<tt>PyCrust</tt>也将显示出来。这里，<tt>wx</tt>是一个<tt>wxPython</tt>包，所以<tt>PyCrust</tt>显示<tt>__init__.py</tt>文件的源代码，该文件位于<tt>wx</tt>目录中。 <span id="line-233" class="anchor"/><span id="line-234" class="anchor"/></p><p class="line862">右边显示的第一行是左边所选择的对象的全名，你可以把它复制并粘贴到<tt>PyCrust</tt>
<tt>shell</tt>或你的应用程序源码中。例如，我们在<tt>PyCrust</tt>中引入<tt>locale</tt>模块并选择名字空间树中<tt>locale</tt>/<tt>encoding_alias</tt>/'<tt>en</tt>'项，右边就显示了所选对象的完整名，你可以把它复制并粘贴到<tt>PyCrust</tt> <tt>shell</tt>中，如下所示： <span id="line-235" class="anchor"/><span id="line-236" class="anchor"/></p><p class="line867"><span id="line-237" class="anchor"/><span id="line-238" class="anchor"/><span id="line-239" class="anchor"/><span id="line-240" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
function isnumbered(obj) {
return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
var nlen = Math.max(0,chrs-(''+num).length), res = '';
while (nlen>0) { res += ' '; nlen-- }
return res+num+add;
}
function addnumber(did, nstart, nstep) {
var c = document.getElementById(did), l = c.firstChild, n = 1;
if (!isnumbered(c))
if (typeof nstart == 'undefined') nstart = 1;
if (typeof nstep  == 'undefined') nstep = 1;
n = nstart;
while (l != null) {
if (l.tagName == 'SPAN') {
var s = document.createElement('SPAN');
s.className = 'LineNumber'
s.appendChild(document.createTextNode(nformat(n,4,' ')));
n += nstep;
if (l.childNodes.length)
l.insertBefore(s, l.firstChild)
else
l.appendChild(s)
}
l = l.nextSibling;
}
return false;
}
function remnumber(did) {
var c = document.getElementById(did), l = c.firstChild;
if (isnumbered(c))
while (l != null) {
if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
l = l.nextSibling;
}
return false;
}
function togglenumber(did, nstart, nstep) {
var c = document.getElementById(did);
if (isnumbered(c)) {
remnumber(did);
} else {
addnumber(did,nstart,nstep);
}
return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-4d263145122af0f3f4f0761c6d7ad97b39683c1c_000\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-4d263145122af0f3f4f0761c6d7ad97b39683c1c_000', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-4d263145122af0f3f4f0761c6d7ad97b39683c1c_000" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">import</span> <span class="ID">locale</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="ID">locale</span><span class="Operator">.</span><span class="ID">encoding_alias</span><span class="Operator">[</span><span class="String">'en'</span><span class="Operator">]</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="String">'ISO8859-1'</span><span class="Text"/></span>
</pre></div><span id="line-241" class="anchor"/><span id="line-242" class="anchor"/><p class="line862">这里，<tt>PyCrust</tt>给我们提供了一个全名（ <tt>locale.encoding_alias</tt>['<tt>en</tt>']），它使用<tt>Python</tt>的索引（['<tt>en</tt>']）来引用<tt>encoding_alias</tt>目录中的指定项目。这个机制同样适用于列表(<tt>list)</tt>。如果你在名字空间树中发现了你想用在你的代码中的东西，那么<tt>PyCrust</tt>给了你这精确语法去完成这个任务。 <span id="line-243" class="anchor"/><span id="line-244" class="anchor"/><span id="line-245" class="anchor"/></p><p class="line867">
</p><h3 id="head-457820a791a8d3ba4301cc85e292a76cb52b74c4">1.3.2. Display标签</h3>
<span id="line-246" class="anchor"/><span id="line-247" class="anchor"/><span id="line-248" class="anchor"/><ul><li style="list-style-type: none;"><p class="line891"><tt>Display</tt>标签中用于显示一个对象。<tt>PyCrust</tt>有一个内建函数<tt>pp()</tt>，这个函数使用<tt>Python</tt>的<tt>pprint</tt>模块为显示一个对象。使用中不需要显式地引入和重复使用<tt>pprint</tt>，在<tt>Display</tt>中，这些信息随对象的更新而每次更新。 <span id="line-249" class="anchor"/><span id="line-250" class="anchor"/></p></li></ul><p class="line862">例如，如果我们在<tt>PyCrust</tt> <tt>shell</tt>中有一个列表，我们要在
<tt>Display</tt>标签中显示它的内容，我们可以在<tt>PyCrust</tt> <tt>shell</tt>中使用<tt>pp()</tt>，然后列表的内容就显示在 <tt>Display</tt>标签中了。以后每当我们改变了列表的内容， <tt>Display</tt>标签中的内容随即改变。 <span id="line-251" class="anchor"/><span id="line-252" class="anchor"/><span id="line-253" class="anchor"/><span id="line-254" class="anchor"/></p><p class="line867"><tt>Calltip</tt>标签显示了在<tt>Python</tt>
<tt>shell</tt>中最近调用提示的内容。如果你的调用要求大量的参数，那么你可以选择<tt>Calltip</tt>标签。当使用<tt>wxPython</tt>包时，存在着大量的类，这些类有许多方法，这些方法又要求许多参数。例如，为了创建一人<tt>wx.Button</tt>，你可能要提供八个参数，有一个是必须提供的，其它七个有默认的值。<tt>Calltip</tt>标签显示了关于<tt>wx.Button</tt>构造器的细节，如下所示： <span id="line-255" class="anchor"/><span id="line-256" class="anchor"/><span id="line-257" class="anchor"/><span id="line-258" class="anchor"/><span id="line-259" class="anchor"/><span id="line-260" class="anchor"/><span id="line-261"
class="anchor"/><span id="line-262" class="anchor"/><span id="line-263" class="anchor"/><span id="line-264" class="anchor"/><span id="line-265" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-1fac097f6ea53a587b0847025c18030dfa64e9ea_001\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-1fac097f6ea53a587b0847025c18030dfa64e9ea_001', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-1fac097f6ea53a587b0847025c18030dfa64e9ea_001" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">Window</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">int</span> <span class="ID">id</span><span class="Operator">=</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">,</span> <span class="ID">String</span> <span class="ID">label</span><span
class="Operator">=</span><span class="ID">EmptyString</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="ID">Point</span> <span class="ID">pos</span><span class="Operator">=</span><span class="ID">DefaultPosition</span><span class="Operator">,</span> <span class="ID">Size</span> <span class="ID">size</span><span class="Operator">=</span><span class="ID">DefaultSize</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   3 </span>    <span class="ID">long</span> <span class="ID">style</span><span class="Operator">=</span><span class="Number">0</span><span class="Operator">,</span> <span class="ID">Validator</span> <span class="ID">validator</span><span class="Operator">=</span><span class="ID">DefaultValidator</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   4 </span>    <span class="ID">String</span> <span class="ID">name</span><span class="Operator">=</span><span class="ID">ButtonNameStr</span><span class="Operator">)</span> <span class="Operator">-</span>  <span class="ID">Button</span></span>
<span class="line"><span class="LineNumber">   5 </span></span>
<span class="line"><span class="LineNumber">   6 </span><span class="ID">Create</span> <span class="ResWord">and</span> <span class="ID">show</span> <span class="ID">a</span> <span class="ID">button</span><span class="Operator">.</span> <span class="ID">The</span> <span class="ID">preferred</span> <span class="ID">way</span> <span class="ID">to</span> <span class="ID">create</span> <span class="ID">standard</span> <span class="ID">buttons</span></span>
<span class="line"><span class="LineNumber">   7 </span><span class="ResWord">is</span> <span class="ID">to</span> <span class="ID">use</span> <span class="ID">a</span> <span class="ID">standard</span> <span class="ID">ID</span> <span class="ResWord">and</span> <span class="ID">an</span> <span class="ID">empty</span> <span class="ID">label</span><span class="Operator">.</span> <span class="ID">In</span> <span class="ID">this</span> <span class="ID">case</span> <span class="ID">wxWigets</span> <span class="ID">will</span></span>
<span class="line"><span class="LineNumber">   8 </span><span class="ID">automatically</span> <span class="ID">use</span> <span class="ID">a</span> <span class="ID">stock</span> <span class="ID">label</span> <span class="ID">that</span> <span class="ID">corresponds</span> <span class="ID">to</span> <span class="ID">the</span> <span class="ID">ID</span> <span class="ID">given</span><span class="Operator">.</span> <span class="ID">In</span></span>
<span class="line"><span class="LineNumber">   9 </span><span class="ID">addition</span><span class="Operator">,</span> <span class="ID">the</span> <span class="ID">button</span> <span class="ID">will</span> <span class="ID">be</span> <span class="ID">decorated</span> <span class="ResWord">with</span> <span class="ID">stock</span> <span class="ID">icons</span> <span class="ID">under</span> <span class="ID">GTK</span><span class="Operator">+</span><span class="Number">2.</span><span class="Text"/></span>
</pre></div><span id="line-266" class="anchor"/><p class="line862">由于<tt>wxPython</tt>的类实际上是封装的C++的类，所以调用提示信息完全基于类的文档字符串。它们显示了底层C++类所需要的参数和类型信息。对于完全用<tt>Python</tt>语言定义的对象，<tt>PyCrust</tt>检查它们以确定它的参数特性。 <span id="line-267" class="anchor"/><span id="line-268" class="anchor"/><span id="line-269" class="anchor"/></p><p class="line867">
</p><h3 id="head-9989877760206dcbd6ae16bc311b7633fc22ebc6">1.3.3. Session标签</h3>
<span id="line-270" class="anchor"/><span id="line-271" class="anchor"/><span id="line-272" class="anchor"/><ul><li style="list-style-type: none;"><p class="line891"><tt>Session</tt>标签是一个简单的文本控件，它列出了在当前<tt>shell</tt>会话中所键入的所有命令。这使得剪切和粘贴命令以用在别处更为简单。 <span id="line-273" class="anchor"/><span id="line-274" class="anchor"/><span id="line-275" class="anchor"/></p></li></ul><p class="line867">
</p><h3 id="head-c09b3d0e729812919178b8e9559b1a41bf238f03">1.3.4. Dispatcher</h3>
<span id="line-276" class="anchor"/><span id="line-277" class="anchor"/><p class="line867"><strong>标签</strong> <span id="line-278" class="anchor"/><span id="line-279" class="anchor"/></p><p class="line867"><tt>PyCrust</tt>包括了一个名为<tt>dispatcher</tt>的模块，它提供了在一个应用程序中联系对象的机制。<tt>PyCrust</tt>使用<tt>dispatcher</tt>来维持它的界面的更新，主要是在命令从<tt>shell</tt>传送到<tt>Python</tt>解释器时。图4.9中的<tt>Dispatcher</tt>标签列出了关于信号经过分配机制后的路由。当使用<tt>PyCrust</tt>工作时，这是它的主要用处。 <span id="line-280" class="anchor"/><span
id="line-281" class="anchor"/></p><p class="line874">图4.9 <span id="line-282" class="anchor"/><span id="line-283" class="anchor"/></p><p class="line867"><img title="attachment:w4.9.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.9.gif" class="attachment"/> <span id="line-284" class="anchor"/><span id="line-285" class="anchor"/><span id="line-286" class="anchor"/></p><p
class="line862">这里的<tt>Dispatcher</tt>标签也演示了如何增加另一个标签到一个<tt>wx.Notebook</tt>控件。下面这个在<tt>Dispatcher</tt>标签上的文本控件的源码，演示了如何使用<tt>dispatcher</tt>模块： <span id="line-287" class="anchor"/><span id="line-288" class="anchor"/><span id="line-289" class="anchor"/><span id="line-290" class="anchor"/><span id="line-291" class="anchor"/><span id="line-292" class="anchor"/><span id="line-293" class="anchor"/><span id="line-294" class="anchor"/><span id="line-295" class="anchor"/><span id="line-296" class="anchor"/><span id="line-297"
class="anchor"/><span id="line-298" class="anchor"/><span id="line-299" class="anchor"/><span id="line-300" class="anchor"/><span id="line-301" class="anchor"/><span id="line-302" class="anchor"/><span id="line-303" class="anchor"/><span id="line-304" class="anchor"/><span id="line-305" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-6e584dabef4e88c7c0fe1a5427e197ce28e2db42_002\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-6e584dabef4e88c7c0fe1a5427e197ce28e2db42_002', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-6e584dabef4e88c7c0fe1a5427e197ce28e2db42_002" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">class</span> <span class="ID">DispatcherListing</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">TextCtrl</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="String">"""Text control containing all dispatches for session."""</span></span>
<span class="line"><span class="LineNumber">   3 </span></span>
<span class="line"><span class="LineNumber">   4 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">=</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   5 </span>        <span class="ID">style</span> <span class="Operator">=</span> <span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_MULTILINE</span> <span class="Operator">|</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_READONLY</span> <span class="Operator">|</span></span>
<span class="line"><span class="LineNumber">   6 </span>                 <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_RICH2</span> <span class="Operator">|</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_DONTWRAP</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   7 </span>        <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TextCtrl</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">,</span> <span class="ID">style</span><span class="Operator">=</span><span class="ID">style</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   8 </span>        <span class="ID">dispatcher</span><span class="Operator">.</span><span class="ID">connect</span><span class="Operator">(</span><span class="ID">receiver</span><span class="Operator">=</span><span class="ID">self</span><span class="Operator">.</span><span class="ID">spy</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   9 </span></span>
<span class="line"><span class="LineNumber">  10 </span>    <span class="ResWord">def</span> <span class="ID">spy</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">signal</span><span class="Operator">,</span> <span class="ID">sender</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  11 </span>        <span class="String">"""Receiver for Any signal from Any sender."""</span></span>
<span class="line"><span class="LineNumber">  12 </span>        <span class="ID">text</span> <span class="Operator">=</span> <span class="String">'%r from %s'</span> <span class="Operator">%</span> <span class="Operator">(</span><span class="ID">signal</span><span class="Operator">,</span> <span class="ID">sender</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  13 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetInsertionPointEnd</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span>        <span class="ID">start</span><span class="Operator">,</span> <span class="ID">end</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">GetSelection</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span>        <span class="ResWord">if</span> <span class="ID">start</span> <span class="Operator">!=</span> <span class="ID">end</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  16 </span>            <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetSelection</span><span class="Operator">(</span><span class="Number">0</span><span class="Operator">,</span> <span class="Number">0</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">AppendText</span><span class="Operator">(</span><span class="ID">text</span> <span class="Operator">+</span> <span class="String">'\n'</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-306" class="anchor"/><p class="line862">现在我们已经看到了<tt>PyCrust</tt>作为独立的<tt>Python</tt> <tt>shell</tt>和名子空间检查器能够做些什么，下面让我们关注在你的<tt>wxPython</tt>程序中，<tt>PyCrust</tt>的其它一些用法。 <span id="line-307" class="anchor"/><span id="line-308" class="anchor"/><span id="line-309" class="anchor"/><span id="line-310" class="anchor"/></p><p class="line867">
</p><h2 id="head-9fbcfd2689593a5b5b4a4d85097c24a55dbdb983">1.4. 如何将PyCrust应用于wxPython应用程序</h2>
<span id="line-311" class="anchor"/><p class="line874">。 <span id="line-312" class="anchor"/><span id="line-313" class="anchor"/></p><p class="line862">让我们假设你已经用<tt>wxPython</tt>创建了一个程序，并且你的程序正在工作，现在你想更好地了解它是如何工作的。在这章的前面你已经看到了<tt>PyCrust</tt>的特性，它们看起来对于理解你的程序的功能是非常有用的。 <span id="line-314" class="anchor"/><span id="line-315" class="anchor"/></p><p class="line862">通过将你的程序的名字传递给<tt>PyWrap</tt>，你能够用<tt>PyCrust</tt>
<tt>shell</tt>来启动你的程序，不需要对你的程序作任何的改变。下例4.2显示了一个名为<tt>spare.py</tt>的程序，我们准备对它使用<tt>PyCrust</tt>。 <span id="line-316" class="anchor"/><span id="line-317" class="anchor"/></p><p class="line874">例4.2 <span id="line-318" class="anchor"/><span id="line-319" class="anchor"/><span id="line-320" class="anchor"/><span id="line-321" class="anchor"/><span id="line-322" class="anchor"/><span id="line-323" class="anchor"/><span id="line-324" class="anchor"/><span id="line-325" class="anchor"/><span id="line-326" class="anchor"/><span
id="line-327" class="anchor"/><span id="line-328" class="anchor"/><span id="line-329" class="anchor"/><span id="line-330" class="anchor"/><span id="line-331" class="anchor"/><span id="line-332" class="anchor"/><span id="line-333" class="anchor"/><span id="line-334" class="anchor"/><span id="line-335" class="anchor"/><span id="line-336" class="anchor"/><span id="line-337" class="anchor"/><span id="line-338" class="anchor"/><span id="line-339" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-78f51bbd2c13795025d8374b18a6c95c36fb536b_003\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-78f51bbd2c13795025d8374b18a6c95c36fb536b_003', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-78f51bbd2c13795025d8374b18a6c95c36fb536b_003" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/env python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/></span>
<span class="line"><span class="LineNumber">   3 </span><span class="String">"""Spare.py is a starting point for simple wxPython programs."""</span></span>
<span class="line"><span class="LineNumber">   4 </span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">   6 </span></span>
<span class="line"><span class="LineNumber">   7 </span><span class="ResWord">class</span> <span class="ID">Frame</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   8 </span>    <span class="ResWord">pass</span></span>
<span class="line"><span class="LineNumber">   9 </span></span>
<span class="line"><span class="LineNumber">  10 </span><span class="ResWord">class</span> <span class="ID">App</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">App</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  11 </span></span>
<span class="line"><span class="LineNumber">  12 </span>    <span class="ResWord">def</span> <span class="ID">OnInit</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  13 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">Frame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">=</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">,</span> <span class="ID">title</span><span
class="Operator">=</span><span class="String">'Spare'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetTopWindow</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  16 </span>        <span class="ResWord">return</span> <span class="ID">True</span></span>
<span class="line"><span class="LineNumber">  17 </span></span>
<span class="line"><span class="LineNumber">  18 </span><span class="ResWord">if</span> <span class="ID">__name__</span> <span class="Operator">==</span> <span class="String">'__main__'</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  19 </span>    <span class="ID">app</span> <span class="Operator">=</span> <span class="ID">App</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  20 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">MainLoop</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-340" class="anchor"/><p class="line862">为了运行这个程序时使用<tt>PyCrust</tt>，要将该程序的全路径传递给<tt>PyWrap</tt>。在<tt>Linux</tt>上，命令行类似如下： <span id="line-341" class="anchor"/><span id="line-342" class="anchor"/></p><pre> $ pywrap spare.py
<span id="line-343" class="anchor"/></pre><span id="line-344" class="anchor"/><p class="line862">在<tt>windows</tt>下，命令行类似如下： <span id="line-345" class="anchor"/><span id="line-346" class="anchor"/></p><pre>    F:\ python pywrap.py spare.py
<span id="line-347" class="anchor"/></pre><p class="line874">  <span id="line-348" class="anchor"/>在开始的时候，<tt>PyWrap</tt>试图导入命令行所包括的模块。然后<tt>PyWrap</tt>在模块中寻找<tt>wx.App</tt>的子类，并创建子类的一个实例。之后，<tt>PyWrap</tt>创建一个带有<tt>shell</tt>的<tt>wx.py.crust.CrustFrame</tt>窗口，把这个应用程序对象显示在<tt>PyCrust</tt>的名字空间树中，并且启动 <tt>wxPython</tt>事件循环。 <span id="line-349" class="anchor"/><span id="line-350" class="anchor"/></p><p
class="line867"><tt>PyWrap</tt>的源码显示在例子4.3中。它显示了如何用少量的代码将大量的功能增加到你的程序中。 <span id="line-351" class="anchor"/><span id="line-352" class="anchor"/></p><p class="line874">例4.3 <span id="line-353" class="anchor"/><span id="line-354" class="anchor"/><span id="line-355" class="anchor"/><span id="line-356" class="anchor"/><span id="line-357" class="anchor"/><span id="line-358" class="anchor"/><span id="line-359" class="anchor"/><span id="line-360" class="anchor"/><span id="line-361" class="anchor"/><span id="line-362"
class="anchor"/><span id="line-363" class="anchor"/><span id="line-364" class="anchor"/><span id="line-365" class="anchor"/><span id="line-366" class="anchor"/><span id="line-367" class="anchor"/><span id="line-368" class="anchor"/><span id="line-369" class="anchor"/><span id="line-370" class="anchor"/><span id="line-371" class="anchor"/><span id="line-372" class="anchor"/><span id="line-373" class="anchor"/><span id="line-374" class="anchor"/><span id="line-375" class="anchor"/><span id="line-376" class="anchor"/><span id="line-377"
class="anchor"/><span id="line-378" class="anchor"/><span id="line-379" class="anchor"/><span id="line-380" class="anchor"/><span id="line-381" class="anchor"/><span id="line-382" class="anchor"/><span id="line-383" class="anchor"/><span id="line-384" class="anchor"/><span id="line-385" class="anchor"/><span id="line-386" class="anchor"/><span id="line-387" class="anchor"/><span id="line-388" class="anchor"/><span id="line-389" class="anchor"/><span id="line-390" class="anchor"/><span id="line-391" class="anchor"/><span id="line-392"
class="anchor"/><span id="line-393" class="anchor"/><span id="line-394" class="anchor"/><span id="line-395" class="anchor"/><span id="line-396" class="anchor"/><span id="line-397" class="anchor"/><span id="line-398" class="anchor"/><span id="line-399" class="anchor"/><span id="line-400" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-815a1982385665570f9067e492a79ffa623a4089_004\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-815a1982385665570f9067e492a79ffa623a4089_004', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-815a1982385665570f9067e492a79ffa623a4089_004" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="String">"""PyWrap is a command line utility that runs a python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="String">program with additional runtime tools, such as PyCrust."""</span></span>
<span class="line"><span class="LineNumber">   3 </span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ID">__author__</span> <span class="Operator">=</span> <span class="String">"Patrick K. O'Brien  pobrien@orbtech.com "</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ID">__cvsid__</span> <span class="Operator">=</span> <span class="String">"$Id: PyCrust.txt,v 1.15 2005/03/29 23:39:27 robind Exp $"</span></span>
<span class="line"><span class="LineNumber">   6 </span><span class="ID">__revision__</span> <span class="Operator">=</span> <span class="String">"$Revision: 1.15 $"</span><span class="Operator">[</span><span class="Number">11</span><span class="Operator">:</span><span class="Operator">-</span><span class="Number">2</span><span class="Operator">]</span></span>
<span class="line"><span class="LineNumber">   7 </span></span>
<span class="line"><span class="LineNumber">   8 </span><span class="ResWord">import</span> <span class="ID">os</span></span>
<span class="line"><span class="LineNumber">   9 </span><span class="ResWord">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber">  10 </span><span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">  11 </span><span class="ResWord">from</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">py</span><span class="Operator">.</span><span class="ID">crust</span> <span class="ResWord">import</span> <span class="ID">CrustFrame</span></span>
<span class="line"><span class="LineNumber">  12 </span></span>
<span class="line"><span class="LineNumber">  13 </span><span class="ResWord">def</span> <span class="ID">wrap</span><span class="Operator">(</span><span class="ID">app</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  14 </span>    <span class="ID">wx</span><span class="Operator">.</span><span class="ID">InitAllImageHandlers</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span>    <span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">CrustFrame</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  16 </span>    <span class="ID">frame</span><span class="Operator">.</span><span class="ID">SetSize</span><span class="Operator">(</span><span class="Operator">(</span><span class="Number">750</span><span class="Operator">,</span> <span class="Number">525</span><span class="Operator">)</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span>    <span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="ID">True</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  18 </span>    <span class="ID">frame</span><span class="Operator">.</span><span class="ID">shell</span><span class="Operator">.</span><span class="ID">interp</span><span class="Operator">.</span><span class="ID">locals</span><span class="Operator">[</span><span class="String">'app'</span><span class="Operator">]</span> <span class="Operator">=</span> <span class="ID">app</span></span>
<span class="line"><span class="LineNumber">  19 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">MainLoop</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  20 </span></span>
<span class="line"><span class="LineNumber">  21 </span><span class="ResWord">def</span> <span class="ID">main</span><span class="Operator">(</span><span class="ID">modulename</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  22 </span>    <span class="ID">sys</span><span class="Operator">.</span><span class="ID">path</span><span class="Operator">.</span><span class="ID">insert</span><span class="Operator">(</span><span class="Number">0</span><span class="Operator">,</span> <span class="ID">os</span><span class="Operator">.</span><span class="ID">curdir</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  23 </span>    <span class="ResWord">if</span> <span class="ResWord">not</span> <span class="ID">modulename</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  24 </span>        <span class="ResWord">if</span> <span class="ID">len</span><span class="Operator">(</span><span class="ID">sys</span><span class="Operator">.</span><span class="ID">argv</span><span class="Operator">)</span>   <span class="Number">2</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  25 </span>            <span class="ResWord">print</span> <span class="String">"Please specify a module name."</span></span>
<span class="line"><span class="LineNumber">  26 </span>            <span class="ResWord">raise</span> <span class="ID">SystemExit</span></span>
<span class="line"><span class="LineNumber">  27 </span>        <span class="ID">modulename</span> <span class="Operator">=</span> <span class="ID">sys</span><span class="Operator">.</span><span class="ID">argv</span><span class="Operator">[</span><span class="Number">1</span><span class="Operator">]</span></span>
<span class="line"><span class="LineNumber">  28 </span>        <span class="ResWord">if</span> <span class="ID">modulename</span><span class="Operator">.</span><span class="ID">endswith</span><span class="Operator">(</span><span class="String">'.py'</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  29 </span>            <span class="ID">modulename</span> <span class="Operator">=</span> <span class="ID">modulename</span><span class="Operator">[</span><span class="Operator">:</span><span class="Operator">-</span><span class="Number">3</span><span class="Operator">]</span></span>
<span class="line"><span class="LineNumber">  30 </span>    <span class="ID">module</span> <span class="Operator">=</span> <span class="ID">__import__</span><span class="Operator">(</span><span class="ID">modulename</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  31 </span>    <span class="Comment"># Find the App class.</span></span>
<span class="line"><span class="LineNumber">  32 </span><span class="Comment"/>    <span class="ID">App</span> <span class="Operator">=</span> <span class="ID">None</span></span>
<span class="line"><span class="LineNumber">  33 </span>    <span class="ID">d</span> <span class="Operator">=</span> <span class="ID">module</span><span class="Operator">.</span><span class="ID">__dict__</span></span>
<span class="line"><span class="LineNumber">  34 </span>    <span class="ResWord">for</span> <span class="ID">item</span> <span class="ResWord">in</span> <span class="ID">d</span><span class="Operator">.</span><span class="ID">keys</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  35 </span>        <span class="ResWord">try</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  36 </span>            <span class="ResWord">if</span> <span class="ID">issubclass</span><span class="Operator">(</span><span class="ID">d</span><span class="Operator">[</span><span class="ID">item</span><span class="Operator">]</span><span class="Operator">,</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">App</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  37 </span>                <span class="ID">App</span> <span class="Operator">=</span> <span class="ID">d</span><span class="Operator">[</span><span class="ID">item</span><span class="Operator">]</span></span>
<span class="line"><span class="LineNumber">  38 </span>        <span class="ResWord">except</span> <span class="Operator">(</span><span class="ID">NameError</span><span class="Operator">,</span> <span class="ID">TypeError</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  39 </span>            <span class="ResWord">pass</span></span>
<span class="line"><span class="LineNumber">  40 </span>    <span class="ResWord">if</span> <span class="ID">App</span> <span class="ResWord">is</span> <span class="ID">None</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  41 </span>        <span class="ResWord">print</span> <span class="String">"No App class was found."</span></span>
<span class="line"><span class="LineNumber">  42 </span>        <span class="ResWord">raise</span> <span class="ID">SystemExit</span></span>
<span class="line"><span class="LineNumber">  43 </span>    <span class="ID">app</span> <span class="Operator">=</span> <span class="ID">App</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  44 </span>    <span class="ID">wrap</span><span class="Operator">(</span><span class="ID">app</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  45 </span><span class="ResWord">if</span> <span class="ID">__name__</span> <span class="Operator">==</span> <span class="String">'__main__'</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  46 </span>    <span class="ID">main</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-401" class="anchor"/><p class="line862">运行了<tt>PyWrap</tt>命令之后，来自<tt>spare</tt>的简单的框架(<tt>frame)</tt>和<tt>PyCrust</tt>的框架都显示出来。 <span id="line-402" class="anchor"/><span id="line-403" class="anchor"/><span id="line-404" class="anchor"/></p><p class="line867"><strong><tt>PyCrust</tt></strong>  <span id="line-405" class="anchor"/><strong><tt>in</tt></strong>  <span id="line-406" class="anchor"/><strong><tt>action</tt></strong> <span id="line-407" class="anchor"/><span id="line-408"
class="anchor"/></p><p class="line862">现在让我们看看，在<tt>PyCrust</tt> <tt>shell</tt>中我们对<tt>spare.py</tt>应用程序框架做些什么。图4.10显示了这个结果。我们将通过导入<tt>wx</tt>和增加一个画板到我们的框架作为开始： <span id="line-409" class="anchor"/><span id="line-410" class="anchor"/><span id="line-411" class="anchor"/><span id="line-412" class="anchor"/><span id="line-413" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-6369863a3b0abfadfe659b4a8e24924174c5f5ee_005\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-6369863a3b0abfadfe659b4a8e24924174c5f5ee_005', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-6369863a3b0abfadfe659b4a8e24924174c5f5ee_005" dir="ltr"><span class="line"><span class="LineNumber">   1 </span>    <span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">panel</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Panel</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span
class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   3 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">panel</span><span class="Operator">.</span><span class="ID">SetBackgroundColour</span><span class="Operator">(</span><span class="String">'White'</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-414" class="anchor"/><p class="line867"><tt>True</tt> <span id="line-415" class="anchor"/><span id="line-416" class="anchor"/><span id="line-417" class="anchor"/></p><p class="line874">图4.10 <span id="line-418" class="anchor"/><span id="line-419" class="anchor"/></p><p class="line867"><img title="attachment:w4.10.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.10.gif" class="attachment"/> <span id="line-420" class="anchor"/><span id="line-421"
class="anchor"/><span id="line-422" class="anchor"/></p><p class="line874">增加到框架的画板开始时是默认的银灰色，然后它被改变到白色。然而，设置画板背景色不立即改变它的显示。这需要去触发一个事件来导致画板重绘，以使用它的新颜色属性。一个触发这样事件的方法是要求画板刷新自身： <span id="line-423" class="anchor"/><span id="line-424" class="anchor"/><span id="line-425" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-2dc04e5238e6327dd6ec2677ecb1703f867d3483_006\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-2dc04e5238e6327dd6ec2677ecb1703f867d3483_006', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-2dc04e5238e6327dd6ec2677ecb1703f867d3483_006" dir="ltr"><span class="line"><span class="LineNumber">   1 </span>        <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">panel</span><span class="Operator">.</span><span class="ID">Refresh</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-426" class="anchor"/><p class="line862">现在一个白色的画板显示了，我们对于理解<tt>wxPython</tt>如何工作的细节又进了一步。 <span id="line-427" class="anchor"/><span id="line-428" class="anchor"/></p><p class="line874">接下来，让我们增加一个状态栏： <span id="line-429" class="anchor"/><span id="line-430" class="anchor"/><span id="line-431" class="anchor"/><span id="line-432" class="anchor"/><span id="line-433" class="anchor"/><span id="line-434" class="anchor"/></p><div lang="en"
dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-9dd924e7f1d9b6cba9d47580f8d097c6482caf28_007\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-9dd924e7f1d9b6cba9d47580f8d097c6482caf28_007', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-9dd924e7f1d9b6cba9d47580f8d097c6482caf28_007" dir="ltr"><span class="line"><span class="LineNumber">   1 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">statusbar</span> <span class="Operator">=</span> <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">CreateStatusBar</span><span
class="Operator">(</span><span class="ID">number</span><span class="Operator">=</span><span class="Number">3</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">statusbar</span><span class="Operator">.</span><span class="ID">SetStatusText</span><span class="Operator">(</span><span class="String">"Left"</span><span class="Operator">,</span> <span class="Number">0</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   3 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">statusbar</span><span class="Operator">.</span><span class="ID">SetStatusText</span><span class="Operator">(</span><span class="String">"Center"</span><span class="Operator">,</span> <span class="Number">1</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   4 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">statusbar</span><span class="Operator">.</span><span class="ID">SetStatusText</span><span class="Operator">(</span><span class="String">"Right"</span><span class="Operator">,</span> <span class="Number">2</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-435" class="anchor"/><p class="line874">注意在不改变这个框架的尺寸情况下，这个状态栏在这个框架中是如何显示的。也要注意添加到三个状态栏中的文本的立即显示了出来，而不要求刷新。现在让我们增加一个菜单和一个菜单栏： <span id="line-436" class="anchor"/><span id="line-437" class="anchor"/><span id="line-438" class="anchor"/><span id="line-439" class="anchor"/><span id="line-440" class="anchor"/><span id="line-441" class="anchor"/><span id="line-442" class="anchor"/><span
id="line-443" class="anchor"/><span id="line-444" class="anchor"/><span id="line-445" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-f3af8fa32dce35a4c28f26d75610cf2d9cbf69e7_008\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-f3af8fa32dce35a4c28f26d75610cf2d9cbf69e7_008', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-f3af8fa32dce35a4c28f26d75610cf2d9cbf69e7_008" dir="ltr"><span class="line"><span class="LineNumber">   1 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">menubar</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">MenuBar</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="ID">menu</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Menu</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   3 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">menubar</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">menu</span><span class="Operator">,</span> <span class="String">"Primary"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   4 </span></span>
<span class="line"><span class="LineNumber">   5 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">SetMenuBar</span><span class="Operator">(</span><span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">menubar</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   6 </span>    <span class="ID">menu</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span class="String">"One"</span><span class="Operator">,</span> <span class="String">"First menu item"</span><span
class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   7 </span></span>
<span class="line"><span class="LineNumber">   8 </span>    <span class="ID">menu</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span class="String">"Two"</span><span class="Operator">,</span> <span class="String">"Second menu item"</span><span
class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-446" class="anchor"/><span id="line-447" class="anchor"/><p class="line862">当你在<tt>PyCrust</tt> <tt>shell</tt>中处理你自己的<tt>wxPython</tt>对象时，注意改变对你正在运行的程序的影响。试试回答后面的问题。在框架中菜单何时才实际显示出来的？在程序运行的时候，你能改变菜单的哪些属性？你能够让它们无效吗？交互地探究这些可以帮助你更好的理解<tt>wxPython</tt>，同时当你写真实的代码时给你带来更大的自信。 <span id="line-448" class="anchor"/><span
id="line-449" class="anchor"/></p><p class="line862">到目前，我们已经花了很多节讨论<tt>PyCrust</tt>，我们下面准备看一看<tt>Py</tt>包的其余的东西。 <span id="line-450" class="anchor"/><span id="line-451" class="anchor"/><span id="line-452" class="anchor"/><span id="line-453" class="anchor"/></p><p class="line867">
</p><h2 id="head-ea37861641f71702b80667691252f06dd53726a0">1.5. 在Py包中还有其它什么？</h2>
<span id="line-454" class="anchor"/><span id="line-455" class="anchor"/><span id="line-456" class="anchor"/><p class="line862">所有<tt>PyCrust</tt>中的程序都利用了<tt>Py</tt>包中的<tt>Python</tt>模块，诸如<tt>shell.py</tt>,<tt>crust.py</tt>,<tt>introspect.py</tt>和 <span id="line-457" class="anchor"/><tt>interpreter.py</tt>。这些程序是用来做<tt>PyCrust</tt>的建造块，你可以分别或一起使用它们。 <span id="line-458" class="anchor"/><span id="line-459" class="anchor"/></p><p
class="line867"><tt>PyCrust</tt>代表了组装包含在<tt>Py</tt>包中功能模块的一各方法。<tt>PyShell</tt>是另一方法，<tt>PyAlaMode</tt>是第三种。在这 <span id="line-460" class="anchor"/>些方法中，它们的底层代码大多数是相同的，只是外包装有所变化而已。因此，你可以把<tt>Py</tt>当做一个模块 <span id="line-461" class="anchor"/>库，你可以随意地在你的程序中的任何地方组装其中的模块，用来显示一个<tt>wxPython</tt> <tt>shell</tt>、一个代码编 <span id="line-462"
class="anchor"/>辑器或运行时内省信息。 <span id="line-463" class="anchor"/><span id="line-464" class="anchor"/></p><p class="line862">在<tt>Py</tt>包中，提供给用户界面功能的模块和没有这功能的模块有明显的区别。这个区别使得在你的程序中很 <span id="line-465" class="anchor"/>容易使用这些模块。以<tt>Py</tt>开头的模块是终端用户<tt>GUI</tt>程序，如<tt>PyCrust</tt>,<tt>PyShell</tt>,<tt>PyAlaMode</tt>和<tt>PyAlaCarte</tt>。在你的程序中，你不会想导入这些模块。下节说明终端用户模块。
<span id="line-466" class="anchor"/><span id="line-467" class="anchor"/><span id="line-468" class="anchor"/></p><p class="line867">
</p><h3 id="head-17c5c676c2a130d35858d648285eba74099ca7db">1.5.1. 使用GUI程序工作</h3>
<span id="line-469" class="anchor"/><span id="line-470" class="anchor"/><span id="line-471" class="anchor"/><span id="line-472" class="anchor"/><p class="line874">下表4.3说明了用户级程序。 <span id="line-473" class="anchor"/><span id="line-474" class="anchor"/></p><p class="line867"><tt>PyAlaCarte</tt>：简单的源代码编辑器。一次编辑一个文件。 <span id="line-475"
class="anchor"/><tt>PyAlaMode</tt>：多文件源代码编辑器。每个文件分别显示在一个<tt>notebook</tt>标签中。第一个标签包含一个<tt>PyCrust</tt>分隔窗口。 <span id="line-476" class="anchor"/><tt>PyCrust</tt>：合并了<tt>wxPython</tt> <tt>shell</tt>和<tt>notebook</tt>标签，<tt>notebook</tt>包含一个名字空间树查看器。 <span id="line-477" class="anchor"/><tt>PyFilling</tt>：简单的名字空间树查看器。这个程序自己不是很有用。它的存在只是作为如何使用底层库的一个例子。 <span id="line-478"
class="anchor"/><tt>PyShell</tt>：简单的<tt>wxPython</tt> <tt>shell</tt>界面，没有<tt>PyCrust</tt>中的<tt>notebook</tt>。功能上，<tt>PyShell</tt>中的<tt>wxPython</tt> <tt>shell</tt>和<tt>PyCrust</tt>中的是一样的。 <span id="line-479" class="anchor"/><tt>PyWrap</tt>：命令行工具，用以运行一个存在的程序和<tt>PyCrust</tt>框架，让你能够在<tt>PyCrust</tt> <tt>shell</tt>中处理这个应用程序。 <span id="line-480" class="anchor"/><span id="line-481" class="anchor"/><span id="line-482"
class="anchor"/></p><p class="line867">
</p><h3 id="head-2c2dd60943b107507f404df7815b34c35298ca5a">1.5.2. 使用支持模块工作</h3>
<span id="line-483" class="anchor"/><span id="line-484" class="anchor"/><span id="line-485" class="anchor"/><p class="line862">支持模块为终端用户提供了基本的功能，可以被导入你的程序中。这些模块是用来创建用户级<tt>Py</tt>程序的建 <span id="line-486" class="anchor"/><span id="line-487" class="anchor"/></p><p class="line862">造块。下表4.4列出了这些支持模块，它们是<tt>Py</tt>包的一部分，说明如下： <span id="line-488" class="anchor"/><span id="line-489" class="anchor"/></p><p
class="line867"><tt>buffer</tt>：支持文件编辑。 <span id="line-490" class="anchor"/><tt>crust</tt>：包含<tt>PyCrust</tt>应用程序独有的<tt>GUI</tt>元素。 <span id="line-491" class="anchor"/><tt>dispatcher</tt>：提供全局信号分派服务。 <span id="line-492"
class="anchor"/><tt>document</tt>：<tt>document</tt>模块包含一个非常简单的<tt>Document</tt>类，这个类是一个小的文件类。<tt>document</tt>跟踪不同的文件属性，如名字和路径，并提供<tt>read()</tt>和<tt>write()</tt>方法。<tt>Buffer</tt>类委托这些低级的读写操作给一个<tt>Document</tt>实例。 <span id="line-493" class="anchor"/><tt>editor</tt>：包含所有显示在<tt>PyAlaCarte</tt>和<tt>PyAlaMode</tt>程序中的<tt>GUI</tt>编辑部分。 <span id="line-494"
class="anchor"/><tt>editwindow</tt>：这个<tt>editwindow</tt>模块包含了一个简单的<tt>EditWindow</tt>类。这个类继承自<tt>wx.stc.StyledTextCtrl</tt> (<tt>STC)</tt>，并且提供了<tt>Py</tt>包中的<tt>STC</tt>的三种主要用法的所有共同的特性，这三种主要用法是：作为一个<tt>Python</tt> <tt>shell</tt>,作为一个源代码编辑器和作为一个只读源码显示器。 <span id="line-495"
class="anchor"/><tt>filling</tt>：包含所有的<tt>GUI</tt>控件，这些<tt>GUI</tt>控件让用户能够浏览对象名字空间并显示那些对象运行时的信息。 <span id="line-496" class="anchor"/><tt>frame</tt>：<tt>frame</tt>模块定义了一个<tt>Frame</tt>类，这个<tt>Frame</tt>类是<tt>Py</tt>包中所有其它<tt>frames</tt>的基类。菜单项根据当前状态和上下文不断地自我更新。 <span id="line-497" class="anchor"/><tt>images</tt>：<tt>images</tt>模块包含被不同<tt>Py</tt>程序使用的图标。 <span id="line-498"
class="anchor"/><tt>interpreter</tt>：<tt>Interpreter</tt>类负责提供自动完成列表，调用提示信息等。 <span id="line-499" class="anchor"/><tt>introspect</tt>：为一些方面提供多种内省类型，像调用提示和命令自动完成。 <span id="line-500" class="anchor"/><tt>pseudo</tt>：这个模块定义文件类类，文件类允许<tt>Interpreter</tt>类去重定向<tt>stdin</tt>,<tt>stdout</tt>,<tt>stderr</tt>。 <span id="line-501"
class="anchor"/><tt>shell</tt>：这个模块包含<tt>GUI</tt>元素，这些<tt>GUI</tt>元素定义显示在<tt>PyCrust</tt>,<tt>PyShell</tt>和<tt>PyAlaMode</tt>中的<tt>Python</tt> <tt>shell</tt>的界面。 <span id="line-502" class="anchor"/><tt>version</tt>：这个模块包含一个名为<tt>VERSION</tt>的字符串变量，<tt>VERSION</tt>代表<tt>Py</tt>当前的版本。 <span id="line-503" class="anchor"/><span id="line-504" class="anchor"/></p><p class="line874">下面我们讨论更复杂的模块。 <span id="line-505"
class="anchor"/><span id="line-506" class="anchor"/><span id="line-507" class="anchor"/></p><p class="line867"><strong><tt>buffer</tt>模块</strong> <span id="line-508" class="anchor"/><span id="line-509" class="anchor"/></p><p class="line867"><tt>buffer</tt>模块包含一个<tt>Buffer</tt>类，这个类支持文件的通常编辑。<tt>buffer</tt>有一些方法，例如<tt>new()</tt>, <tt>open()</tt>,  <span id="line-510" class="anchor"/><tt>hasChanged()</tt>,
<tt>save()</tt>,和<tt>saveAs()</tt>。文件操作基于<tt>buffer</tt>所委托的<tt>Document</tt>类的实例，<tt>Document</tt>类定义在<tt>document</tt>模块中。文件内容的实际编辑是通过<tt>Editor</tt>类的一个或多个实例发生的，<tt>Editor</tt>类定义在 <span id="line-511" class="anchor"/><tt>editor</tt>模块中。<tt>buffer</tt>扮演一个在一个或多个编辑器和实际物理文件之间的中间人。 <span id="line-512" class="anchor"/><span id="line-513" class="anchor"/></p><p
class="line867"><tt>Buffer</tt>类的一个独特的手法是每个<tt>buffer</tt>实例都分配了它自己的<tt>Python</tt>解释器实例。这个特点使得<tt>buffer</tt> <span id="line-514" class="anchor"/>能够被用在那些当编辑<tt>Python</tt>源代码文件时需要提供自动完成，调用提示和其它运行时帮助的应用程序中 <span id="line-515"
class="anchor"/>。每个<tt>buffer</tt>解释器都是完全独立的，并且在<tt>buffer</tt>的<tt>updateNamespace()</tt>方法被调用时更新。下例4.4显示了<tt>updateNamespace()</tt>方法的源代码。 <span id="line-516" class="anchor"/><span id="line-517" class="anchor"/></p><p class="line874">例4.4 <span id="line-518" class="anchor"/><span id="line-519" class="anchor"/><span id="line-520" class="anchor"/><span id="line-521" class="anchor"/><span id="line-522" class="anchor"/><span
id="line-523" class="anchor"/><span id="line-524" class="anchor"/><span id="line-525" class="anchor"/><span id="line-526" class="anchor"/><span id="line-527" class="anchor"/><span id="line-528" class="anchor"/><span id="line-529" class="anchor"/><span id="line-530" class="anchor"/><span id="line-531" class="anchor"/><span id="line-532" class="anchor"/><span id="line-533" class="anchor"/><span id="line-534" class="anchor"/><span id="line-535" class="anchor"/><span
id="line-536" class="anchor"/><span id="line-537" class="anchor"/><span id="line-538" class="anchor"/><span id="line-539" class="anchor"/><span id="line-540" class="anchor"/><span id="line-541" class="anchor"/><span id="line-542" class="anchor"/><span id="line-543" class="anchor"/><span id="line-544" class="anchor"/><span id="line-545" class="anchor"/><span id="line-546" class="anchor"/><span id="line-547" class="anchor"/><span id="line-548" class="anchor"/><span
id="line-549" class="anchor"/><span id="line-550" class="anchor"/><span id="line-551" class="anchor"/><span id="line-552" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-53b9703611f51aa66ad74713d6d66cacb2cd6feb_009\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-53b9703611f51aa66ad74713d6d66cacb2cd6feb_009', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-53b9703611f51aa66ad74713d6d66cacb2cd6feb_009" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">def</span> <span class="ID">updateNamespace</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   2 </span>        <span class="String">"""Update the namespace for autocompletion and calltips.</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="String">        Return True #if updated, False if there was an error."""</span></span>
<span class="line"><span class="LineNumber">   4 </span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ResWord">if</span> <span class="ResWord">not</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">interp</span> <span class="ID">o</span> <span class="ResWord">not</span> <span class="ID">hasattr</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">.</span><span class="ID">editor</span><span class="Operator">,</span> <span
class="String">'getText'</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   6 </span>        <span class="ResWord">return</span> <span class="ID">False</span></span>
<span class="line"><span class="LineNumber">   7 </span>        <span class="ID">syspath</span> <span class="Operator">=</span> <span class="ID">sys</span><span class="Operator">.</span><span class="ID">path</span></span>
<span class="line"><span class="LineNumber">   8 </span>        <span class="ID">sys</span><span class="Operator">.</span><span class="ID">path</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">syspath</span></span>
<span class="line"><span class="LineNumber">   9 </span>        <span class="ID">text</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">editor</span><span class="Operator">.</span><span class="ID">getText</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">text</span> <span class="Operator">=</span> <span class="ID">text</span><span class="Operator">.</span><span class="ID">replace</span><span class="Operator">(</span><span class="String">'\r\n'</span><span class="Operator">,</span> <span class="String">'\n'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  11 </span>        <span class="ID">text</span> <span class="Operator">=</span> <span class="ID">text</span><span class="Operator">.</span><span class="ID">replace</span><span class="Operator">(</span><span class="String">'\r'</span><span class="Operator">,</span> <span class="String">'\n'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  12 </span>        <span class="ID">name</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">modulename</span> <span class="ID">o</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">name</span></span>
<span class="line"><span class="LineNumber">  13 </span>        <span class="ID">module</span> <span class="Operator">=</span> <span class="ID">imp</span><span class="Operator">.</span><span class="ID">new_module</span><span class="Operator">(</span><span class="ID">name</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span>        <span class="ID">newspace</span> <span class="Operator">=</span> <span class="ID">module</span><span class="Operator">.</span><span class="ID">__dict__</span><span class="Operator">.</span><span class="ID">copy</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span>        <span class="ResWord">try</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  16 </span>                <span class="ResWord">try</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  17 </span>                        <span class="ID">code</span> <span class="Operator">=</span> <span class="ID">compile</span><span class="Operator">(</span><span class="ID">text</span><span class="Operator">,</span> <span class="ID">name</span><span class="Operator">,</span> <span class="String">'exec'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  18 </span>                <span class="ResWord">except</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  19 </span>                        <span class="ResWord">raise</span></span>
<span class="line"><span class="LineNumber">  20 </span>                <span class="ResWord">try</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  21 </span>                        <span class="ResWord">exec</span> <span class="ID">code</span> <span class="ResWord">in</span> <span class="ID">newspace</span></span>
<span class="line"><span class="LineNumber">  22 </span>                <span class="ResWord">except</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  23 </span>                        <span class="ResWord">raise</span></span>
<span class="line"><span class="LineNumber">  24 </span>                <span class="ResWord">else</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  25 </span>                        <span class="Comment"># No problems, so update the namespace.</span></span>
<span class="line"><span class="LineNumber">  26 </span><span class="Comment"/>                        <span class="ID">self</span><span class="Operator">.</span><span class="ID">interp</span><span class="Operator">.</span><span class="ID">locals</span><span class="Operator">.</span><span class="ID">clear</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  27 </span>                        <span class="ID">self</span><span class="Operator">.</span><span class="ID">interp</span><span class="Operator">.</span><span class="ID">locals</span><span class="Operator">.</span><span class="ID">update</span><span class="Operator">(</span><span class="ID">newspace</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  28 </span>                        <span class="ResWord">return</span> <span class="ID">True</span></span>
<span class="line"><span class="LineNumber">  29 </span>        <span class="ResWord">finally</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  30 </span>                <span class="ID">sys</span><span class="Operator">.</span><span class="ID">path</span> <span class="Operator">=</span> <span class="ID">syspath</span></span>
<span class="line"><span class="LineNumber">  31 </span>                <span class="ResWord">for</span> <span class="ID">m</span> <span class="ResWord">in</span> <span class="ID">sys</span><span class="Operator">.</span><span class="ID">modules</span><span class="Operator">.</span><span class="ID">keys</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  32 </span>                <span class="ResWord">if</span> <span class="ID">m</span> <span class="ResWord">not</span> <span class="ResWord">in</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">modules</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  33 </span>                        <span class="ResWord">del</span> <span class="ID">sys</span><span class="Operator">.</span><span class="ID">modules</span><span class="Operator">[</span><span class="ID">m</span><span class="Operator">]</span><span class="Text"/></span>
</pre></div><span id="line-553" class="anchor"/><p class="line862">这个方法使用<tt>Python</tt>内建的<tt>compile</tt>方法编译编辑器中的文本，然后使用关键词<tt>exec</tt>来执行。如果编译成 <span id="line-554" class="anchor"/>功，将放置若干变量到<tt>newspace</tt>名字空间中。通过用执行的结果重置解释器的局部名字空间，解释器支持 <span id="line-555" class="anchor"/>访问定义在编辑器的<tt>buffer</tt>中的任何类，方法或变量。 <span id="line-556" class="anchor"/><span
id="line-557" class="anchor"/><span id="line-558" class="anchor"/></p><p class="line867"><strong><tt>crust</tt> 模块</strong> <span id="line-559" class="anchor"/><span id="line-560" class="anchor"/></p><p
class="line867"><tt>crust</tt>模块包含6个<tt>GUI</tt>元素，它们专门用于<tt>PyCrust</tt>应用程序的。这最常用的类是<tt>CrustFrame</tt>，它是<tt>wx.Frame</tt>的子类。如果你再看一下例4.3，你能看到<tt>PyWrap</tt>程序是如何导入<tt>CrustFrame</tt>并创建其一个实例的。这是嵌入一个<tt>PyCrust</tt>框架到你自己的程序中的最简单的方法。如果你想要比一个完整的框架更小的东西，你可以使用下表4.5所列的一个或多个类。 <span id="line-561" class="anchor"/><span id="line-562"
class="anchor"/></p><p class="line874">表4.5 <span id="line-563" class="anchor"/><span id="line-564" class="anchor"/></p><p class="line867"><tt>Crust</tt>：基于<tt>wx.SplitterWindow</tt>并包含一个<tt>shell</tt>和带有运行时信息的<tt>notebook</tt>。 <span id="line-565" class="anchor"/><tt>Display</tt>：样式文本控件，使用<tt>Pretty</tt> <tt>Print</tt>显示一个对象。 <span id="line-566" class="anchor"/><tt>Calltip</tt>：文本控件，包含最近<tt>shell</tt>调用帮助。
<span id="line-567" class="anchor"/><tt>SessionListing</tt>：文本控件，包含关于一个会话的所有命令。 <span id="line-568" class="anchor"/><tt>DispatcherListing</tt>：文本控件，包含关于一个会话的所有分派。 <span id="line-569" class="anchor"/><tt>CrustFrame</tt>：一个框架，包含一个<tt>Crust</tt>分隔窗口。 <span id="line-570" class="anchor"/><span id="line-571" class="anchor"/></p><p
class="line862">这些<tt>GUI</tt>元素可以被用在任何<tt>wxPython</tt>程序中，以提供有用的可视化内省。 <span id="line-572" class="anchor"/><span id="line-573" class="anchor"/><span id="line-574" class="anchor"/></p><p class="line867"><strong><tt>dispatcher</tt>模块</strong> <span id="line-575" class="anchor"/><span id="line-576" class="anchor"/></p><p
class="line867"><tt>dispatcher</tt>提供了全局信号分派服务。那意味它扮演着一个中间人，使得对象能够发送和接受消息，而无须知道彼此。所有它们需要知道的是这个正在发送的信号（通常是一个简单的字符串）。一个或多个对象可以要求这个<tt>dispatcher</tt>，当信号已发出时去通知它们，并且一个或多个对象可以告诉这个<tt>dispatcher</tt>去发送特殊的信号。 <span id="line-577" class="anchor"/><span id="line-578" class="anchor"/></p><p
class="line862">下例4.5是关于为什么<tt>dispatcher</tt>是如此有用的一个例子。因为所有的<tt>Py</tt>程序都是建造在相同的底层模块之上的，所以<tt>PyCrust</tt>和<tt>PyShell</tt>使用几乎相同的代码。这唯一的不同是，<tt>PyCrust</tt>包括了一个带有额外功能的<tt>notebook</tt>，如名字空间树查看器，当命令被发送到解释器时，名字空间树查看器更新。在一个命令通过解释器时，解释器使用<tt>dispatcher</tt>发送一个信号： <span id="line-579" class="anchor"/><span id="line-580"
class="anchor"/></p><p class="line862">例4.5 经由<tt>dispatcher</tt>模块来发送命令的代码 <span id="line-581" class="anchor"/><span id="line-582" class="anchor"/><span id="line-583" class="anchor"/><span id="line-584" class="anchor"/><span id="line-585" class="anchor"/><span id="line-586" class="anchor"/><span id="line-587" class="anchor"/><span id="line-588" class="anchor"/><span id="line-589" class="anchor"/><span id="line-590" class="anchor"/><span
id="line-591" class="anchor"/><span id="line-592" class="anchor"/><span id="line-593" class="anchor"/><span id="line-594" class="anchor"/><span id="line-595" class="anchor"/><span id="line-596" class="anchor"/><span id="line-597" class="anchor"/><span id="line-598" class="anchor"/><span id="line-599" class="anchor"/><span id="line-600" class="anchor"/><span id="line-601" class="anchor"/><span id="line-602" class="anchor"/><span id="line-603"
class="anchor"/><span id="line-604" class="anchor"/><span id="line-605" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-6f4fe5b587ba2e1c8a40ed4f9cf9df95056e9682_010\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-6f4fe5b587ba2e1c8a40ed4f9cf9df95056e9682_010', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-6f4fe5b587ba2e1c8a40ed4f9cf9df95056e9682_010" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">def</span> <span class="ID">push</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">command</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   2 </span>        <span class="String">"""Send command to the interpreter to be executed.</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="String">        Because this may be called recursively, we append a new list</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="String">        onto the commandBuffer list and then append commands into</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="String">        that. If the passed in command is part of a multi-line</span></span>
<span class="line"><span class="LineNumber">   6 </span><span class="String">        command we keep appending the pieces to the last list in</span></span>
<span class="line"><span class="LineNumber">   7 </span><span class="String">        commandBuffer until we have a complete command. If not, we</span></span>
<span class="line"><span class="LineNumber">   8 </span><span class="String">        delete that last list."""</span></span>
<span class="line"><span class="LineNumber">   9 </span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">command</span> <span class="Operator">=</span> <span class="ID">str</span><span class="Operator">(</span><span class="ID">command</span><span class="Operator">)</span> <span class="Comment"># In case the command is unicode.</span></span>
<span class="line"><span class="LineNumber">  11 </span>        <span class="ResWord">if</span> <span class="ResWord">not</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">more</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  12 </span>                <span class="ResWord">try</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  13 </span>                        <span class="ResWord">del</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">commandBuffer</span><span class="Operator">[</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">]</span></span>
<span class="line"><span class="LineNumber">  14 </span>                <span class="ResWord">except</span> <span class="ID">IndexError</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  15 </span>                        <span class="ResWord">pass</span></span>
<span class="line"><span class="LineNumber">  16 </span>                <span class="ResWord">if</span> <span class="ResWord">not</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">more</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  17 </span>                        <span class="ID">self</span><span class="Operator">.</span><span class="ID">commandBuffer</span><span class="Operator">.</span><span class="ID">append</span><span class="Operator">(</span><span class="Operator">[</span><span class="Operator">]</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  18 </span>                        <span class="ID">self</span><span class="Operator">.</span><span class="ID">commandBuffer</span><span class="Operator">[</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">]</span><span class="Operator">.</span><span class="ID">append</span><span class="Operator">(</span><span class="ID">command</span><span
class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  19 </span>                        <span class="ID">source</span> <span class="Operator">=</span> <span class="String">'\n'</span><span class="Operator">.</span><span class="ID">join</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">.</span><span class="ID">commandBuffer</span><span class="Operator">[</span><span class="Operator">-</span><span
class="Number">1</span><span class="Operator">]</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  20 </span>                        <span class="ID">more</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">more</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">runsource</span><span class="Operator">(</span><span class="ID">source</span><span
class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  21 </span>                        <span class="ID">dispatcher</span><span class="Operator">.</span><span class="ID">send</span><span class="Operator">(</span><span class="ID">signal</span><span class="Operator">=</span><span class="String">'Interpreter.push'</span><span class="Operator">,</span> <span class="ID">sender</span><span class="Operator">=</span><span class="ID">self</span><span
class="Operator">,</span></span>
<span class="line"><span class="LineNumber">  22 </span>                                <span class="ID">command</span><span class="Operator">=</span><span class="ID">command</span><span class="Operator">,</span> <span class="ID">more</span><span class="Operator">=</span><span class="ID">more</span><span class="Operator">,</span> <span class="ID">source</span><span class="Operator">=</span><span class="ID">source</span><span
class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  23 </span>                        <span class="ResWord">return</span> <span class="ID">more</span><span class="Text"/></span>
</pre></div><span id="line-606" class="anchor"/><span id="line-607" class="anchor"/><p class="line867"><tt>crust</tt>中的各有关部分和<tt>filling</tt>模块在它们的构造器中通过连接到<tt>dispatcher</tt>,自己作为信号的接受器。下例4.6显示了关于出现在<tt>PyCrust</tt>的<tt>Session</tt>标签中的<tt>SessionListing</tt>控件的源码： <span id="line-608" class="anchor"/><span id="line-609" class="anchor"/></p><p class="line862">例4.6 <tt>PyCrust</tt>
<tt>session</tt>标签的代码 <span id="line-610" class="anchor"/><span id="line-611" class="anchor"/><span id="line-612" class="anchor"/><span id="line-613" class="anchor"/><span id="line-614" class="anchor"/><span id="line-615" class="anchor"/><span id="line-616" class="anchor"/><span id="line-617" class="anchor"/><span id="line-618" class="anchor"/><span id="line-619" class="anchor"/><span id="line-620" class="anchor"/><span id="line-621"
class="anchor"/><span id="line-622" class="anchor"/><span id="line-623" class="anchor"/><span id="line-624" class="anchor"/><span id="line-625" class="anchor"/><span id="line-626" class="anchor"/><span id="line-627" class="anchor"/><span id="line-628" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-de28634dffb366f3644d5f1070ef6124293691e0_011\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-de28634dffb366f3644d5f1070ef6124293691e0_011', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-de28634dffb366f3644d5f1070ef6124293691e0_011" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">class</span> <span class="ID">SessionListing</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">TextCtrl</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   2 </span>        <span class="String">"""Text control containing all commands for session."""</span></span>
<span class="line"><span class="LineNumber">   3 </span></span>
<span class="line"><span class="LineNumber">   4 </span>        <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">=</span><span
class="Operator">-</span><span class="Number">1</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   5 </span>                <span class="ID">style</span> <span class="Operator">=</span> <span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_MULTILINE</span> <span class="Operator">|</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_READONLY</span> <span class="Operator">|</span><span
class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_RICH2</span> <span class="Operator">|</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TE_DONTWRAP</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   6 </span></span>
<span class="line"><span class="LineNumber">   7 </span>                <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TextCtrl</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span
class="Operator">,</span> <span class="ID">style</span><span class="Operator">=</span><span class="ID">style</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   8 </span>                <span class="ID">dispatcher</span><span class="Operator">.</span><span class="ID">connect</span><span class="Operator">(</span><span class="ID">receiver</span><span class="Operator">=</span><span class="ID">self</span><span class="Operator">.</span><span class="ID">push</span><span class="Operator">,</span><span class="ID">signal</span><span
class="Operator">=</span><span class="String">'Interpreter.push'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   9 </span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ResWord">def</span> <span class="ID">push</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">command</span><span class="Operator">,</span> <span class="ID">more</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  11 </span>                <span class="String">"""Receiver for Interpreter.push signal."""</span></span>
<span class="line"><span class="LineNumber">  12 </span>                <span class="ResWord">if</span> <span class="ID">command</span> <span class="ResWord">and</span> <span class="ResWord">not</span> <span class="ID">more</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  13 </span>                        <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetInsertionPointEnd</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span>                        <span class="ID">start</span><span class="Operator">,</span> <span class="ID">end</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">GetSelection</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span>                <span class="ResWord">if</span> <span class="ID">start</span> <span class="Operator">!=</span> <span class="ID">end</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  16 </span>                        <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetSelection</span><span class="Operator">(</span><span class="Number">0</span><span class="Operator">,</span> <span class="Number">0</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span>                        <span class="ID">self</span><span class="Operator">.</span><span class="ID">AppendText</span><span class="Operator">(</span><span class="ID">command</span> <span class="Operator">+</span> <span class="String">'\n'</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-629" class="anchor"/><span id="line-630" class="anchor"/><p class="line862">注意<tt>SessionListing</tt>的接受器（<tt>push()</tt>方法）是如何忽略由解释器发送来的<tt>sender</tt>和<tt>source</tt>参数的。<tt>dispatcher</tt>非常灵活，并且只发送接受器能接受的参数。 <span id="line-631" class="anchor"/><span id="line-632" class="anchor"/><span id="line-633" class="anchor"/></p><p
class="line867"><strong><tt>editor</tt>模块</strong> <span id="line-634" class="anchor"/><span id="line-635" class="anchor"/></p><p class="line867"><tt>editor</tt>模块包含了出现在<tt>PyAlaCarte</tt>和<tt>PyAlaMode</tt>程序中的所有<tt>GUI</tt>编辑组件。如果你愿意在你的程序中包括一个<tt>Python</tt>源代码编辑器，那么使用在下表4.6中所说明的类。 <span id="line-636" class="anchor"/><span id="line-637" class="anchor"/></p><p
class="line874">这些类可以被使用在任何程序中以提供有用的代码风格编辑功能。 <span id="line-638" class="anchor"/><span id="line-639" class="anchor"/></p><p class="line862">表4.6 定义在<tt>editor</tt>模块中的类 <span id="line-640" class="anchor"/><span id="line-641" class="anchor"/></p><p
class="line867"><tt>EditerFrame</tt>：被<tt>PyAlaCarte</tt>用来支持一次一个文件的编辑。<tt>EditerFrame</tt>是来自<tt>frame</tt>模块的较一般的<tt>Frame</tt>类的子类。 <span id="line-642" class="anchor"/><tt>EditorNotebookFrame</tt>：<tt>EditerFrame</tt>的子类，它通过增加一个<tt>notebook</tt>界面和同时编辑多个文件的能力扩展了<tt>EditerFrame</tt>。它是一个被<tt>PyAlaMode</tt>使用的<tt>frame</tt>类。 <span id="line-643"
class="anchor"/><tt>EditorNotebook</tt>：这个控件被<tt>EditorNotebookFrame</tt>用来在各自的标签中显示各自的文件。 <span id="line-644" class="anchor"/><tt>Editor</tt>：管理一个<tt>buffer</tt>和与之相关的<tt>EditWindow</tt>之间的关联。 <span id="line-645" class="anchor"/><tt>EditWindow</tt>：基于<tt>StyledTextCtrl</tt>的文本编辑控件。 <span id="line-646" class="anchor"/><span id="line-647" class="anchor"/><span id="line-648"
class="anchor"/></p><p class="line867"><strong><tt>filling</tt>模块</strong> <span id="line-649" class="anchor"/><span id="line-650" class="anchor"/></p><p class="line867"><tt>filling</tt>模块包含所有使用户能够浏览对象的名字空间和显示关于那些对象的运行时信息的<tt>GUI</tt>控件。 <span id="line-651" class="anchor"/>定义在<tt>filling</tt>模块中的四个类的说明见下表4.7 <span id="line-652" class="anchor"/><span id="line-653"
class="anchor"/></p><p class="line874">表4.7 <span id="line-654" class="anchor"/><span id="line-655" class="anchor"/></p><p class="line867"><tt>FillingTree</tt>：基于<tt>wx.TreeCtrl</tt>，<tt>FillingTree</tt>提供对象名字空间的分级树。 <span id="line-656" class="anchor"/><tt>FillingText</tt>：<tt>editwindow.EditWindow</tt>的子类，用以显示当前在<tt>FillingTree</tt>所选择的对象的细节。 <span id="line-657"
class="anchor"/><tt>Filling</tt>：一个<tt>wx.SplitterWindow</tt>，它的左边包括一个<tt>FillingTree</tt>，右边包括一个<tt>FillingText</tt>。 <span id="line-658" class="anchor"/><tt>FillingFrame</tt>：一个包含<tt>Filling</tt>分隔窗口的框架。双击<tt>filling</tt>树中的一项将打开一个新的<tt>FillingFrame</tt>，其中被选择的项作为树的根。 <span id="line-659" class="anchor"/><span id="line-660" class="anchor"/></p><p
class="line862">使用这些类，使你能够容量地创建<tt>Python</tt>名字空间的分级树。如果你设置你的数据为<tt>Python</tt>对象，这能够用作一个快速的数据浏览器。 <span id="line-661" class="anchor"/><span id="line-662" class="anchor"/><span id="line-663" class="anchor"/></p><p class="line867"><strong><tt>interpreter</tt>模块</strong> <span id="line-664" class="anchor"/><span id="line-665" class="anchor"/></p><p
class="line867"><tt>interpreter</tt>模块定义了一个<tt>Interpreter</tt>类，基于<tt>Python</tt>标准库中的<tt>code</tt>模块的<tt>Interactive</tt>- <span id="line-666" class="anchor"/><tt>Interpreter</tt>类。除了负责发送源代码给<tt>Python</tt>外，<tt>Interpreter</tt>类还负责提供自动完成列表，调用提示信息和甚至触发自动完成特性的关键码（通常是"."）。 <span id="line-667" class="anchor"/><span id="line-668" class="anchor"/></p><p
class="line862">由于这清楚的责任划分，你可以创建你自己的<tt>Interpreter</tt>的子类并传递其一个实例到<tt>PyCrust</tt> <tt>shell</tt>，从而代替默认的<tt>interpreter</tt>。这已经应用到了一些程序中以支持自定义评议种类，而仍然利用<tt>PyCrust</tt>环境。 <span id="line-669" class="anchor"/><span id="line-670" class="anchor"/><span id="line-671" class="anchor"/></p><p class="line867"><strong><tt>introspect</tt>模块</strong> <span
id="line-672" class="anchor"/><span id="line-673" class="anchor"/></p><p class="line867"><tt>introspect</tt>模块被<tt>Interpreter</tt>和<tt>FillingTree</tt>类使用。它为调用提示和命令自动完成提供了多种内省类型支持功能。下面显示了<tt>wx.py.introspect</tt>的用法，它得到一个列表对象的所有属性的名字，排除了那些以双下划线开始的属性： <span id="line-674" class="anchor"/><span id="line-675" class="anchor"/><span id="line-676"
class="anchor"/><span id="line-677" class="anchor"/><span id="line-678" class="anchor"/><span id="line-679" class="anchor"/><span id="line-680" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-9fc67c0a7021d872c11adc0591f0268866f184d8_012\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-9fc67c0a7021d872c11adc0591f0268866f184d8_012', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-9fc67c0a7021d872c11adc0591f0268866f184d8_012" dir="ltr"><span class="line"><span class="LineNumber">   1 </span>    <span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="ID">L</span> <span class="Operator">=</span> <span class="Operator">[</span><span class="Number">1</span><span class="Operator">,</span> <span class="Number">2</span><span class="Operator">,</span> <span class="Number">3</span><span class="Operator">]</span></span>
<span class="line"><span class="LineNumber">   3 </span>    <span class="ID">wx</span><span class="Operator">.</span><span class="ID">py</span><span class="Operator">.</span><span class="ID">introspect</span><span class="Operator">.</span><span class="ID">getAttributeNames</span><span class="Operator">(</span><span class="ID">L</span><span class="Operator">,</span> <span class="ID">includeDouble</span><span
class="Operator">=</span><span class="ID">False</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="Operator">[</span><span class="String">'append'</span><span class="Operator">,</span> <span class="String">'count'</span><span class="Operator">,</span> <span class="String">'extend'</span><span class="Operator">,</span> <span class="String">'index'</span><span class="Operator">,</span> <span class="String">'insert'</span><span
class="Operator">,</span> <span class="String">'pop'</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="String">'remove'</span><span class="Operator">,</span> <span class="String">'reverse'</span><span class="Operator">,</span> <span class="String">'sort'</span><span class="Operator">]</span><span class="Text"/></span>
</pre></div><span id="line-681" class="anchor"/><span id="line-682" class="anchor"/><p class="line867"><tt>getAttributeNames()</tt>函数被<tt>FillingTree</tt>类使用以生成它的名字空间分级。理解内省模块的最好方法是关注单元测试。查看你的<tt>Python</tt>安装目录的<tt>Lib</tt>/<tt>site</tt>-<tt>packages</tt>/<tt>wx</tt>/<tt>py</tt>/<tt>tests</tt>中的<tt>test_introspect.py</tt>文件。 <span id="line-683"
class="anchor"/><span id="line-684" class="anchor"/><span id="line-685" class="anchor"/></p><p class="line867"><strong><tt>shell</tt>模块</strong> <span id="line-686" class="anchor"/><span id="line-687" class="anchor"/></p><p class="line867"><tt>shell</tt>模块包含出现在<tt>PyCrust</tt>, <tt>PyShell</tt>, 和<tt>PyAlaMode</tt>定义<tt>Python</tt>
<tt>shell</tt>界面的<tt>GUI</tt>元素。下表4.8提供了每个元素的说明。这最常用的类是<tt>ShellFrame</tt>,它是<tt>frame.Frame</tt>的子类。它包含一个<tt>Shell</tt>类的实例，<tt>Shell</tt>类处理提供交互<tt>Python</tt>环境的大部分工作。 <span id="line-688" class="anchor"/><span id="line-689" class="anchor"/></p><p class="line862">表4.8 定义在<tt>shell</tt>模块中的类 <span id="line-690" class="anchor"/><span
id="line-691" class="anchor"/></p><p class="line867"><tt>Shell</tt>：<tt>Python</tt> <tt>shell</tt>基于<tt>wx.stc.StyleTextCtrl</tt>。<tt>Shell</tt>子类化<tt>editwindow.EditWindow</tt>，然后使底层的文本控件的行为像一具<tt>Python</tt> <tt>shell</tt>，而非一个源码文件编辑器。 <span id="line-692"
class="anchor"/><tt>ShellFacade</tt>：简化的与所有<tt>shell</tt>相关的功能的接口。它是半透明的，它仍然是可访问的，尽管只有一些是对<tt>shell</tt>用户可见的。 <span id="line-693" class="anchor"/><tt>ShellFrame</tt>：一个包含一个<tt>Shell</tt>窗口的框架。 <span id="line-694" class="anchor"/><span id="line-695" class="anchor"/></p><p
class="line867"><tt>ShellFacade</tt>类在<tt>PyCrust</tt>的开发期间被创建，它作为在<tt>shell</tt>中访问<tt>shell</tt>对象自身时去简化事情的一个方法。当你启动<tt>PyCrust</tt>或<tt>PyShell</tt>时，<tt>Shell</tt>类的实例在<tt>Python</tt> <tt>shell</tt>中的有效的。例如，你可以在<tt>shell</tt>提示符下调用<tt>shell</tt>的<tt>about()</tt>方法，如下所示： <span id="line-696" class="anchor"/><span id="line-697"
class="anchor"/></p><pre>shell.about()
<span id="line-698" class="anchor"/>Author: "Patrick K. O'Brien  pobrien@orbtech.com "
<span id="line-699" class="anchor"/>Py Version: 0.9.4
<span id="line-700" class="anchor"/>Py Shell Revision: 1.7
<span id="line-701" class="anchor"/>Py Interpreter Revision: 1.5
<span id="line-702" class="anchor"/>Python Version: 2.3.3
<span id="line-703" class="anchor"/>wxPython Version: 2.4.1.0p7
<span id="line-704" class="anchor"/>Platform: linux2
<span id="line-705" class="anchor"/>
<span id="line-706" class="anchor"/></pre><span id="line-707" class="anchor"/><span id="line-708" class="anchor"/><p class="line862">由于<tt>Shell</tt>继承自<tt>StyledTextCtrl</tt>，所以它包含超过600个属性。大部分属性对<tt>shell</tt>提示符是没用的，因此，<tt>ShellFacade</tt>被创建来限制当你进入<tt>shell</tt>时出现在自动完成列表中的属性的数量。目前，<tt>shell</tt>对象只显示最有用的<tt>shell</tt>属性的25个。 <span
id="line-709" class="anchor"/><span id="line-710" class="anchor"/><span id="line-711" class="anchor"/><span id="line-712" class="anchor"/></p><p class="line867">
</p><h2 id="head-249d31f01ee72c5a26d272fc81749837b666810c">1.6. 如何在wxPython中使用Py包中的模块?</h2>
<span id="line-713" class="anchor"/><span id="line-714" class="anchor"/><span id="line-715" class="anchor"/><p
class="line862">如果你不想在你的应用程序使用一个完整的<tt>PyCrust</tt>框架，那么该怎么做呢？如果你在一个框架中仅仅只想要<tt>shell</tt>界面，而在另一个框架中要一个名字空间查看器，该怎么办呢？如果你想把它们永久添加到你的程序中以该怎么办呢？这些方案不仅是可能的，而且也是十分简单的。我们将用一个例子来说明这该怎么做来结束本章。 <span id="line-716" class="anchor"/><span id="line-717" class="anchor"/></p><p
class="line862">我们将再看一下在第2章中所创建的程序，它带有一个菜单栏，工具栏和状态栏。我们将添加一个菜单，它的一个菜单项用以显示一个<tt>shell</tt>框架，另一个用来显示一个<tt>filling</tt>框架。最后我们将把<tt>filling</tt>树的根设置给我们的主程序的框架对象。结果显示在图4.11中。 <span id="line-718" class="anchor"/><span id="line-719" class="anchor"/><span id="line-720" class="anchor"/></p><p
class="line867"><strong>图4.11</strong> <span id="line-721" class="anchor"/><span id="line-722" class="anchor"/></p><p class="line867"><img title="attachment:w4.11.gif" src="/moin/WxPythonInAction/ChapterFour?action=AttachFile&amp;do=get&amp;target=w4.11.gif" class="attachment"/> <span id="line-723" class="anchor"/><span id="line-724" class="anchor"/><span id="line-725" class="anchor"/></p><p
class="line874">下例4.7显示了修改过的源码。正如你的看到的，我们只增加了几行就实现了所要求的功能。 <span id="line-726" class="anchor"/><span id="line-727" class="anchor"/></p><p class="line874">例4.7 <span id="line-728" class="anchor"/><span id="line-729" class="anchor"/><span id="line-730" class="anchor"/><span id="line-731" class="anchor"/><span id="line-732" class="anchor"/><span id="line-733"
class="anchor"/><span id="line-734" class="anchor"/><span id="line-735" class="anchor"/><span id="line-736" class="anchor"/><span id="line-737" class="anchor"/><span id="line-738" class="anchor"/><span id="line-739" class="anchor"/><span id="line-740" class="anchor"/><span id="line-741" class="anchor"/><span id="line-742" class="anchor"/><span id="line-743" class="anchor"/><span id="line-744"
class="anchor"/><span id="line-745" class="anchor"/><span id="line-746" class="anchor"/><span id="line-747" class="anchor"/><span id="line-748" class="anchor"/><span id="line-749" class="anchor"/><span id="line-750" class="anchor"/><span id="line-751" class="anchor"/><span id="line-752" class="anchor"/><span id="line-753" class="anchor"/><span id="line-754" class="anchor"/><span id="line-755"
class="anchor"/><span id="line-756" class="anchor"/><span id="line-757" class="anchor"/><span id="line-758" class="anchor"/><span id="line-759" class="anchor"/><span id="line-760" class="anchor"/><span id="line-761" class="anchor"/><span id="line-762" class="anchor"/><span id="line-763" class="anchor"/><span id="line-764" class="anchor"/><span id="line-765" class="anchor"/><span id="line-766"
class="anchor"/><span id="line-767" class="anchor"/><span id="line-768" class="anchor"/><span id="line-769" class="anchor"/><span id="line-770" class="anchor"/><span id="line-771" class="anchor"/><span id="line-772" class="anchor"/><span id="line-773" class="anchor"/><span id="line-774" class="anchor"/><span id="line-775" class="anchor"/><span id="line-776" class="anchor"/><span id="line-777"
class="anchor"/><span id="line-778" class="anchor"/><span id="line-779" class="anchor"/><span id="line-780" class="anchor"/><span id="line-781" class="anchor"/><span id="line-782" class="anchor"/><span id="line-783" class="anchor"/><span id="line-784" class="anchor"/><span id="line-785" class="anchor"/><span id="line-786" class="anchor"/><span id="line-787" class="anchor"/></p><div lang="en" dir="ltr"
class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-0addbce6fe709b3f6b70f3b4ea8c888c6bb6d655_013\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-0addbce6fe709b3f6b70f3b4ea8c888c6bb6d655_013', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-0addbce6fe709b3f6b70f3b4ea8c888c6bb6d655_013" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/env python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="Comment">#1 导入这些框架类</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="Comment"/><span class="ResWord">from</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">py</span><span class="Operator">.</span><span class="ID">shell</span> <span class="ResWord">import</span> <span class="ID">ShellFrame</span></span>
<span class="line"><span class="LineNumber">   6 </span><span class="ResWord">from</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">py</span><span class="Operator">.</span><span class="ID">filling</span> <span class="ResWord">import</span> <span class="ID">FillingFrame</span></span>
<span class="line"><span class="LineNumber">   7 </span><span class="ResWord">import</span> <span class="ID">images</span></span>
<span class="line"><span class="LineNumber">   8 </span></span>
<span class="line"><span class="LineNumber">   9 </span><span class="ResWord">class</span> <span class="ID">ToolbarFrame</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  10 </span></span>
<span class="line"><span class="LineNumber">  11 </span>        <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  12 </span>                <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span
class="ID">id</span><span class="Operator">,</span> <span class="String">'Toolbars'</span><span class="Operator">,</span><span class="ID">size</span><span class="Operator">=</span><span class="Operator">(</span><span class="Number">300</span><span class="Operator">,</span> <span class="Number">200</span><span class="Operator">)</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  13 </span>                <span class="ID">panel</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Panel</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="Operator">-</span><span class="Number">1</span><span
class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span>                <span class="ID">panel</span><span class="Operator">.</span><span class="ID">SetBackgroundColour</span><span class="Operator">(</span><span class="String">'White'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span>                <span class="ID">statusBar</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">CreateStatusBar</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  16 </span>                <span class="ID">toolbar</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">CreateToolBar</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span>                <span class="ID">toolbar</span><span class="Operator">.</span><span class="ID">AddSimpleTool</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span
class="ID">images</span><span class="Operator">.</span><span class="ID">getNewBitmap</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span><span class="String">"New"</span><span class="Operator">,</span> <span class="String">"Long help for 'New'"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  18 </span>                <span class="ID">toolbar</span><span class="Operator">.</span><span class="ID">Realize</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  19 </span></span>
<span class="line"><span class="LineNumber">  20 </span>                <span class="ID">menuBar</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">MenuBar</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  21 </span>                <span class="ID">menu1</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Menu</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  22 </span>                <span class="ID">menuBar</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">menu1</span><span class="Operator">,</span> <span class="String">" "</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  23 </span>                <span class="ID">menu2</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Menu</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  24 </span>                <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span class="String">"
"</span><span class="Operator">,</span> <span class="String">"Copy in status bar"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  25 </span>                <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span class="String">"C
"</span><span class="Operator">,</span> <span class="String">""</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  26 </span>                <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span
class="String">"Paste"</span><span class="Operator">,</span> <span class="String">""</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  27 </span>                <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">AppendSeparator</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  28 </span>                <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span class="String">"
"</span><span class="Operator">,</span> <span class="String">"Display Options"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  29 </span>                <span class="ID">menuBar</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">menu2</span><span class="Operator">,</span> <span class="String">" "</span><span class="Operator">)</span><span class="Comment">#2 创建Debug菜单及其菜单项</span></span>
<span class="line"><span class="LineNumber">  30 </span></span>
<span class="line"><span class="LineNumber">  31 </span>                <span class="ID">menu3</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Menu</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  32 </span>                <span class="ID">shell</span> <span class="Operator">=</span> <span class="ID">menu3</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">,</span> <span class="String">"  shell"</span><span
class="Operator">,</span><span class="String">"Open wxPython shell frame"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  33 </span>                <span class="ID">filling</span> <span class="Operator">=</span> <span class="ID">menu3</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">,</span> <span class="String">"  viewer"</span><span
class="Operator">,</span><span class="String">"Open namespace viewer frame"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  34 </span>                <span class="ID">menuBar</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">menu3</span><span class="Operator">,</span> <span class="String">" "</span><span class="Operator">)</span><span class="Comment">#3 设置菜单的事件处理器</span></span>
<span class="line"><span class="LineNumber">  35 </span>                <span class="ID">self</span><span class="Operator">.</span><span class="ID">Bind</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">EVT_MENU</span><span class="Operator">,</span> <span class="ID">self</span><span class="Operator">.</span><span
class="ID">OnShell</span><span class="Operator">,</span> <span class="ID">shell</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  36 </span>                <span class="ID">self</span><span class="Operator">.</span><span class="ID">Bind</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">EVT_MENU</span><span class="Operator">,</span> <span class="ID">self</span><span class="Operator">.</span><span
class="ID">OnFilling</span><span class="Operator">,</span> <span class="ID">filling</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  37 </span></span>
<span class="line"><span class="LineNumber">  38 </span>                <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetMenuBar</span><span class="Operator">(</span><span class="ID">menuBar</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  39 </span></span>
<span class="line"><span class="LineNumber">  40 </span>        <span class="ResWord">def</span> <span class="ID">OnCloseMe</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  41 </span>                <span class="ID">self</span><span class="Operator">.</span><span class="ID">Close</span><span class="Operator">(</span><span class="ID">True</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  42 </span></span>
<span class="line"><span class="LineNumber">  43 </span>        <span class="ResWord">def</span> <span class="ID">OnCloseWindow</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  44 </span>                <span class="ID">self</span><span class="Operator">.</span><span class="ID">Destroy</span><span class="Operator">(</span><span class="Operator">)</span> <span class="Comment">#4 OnShell菜单项和OnFilling菜单项处理器</span></span>
<span class="line"><span class="LineNumber">  45 </span></span>
<span class="line"><span class="LineNumber">  46 </span>        <span class="ResWord">def</span> <span class="ID">OnShell</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  47 </span>                <span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">ShellFrame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">self</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  48 </span>                <span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  49 </span></span>
<span class="line"><span class="LineNumber">  50 </span>        <span class="ResWord">def</span> <span class="ID">OnFilling</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  51 </span>                <span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">FillingFrame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">self</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  52 </span>                <span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  53 </span></span>
<span class="line"><span class="LineNumber">  54 </span><span class="ResWord">if</span> <span class="ID">__name__</span> <span class="Operator">==</span> <span class="String">'__main__'</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  55 </span>        <span class="ID">app</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">PySimpleApp</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  56 </span>        <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">ToolbarFrame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span> <span
class="ID">id</span><span class="Operator">=</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  57 </span>        <span class="ID">app</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  58 </span>        <span class="ID">app</span><span class="Operator">.</span><span class="ID">MainLoop</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-788" class="anchor"/><span id="line-789" class="anchor"/><p class="line867"><strong>说明：</strong> <span id="line-790" class="anchor"/><span id="line-791" class="anchor"/></p><p class="line862">#1 这里我们导入了<tt>ShellFrame</tt>和<tt>FillingFrame</tt>类 <span id="line-792" class="anchor"/>#2 我们添加了第三个菜单<tt>Debug</tt>到框架的菜单栏 <span id="line-793"
class="anchor"/>#3 绑定一个函数给<tt>wx.EVT_MENU()</tt>，使我们能够将一个处理器与菜单项关联，以便当这个菜单项被选择时调用所关联的处理器。 <span id="line-794" class="anchor"/>#4 当用户从<tt>Debug</tt>菜单中选择<tt>Python</tt> <tt>shell</tt>时，<tt>shell</tt>框架被创建，它的双亲是工具栏框架。当工具栏框架被关闭时，任何打开的<tt>shell</tt>或<tt>filling</tt>框架也被关闭。 <span id="line-795"
class="anchor"/><span id="line-796" class="anchor"/><span id="line-797" class="anchor"/></p><p class="line867">
</p><h2 id="head-a4fc9e756c5762c5ebbda76e2a5b91445b5ea3bc">1.7. 本章小结</h2>
<span id="line-798" class="anchor"/><span id="line-799" class="anchor"/><span id="line-800" class="anchor"/><p class="line862">1、像<tt>wxPython</tt>这样的工具包本身是大而复杂的。<tt>GUI</tt>控件之间的交互并不总是直观的，整个的处理决定于事件并响应于事件，而非一个线性的执行序列。使用如<tt>PyCrust</tt> <tt>shell</tt>能够很大程度上提高你对事件驱动环境的理解。 <span id="line-801"
class="anchor"/><span id="line-802" class="anchor"/></p><p class="line862">2、<tt>PyCrust</tt>仅仅是另一个<tt>Python</tt> <tt>shell</tt>，它类似于<tt>IDLE</tt>, <tt>Boa</tt> <tt>Constructor</tt>,
<tt>PythonWin</tt>和其它开发工具所包括的<tt>shell</tt>。然而，<tt>PyCrust</tt>是用<tt>wxPython</tt>创建的，当你使用<tt>wxPython</tt>开发程序时，它是很有用的。尤其是，你不会有任何事件循环冲突方面的问题，并且你可以在<tt>PyCrust</tt>的<tt>shell</tt>和名字空间查看器中处理你的程序运行时的所有方面。 <span id="line-803" class="anchor"/><span id="line-804" class="anchor"/></p><p
class="line862">3、由于<tt>PyCrust</tt>是<tt>wxPython</tt>发行版的一部分，所以它随同<tt>wxPython</tt>一同被安装，包括了所有的源码。这使得<tt>PyCrust</tt>容易使用，并且减少了摸清如何在你自己的程序中提供内省功能的学习曲线。 <span id="line-805" class="anchor"/><span id="line-806" class="anchor"/></p><p
class="line862">4、另外，<tt>Py</tt>包的模块化的设计，使你很容易去挑选最有益于你程序的模块，如源代码编辑、名字空间查看、或<tt>shell</tt> <span id="line-807" class="anchor"/><span id="line-808" class="anchor"/></p><p class="line862">5、<tt>PyCrust</tt>减少了<tt>wxPython</tt>学习的曲线，并帮助你掌握你的程序运行时的细微之处。 <span id="line-809" class="anchor"/><span id="line-810"
class="anchor"/></p><p class="line862">下一章，我们将应用我们所学到的关于<tt>wxPython</tt>方面的知识，并且提供一些关于如何组织你的<tt>GUI</tt>程序的实用的建议。 <span id="line-811" class="anchor"/><span id="bottom" class="anchor"/></p></div>
