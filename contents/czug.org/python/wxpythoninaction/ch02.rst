---
created: 
creator: Benky
description: ''
title: 第二章 给wxPython程序一个坚实的基础
---
<div lang="en" id="content" dir="ltr"><span id="top" class="anchor"/>
<span id="line-1" class="anchor"/><p class="line867"/><div class="table-of-contents"><p class="table-of-contents-heading">目录</p><ol><li><a href="#head-d20bddbb347af2fc9a6af80a3f220468d885e24c">给你的wxPython程序一个稳固的基础</a><ol><li><a href="#head-39a64b9dda0d44b440ca367e67baf82310d28dd4">关于所要求的对象我们需要知道些什么？</a></li><li><a href="#head-bac399811d314367c558dbea6775c444e0f44894">如何创建和使用一个应用程序对象？</a><ol><li><a href="#head-4d6de42e3466a85bfca342375c21c87d7e230539">创建一个wx.App的子类</a></li><li><a href="#head-03b025b6debee1414228f5686589063c034590f6">理解应用程序对象的生命周期</a></li></ol></li><li><a href="#head-26d367aa4bfe330960ad45ea4685c5c7c1170aa2">如何定向wxPython程序的输出?</a><ol><li><a
href="#head-42fcad28d9dec4e58255b5ee5ef0dc665c330ad2">重定向输出</a></li><li><a href="#head-f5824793eb626492b2f4fabab3f4f3a8ca3c21eb">修改默认的重定向行为</a></li></ol></li><li><a href="#head-f5bdd596e1c45d841afd84ad754a0df9188e9892">如何关闭wxPython应用程序?</a><ol><li><a href="#head-107de641c65d95d2bc8d0607d2e0e8b8c74b7839">管理正常的关闭</a></li><li><a href="#head-8bd89a62b5eceb7984ef6ae397db3187e34618af">管理紧急关闭</a></li></ol></li><li><a href="#head-cf0b0b9ac4f723bcb2a9be265a88b2cc6125380f">如何创建和使用顶级窗口对象?</a><ol><li><a href="#head-e82cf8110a2ea619f6f9a9639dc67c749eb8f3fa">使用wx.Frame</a></li><li><a href="#head-9de18bc281fdf05f9e7d8220eb5ae03c0ca2bca5">使用wxPython的ID</a></li><li><a
href="#head-ad1a1f7441809f9f8dbd83e3a4c834a635f1138b">使用wx.Size和wx.Point</a></li><li><a href="#head-2636caa7792ad6eb5eab9cb2671cec076e326b35">使用wx.Frame的样式</a></li></ol></li><li><a href="#head-9dfb3856bed3208ba6b41623e6003a072d91d49c">如何为一个框架增加对象和子窗口?</a><ol><li><a href="#head-f87657ecf5e9623d3b3853fded1db129906d17f6">给框架增加窗口部件</a></li><li><a href="#head-8a801765a1bc7de69b48e47cd540b9ab74d622ac">给框架增加菜单栏、工具栏和状态栏。</a></li></ol></li><li><a href="#head-f308c882f5ea62be5149d867598379966fb6c871">如何使用一般的对话框?</a></li><li><a href="#head-e56318344aa2af1151a751381e61a972221ea9b9">一些最常见的错误现象及解决方法?</a></li><li><a href="#head-b56bff8de1dcb12fbb89f4eea9c412e8dc637c20">总结</a></li></ol></li></ol></div> <span
id="line-2" class="anchor"/><span id="line-3" class="anchor"/><p class="line867">
</p><h1 id="head-d20bddbb347af2fc9a6af80a3f220468d885e24c">1. 给你的wxPython程序一个稳固的基础</h1>
<span id="line-4" class="anchor"/><span id="line-5" class="anchor"/><p class="line862">房屋的基础是混凝土结构，它为其余的建造提供了坚固的基础。你的<tt>wxPython</tt>程序同样有一个基础，它由两个必要的对象组成，用于支持你的应用程序的其余部分。它们是应用程序对象和顶级窗口对象。适当地使用这两个对象将给你的<tt>wxPython</tt>应用程序一个稳固的开始并使得构造你的应用程序的其余部分更容易。 <span id="line-6" class="anchor"/><span id="line-7" class="anchor"/><span id="line-8" class="anchor"/></p><p class="line867">
</p><h2 id="head-39a64b9dda0d44b440ca367e67baf82310d28dd4">1.1. 关于所要求的对象我们需要知道些什么？</h2>
<span id="line-9" class="anchor"/><span id="line-10" class="anchor"/><span id="line-11" class="anchor"/><p class="line862">让我们来说明一下这两个基础对象。<strong>应用程序对象</strong>管理主事件循环，主事件循环是你的<tt>wxPython</tt>程序的动力。启动主事件循环是应用程序对象的工作。没有应用程序对象，你的<tt>wxPython</tt>应用程序将不能运行。 <span id="line-12" class="anchor"/><strong>顶级窗口</strong>通常管理最重要的数据，控制并呈现给用户。例如，在词处理程序中，主窗口是文档的显示部分，并很可能管理着该文档的一些数据。类似地，你的<tt>web</tt>浏览器的主窗口同时显示你所关注的页面并把该页作为一个数据对象管理。 <span id="line-13" class="anchor"/>下图显示了这两个基础对象和你的应用程序的其它部分这间的关系： <span id="line-14" class="anchor"/><span id="line-15" class="anchor"/></p><p
class="line867"><img title="attachment:w2.1.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.1.gif" class="attachment"/> <span id="line-16" class="anchor"/><span id="line-17" class="anchor"/><span id="line-18" class="anchor"/></p><p class="line874">如图所示，这个应用程序对象拥有顶级窗口和主事件循环。顶级窗口管理其窗口中的组件和其它的你分配给它的数据对象。窗口和它的组件的触发事件基于用户的动作，并接受事件通知以便改变显示。 <span id="line-19" class="anchor"/><span id="line-20" class="anchor"/><span id="line-21" class="anchor"/></p><p class="line867">
</p><h2 id="head-bac399811d314367c558dbea6775c444e0f44894">1.2. 如何创建和使用一个应用程序对象？</h2>
<span id="line-22" class="anchor"/><span id="line-23" class="anchor"/><span id="line-24" class="anchor"/><p class="line862">任何<tt>wxPython</tt>应用程序都需要一个应用程序对象。这个应用程序对象必须是类<tt>wx.App</tt>或其定制的子类的一个实例。应用程序对象的主要目的是管理幕后的主事件循环。这个事件循环响应于窗口系统事件并分配它们给适当的事件处理器。这个应用程序对象对<tt>wxPython</tt>进程的管理如此的重要以至于在你的程序没有实例化一个应用程序对象之前你不能创建任何的<tt>wxPython</tt>图形对象。 <span id="line-25" class="anchor"/><span id="line-26" class="anchor"/></p><p
class="line862">父类<tt>wx.App</tt>也定义了一些属性，它们对整个应用程序是全局性的。很多时候，它们就是你对你的应用程序对象所需要的全部东西。假如你需要去管理另外的全局数据或连接（如一个数据库连接），你可以定制应用程序子类。在某些情况下，你可能想为专门的错误或事件处理而扩展这个主事件循环。然而，默认的事件循环几乎适合所有的你所要写的<tt>wxPython</tt>应用程序。 <span id="line-27" class="anchor"/><span id="line-28" class="anchor"/><span id="line-29" class="anchor"/></p><p class="line867">
</p><h3 id="head-4d6de42e3466a85bfca342375c21c87d7e230539">1.2.1. 创建一个wx.App的子类</h3>
<span id="line-30" class="anchor"/><span id="line-31" class="anchor"/><span id="line-32" class="anchor"/><p class="line862">创建你自己的<tt>wx.App</tt>的子类是很简单的。当你开始你的应用程序的时候，创建你自己的<tt>wx.App</tt>的子类通常是一个好的想法，即使是你不定制任何功能。创建和使用一个<tt>wx.App</tt>子类，你需要执行四个步骤： <span id="line-33" class="anchor"/><span id="line-34" class="anchor"/></p><p class="line874">1、定义这个子类 <span id="line-35" class="anchor"/>2、在定义的子类中写一个<tt>OnInit()</tt>方法 <span id="line-36" class="anchor"/>3、在你的程序的主要部分创建这个类的一个实例 <span id="line-37" class="anchor"/>4、调用应用程序实例的<tt>MainLoop()</tt>方法。这个方法将程序的控制权转交给<tt>wxPython</tt> <span id="line-38" class="anchor"/><span id="line-39"
class="anchor"/></p><p class="line862">我们在第一章中看到过<tt>OnInit()</tt>方法。它在应用程序开始时并在主事件循环开始前被<tt>wxPython</tt>系统调用。这个方法不要求参数并返回一个布尔值，如果所返回的值是<tt>False</tt>，则应用程序将立即退出。大多数情况下，你将想要该方法返回的结果为真。处理某些错误条件，退出可能是恰当的方法，诸如所一个所需的资源缺失。 <span id="line-40" class="anchor"/><span id="line-41" class="anchor"/></p><p class="line862">由于<tt>OnInit()</tt>方法的存在，并且它是<tt>wxPython</tt>架构的一部分，所以任何关于你的定制的类的所需的初始化通常都由<tt>OnInit()</tt>方法管理，而不在<tt>Python</tt>的<tt>__init__</tt>方法中。如果由于某些原因你决定需要<tt>__init__</tt>方法，那么你必须在你的<tt>__init__</tt>方法中调用父类的<tt>__init__</tt>方法，如下所示： <span
id="line-42" class="anchor"/><span id="line-43" class="anchor"/><span id="line-44" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
function isnumbered(obj) {
return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
var nlen = Math.max(0,chrs-(''+num).length), res = '';
while (nlen>0) { res += ' '; nlen-- }
return res+num+add;
}
function addnumber(did, nstart, nstep) {
var c = document.getElementById(did), l = c.firstChild, n = 1;
if (!isnumbered(c))
if (typeof nstart == 'undefined') nstart = 1;
if (typeof nstep  == 'undefined') nstep = 1;
n = nstart;
while (l != null) {
if (l.tagName == 'SPAN') {
var s = document.createElement('SPAN');
s.className = 'LineNumber'
s.appendChild(document.createTextNode(nformat(n,4,' ')));
n += nstep;
if (l.childNodes.length)
l.insertBefore(s, l.firstChild)
else
l.appendChild(s)
}
l = l.nextSibling;
}
return false;
}
function remnumber(did) {
var c = document.getElementById(did), l = c.firstChild;
if (isnumbered(c))
while (l != null) {
if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
l = l.nextSibling;
}
return false;
}
function togglenumber(did, nstart, nstep) {
var c = document.getElementById(did);
if (isnumbered(c)) {
remnumber(did);
} else {
addnumber(did,nstart,nstep);
}
return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3aa1768268ca6045238be147baaf3e237bf9fce4_000\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-3aa1768268ca6045238be147baaf3e237bf9fce4_000', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-3aa1768268ca6045238be147baaf3e237bf9fce4_000" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">App</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-45" class="anchor"/><p class="line862">通常，你在<tt>OnInit()</tt>方法中将至少创建一个框架对象，并调用该框架的<tt>Show()</tt>方法。你也可以有选择地通过调用<tt>SetTopWindow()</tt>方法来为应用程序指定一个框架作为顶级窗口。顶级窗口被作为那些没有指定父窗口的对话框的默认父窗口。 <span id="line-46" class="anchor"/><span id="line-47" class="anchor"/><span id="line-48" class="anchor"/></p><p class="line867"><strong>何时省略<tt>wx.App</tt>的子类</strong> <span id="line-49" class="anchor"/><span id="line-50" class="anchor"/></p><p
class="line862">你没有必要创建你自己的<tt>wx.App</tt>子类，你通常想这样做是为了能够在<tt>OnInit()</tt>方法中创建你的顶级框架。 <span id="line-51" class="anchor"/>通常，如果在系统中只有一个框架的话，避免创建一个<tt>wx.App</tt>子类是一个好的主意。在这种情况下，<tt>wxPython</tt>提供了一个方便的类<tt>wx.PySimpleApp</tt>。这个类提供了一个最基本的<tt>OnInit()</tt>方法，<tt>wx.PySimpleApp</tt>类定义如下： <span id="line-52" class="anchor"/><span id="line-53" class="anchor"/><span id="line-54" class="anchor"/><span id="line-55" class="anchor"/><span id="line-56" class="anchor"/><span id="line-57"
class="anchor"/><span id="line-58" class="anchor"/><span id="line-59" class="anchor"/><span id="line-60" class="anchor"/><span id="line-61" class="anchor"/><span id="line-62" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-5b4e6f5bc1546be13398595bd8aaf1b4c7e70123_001\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-5b4e6f5bc1546be13398595bd8aaf1b4c7e70123_001', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-5b4e6f5bc1546be13398595bd8aaf1b4c7e70123_001" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">class</span> <span class="ID">PySimpleApp</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">App</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   2 </span></span>
<span class="line"><span class="LineNumber">   3 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">redirect</span><span class="Operator">=</span><span class="ID">False</span><span class="Operator">,</span> <span class="ID">filename</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   4 </span>                 <span class="ID">useBestVisual</span><span class="Operator">=</span><span class="ID">False</span><span class="Operator">,</span> <span class="ID">clearSigInt</span><span class="Operator">=</span><span class="ID">True</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   5 </span>        <span class="ID">wx</span><span class="Operator">.</span><span class="ID">App</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">redirect</span><span class="Operator">,</span> <span class="ID">filename</span><span class="Operator">,</span> <span class="ID">useBestVisual</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   6 </span>                <span class="ID">clearSigInt</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   7 </span></span>
<span class="line"><span class="LineNumber">   8 </span>    <span class="ResWord">def</span> <span class="ID">OnInit</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   9 </span>        <span class="ResWord">return</span> <span class="ID">True</span><span class="Text"/></span>
</pre></div><span id="line-63" class="anchor"/><span id="line-64" class="anchor"/><span id="line-65" class="anchor"/><p class="line862">下面是<tt>wx.PySimpleApp</tt>一个简单用法： <span id="line-66" class="anchor"/><span id="line-67" class="anchor"/><span id="line-68" class="anchor"/><span id="line-69" class="anchor"/><span id="line-70" class="anchor"/><span id="line-71" class="anchor"/><span id="line-72" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-34bbef06a993d0b4c3eba1796720e2953a25d46d_002\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-34bbef06a993d0b4c3eba1796720e2953a25d46d_002', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-34bbef06a993d0b4c3eba1796720e2953a25d46d_002" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">if</span> <span class="ID">__name__</span> <span class="Operator">==</span> <span class="String">'__main__'</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="ID">app</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">PySimpleApp</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   3 </span>    <span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">MyNewFrame</span><span class="Operator">(</span><span class="ID">None</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   4 </span>    <span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="ID">True</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   5 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">MainLoop</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-73" class="anchor"/><span id="line-74" class="anchor"/><span id="line-75" class="anchor"/><p class="line862">在上面这段代码的第一行，你创建了一个作为<tt>wx.PySimpleApp</tt>的实例的应用程序对象。由于我们在使用 <tt>wx.PySimpleApp</tt>类，所以我们没有定制<tt>OnInit</tt>方法。第二行我们定义了一个没有父亲的框架，它是一个顶级的框架。（很显然，这个<tt>MyNewFrame</tt>类需要在别处被定义）这第三行显示框架，最后一行调用应用程序主循环。 <span id="line-76" class="anchor"/><span id="line-77" class="anchor"/></p><p
class="line862">正如你所看到的，使用<tt>wx.PySimpleApp</tt>让你能够运行你的<tt>wxPython</tt>程序而无需创建你自己定制的应用程序类。如果你的应用程序十分简单的话，你应该只使用<tt>wx.PySimpleApp</tt>，且不需要任何其它的全局参数。 <span id="line-78" class="anchor"/><span id="line-79" class="anchor"/><span id="line-80" class="anchor"/></p><p class="line867">
</p><h3 id="head-03b025b6debee1414228f5686589063c034590f6">1.2.2. 理解应用程序对象的生命周期</h3>
<span id="line-81" class="anchor"/><span id="line-82" class="anchor"/><span id="line-83" class="anchor"/><p
class="line862">你的<tt>wxPython</tt>应用程序对象的生命周期开始于应用程序实例被创建时，在最后一个应用程序窗口被关闭时结束。这个没有必要与你的<tt>wxPython</tt>应用程序所在的<tt>Python</tt>脚本的开始和结束相对应。<tt>Python</tt>脚本可以在<tt>wxPython</tt>应用程序创建之前选择做一动作，并可以在<tt>wxPython</tt>应用程序的<tt>MainLoop()</tt>退出后做一些清理工作。然而所有的<tt>wxPython</tt>动作必须在应用程序对象的生命周期中执行。正如我们曾提到过的，这意味你的主框架对象在<tt>wx.App</tt>对象被创建之前不能被创建。（这就是为什么我们建议在<tt>OnInit()</tt>方法中创建顶级框架——因为这样一来，就确保了这个应用程序已经存在。）
<span id="line-84" class="anchor"/><span id="line-85" class="anchor"/></p><p class="line862">下图所示，创建应用程序对象触发<tt>OnInit()</tt>方法并允许新的窗口对象被创建。在<tt>OnInit()</tt>之后，这个脚本调用<tt>MainLoop()</tt>方法，通知<tt>wxPython</tt>事件现在正在被处理。在窗口被关闭之前应用程序继续它的事件处理。当所有顶级窗口被关闭后，<tt>MainLoop()</tt>函数返回同时应用程序对象被注销。这之后，这个脚本能够关闭其它的可能存丰的连接或线程。 <span id="line-86" class="anchor"/><span id="line-87" class="anchor"/></p><p class="line867"><img title="attachment:w2.2.gif"
src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.2.gif" class="attachment"/> <span id="line-88" class="anchor"/><span id="line-89" class="anchor"/></p><p class="line867">
</p><h2 id="head-26d367aa4bfe330960ad45ea4685c5c7c1170aa2">1.3. 如何定向wxPython程序的输出?</h2>
<span id="line-90" class="anchor"/><span id="line-91" class="anchor"/><span id="line-92" class="anchor"/><p
class="line862">所有的<tt>Python</tt>程序都能够通过两种标准流来输出文本：分别是标准输出流<tt>sys.stdout</tt>和标准错误流<tt>sys.stderr</tt>。通常，<tt>Python</tt>脚本定向标准输出流到它所运行的控制台。然而，当你的应用程序对象被创建时，你可以决定使用<tt>wxPython</tt>控制标准流并重定向输出到一个窗口。在<tt>Windows</tt>下，这个重定向行为是<tt>wxPython</tt>的默认行为。而在<tt>Unix</tt>系统中，默认情况下，<tt>wxPython</tt>不控制这个标准流。在所有的系统中，当应用程序对象被创建的时候，重定向行为可以被明确地指定。我们推荐利用这个特性并总是指定重定向行为来避免不同平台上的不同行为产生的任何问题。
<span id="line-93" class="anchor"/><span id="line-94" class="anchor"/><span id="line-95" class="anchor"/></p><p class="line867">
</p><h3 id="head-42fcad28d9dec4e58255b5ee5ef0dc665c330ad2">1.3.1. 重定向输出</h3>
<span id="line-96" class="anchor"/><span id="line-97" class="anchor"/><span id="line-98" class="anchor"/><p class="line862">如果<tt>wxPython</tt>控制了标准流，那么经由任何方法发送到流的文本被重定向到一个<tt>wxPython</tt>的框架。在<tt>wxPyton</tt>应用程序开始之前或结束之后发送到流的文本将按照<tt>Python</tt>通常的方法处理（输出到控制台）。下例同时演示了应用程序的生命周期和<tt>stdout</tt>/<tt>stderr</tt>重定向： <span id="line-99" class="anchor"/><span id="line-100" class="anchor"/><span id="line-101" class="anchor"/><span id="line-102" class="anchor"/><span
id="line-103" class="anchor"/><span id="line-104" class="anchor"/><span id="line-105" class="anchor"/><span id="line-106" class="anchor"/><span id="line-107" class="anchor"/><span id="line-108" class="anchor"/><span id="line-109" class="anchor"/><span id="line-110" class="anchor"/><span id="line-111" class="anchor"/><span id="line-112" class="anchor"/><span id="line-113" class="anchor"/><span id="line-114" class="anchor"/><span id="line-115" class="anchor"/><span id="line-116" class="anchor"/><span id="line-117" class="anchor"/><span id="line-118" class="anchor"/><span
id="line-119" class="anchor"/><span id="line-120" class="anchor"/><span id="line-121" class="anchor"/><span id="line-122" class="anchor"/><span id="line-123" class="anchor"/><span id="line-124" class="anchor"/><span id="line-125" class="anchor"/><span id="line-126" class="anchor"/><span id="line-127" class="anchor"/><span id="line-128" class="anchor"/><span id="line-129" class="anchor"/><span id="line-130" class="anchor"/><span id="line-131" class="anchor"/><span id="line-132" class="anchor"/><span id="line-133" class="anchor"/></p><div lang="en" dir="ltr"
class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-a9b301e48210d4e8af9aa20254d3ea3296c33ec7_003\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-a9b301e48210d4e8af9aa20254d3ea3296c33ec7_003', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-a9b301e48210d4e8af9aa20254d3ea3296c33ec7_003" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/env python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ResWord">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber">   5 </span></span>
<span class="line"><span class="LineNumber">   6 </span><span class="ResWord">class</span> <span class="ID">Frame</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   7 </span></span>
<span class="line"><span class="LineNumber">   8 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">,</span> <span class="ID">title</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   9 </span>        <span class="ResWord">print</span> <span class="String">"Frame __init__"</span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">,</span> <span class="ID">title</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  11 </span></span>
<span class="line"><span class="LineNumber">  12 </span><span class="ResWord">class</span> <span class="ID">App</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">App</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  13 </span></span>
<span class="line"><span class="LineNumber">  14 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">redirect</span><span class="Operator">=</span><span class="ID">True</span><span class="Operator">,</span> <span class="ID">filename</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  15 </span>        <span class="ResWord">print</span> <span class="String">"App __init__"</span></span>
<span class="line"><span class="LineNumber">  16 </span>        <span class="ID">wx</span><span class="Operator">.</span><span class="ID">App</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">redirect</span><span class="Operator">,</span> <span class="ID">filename</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span></span>
<span class="line"><span class="LineNumber">  18 </span>    <span class="ResWord">def</span> <span class="ID">OnInit</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  19 </span>        <span class="ResWord">print</span> <span class="String">"OnInit"</span>    <span class="Comment">#输出到stdout</span></span>
<span class="line"><span class="LineNumber">  20 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">Frame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">=</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">,</span> <span class="ID">title</span><span
class="Operator">=</span><span class="String">'Startup'</span><span class="Operator">)</span>  <span class="Comment">#创建框架</span></span>
<span class="line"><span class="LineNumber">  21 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  22 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetTopWindow</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">.</span><span class="ID">frame</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  23 </span>        <span class="ResWord">print</span>    <span class="ID">sys</span><span class="Operator">.</span><span class="ID">stderr</span><span class="Operator">,</span> <span class="String">"A pretend error message"</span>    <span class="Comment">#输出到stderr</span></span>
<span class="line"><span class="LineNumber">  24 </span>        <span class="ResWord">return</span> <span class="ID">True</span></span>
<span class="line"><span class="LineNumber">  25 </span></span>
<span class="line"><span class="LineNumber">  26 </span>    <span class="ResWord">def</span> <span class="ID">OnExit</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  27 </span>        <span class="ResWord">print</span> <span class="String">"OnExit"</span></span>
<span class="line"><span class="LineNumber">  28 </span></span>
<span class="line"><span class="LineNumber">  29 </span><span class="ResWord">if</span> <span class="ID">__name__</span> <span class="Operator">==</span> <span class="String">'__main__'</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  30 </span>    <span class="ID">app</span> <span class="Operator">=</span> <span class="ID">App</span><span class="Operator">(</span><span class="ID">redirect</span><span class="Operator">=</span><span class="ID">True</span><span class="Operator">)</span> <span class="Comment">#1 文本重定向从这开始</span></span>
<span class="line"><span class="LineNumber">  31 </span>    <span class="ResWord">print</span> <span class="String">"before MainLoop"</span></span>
<span class="line"><span class="LineNumber">  32 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">MainLoop</span><span class="Operator">(</span><span class="Operator">)</span>  <span class="Comment">#2 进入主事件循环</span></span>
<span class="line"><span class="LineNumber">  33 </span>    <span class="ResWord">print</span> <span class="String">"after MainLoop"</span><span class="Text"/></span>
</pre></div><span id="line-134" class="anchor"/><span id="line-135" class="anchor"/><span id="line-136" class="anchor"/><span id="line-137" class="anchor"/><p class="line867"><strong>说明：</strong> <span id="line-138" class="anchor"/><span id="line-139" class="anchor"/><span id="line-140" class="anchor"/></p><p class="line867"><strong>#1</strong> 这行创建了应用程序对象。这行之后，所有发送到<tt>stderr</tt>或<tt>stdout</tt>的文本都可被<tt>wxPython</tt>重定向到一个框架。参数<tt>redirect</tt>=<tt>True</tt>决定了是否重定向。 <span id="line-141"
class="anchor"/><span id="line-142" class="anchor"/><span id="line-143" class="anchor"/></p><p class="line867"><strong>#2</strong> 运行的时候，应用程序创建了一个空的框架和也生成了一个用于重定向输出的框架。图示如下： <span id="line-144" class="anchor"/><span id="line-145" class="anchor"/></p><p class="line867"><img title="attachment:w2.3.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.3.gif" class="attachment"/> <span id="line-146" class="anchor"/><span id="line-147" class="anchor"/></p><p
class="line862">注意：<tt>stdout</tt>和<tt>stderr</tt>都定向到这个窗口。 <span id="line-148" class="anchor"/>当你运行了这个程序之后，你将会看到你的控制台有下面的输出： <span id="line-149" class="anchor"/><span id="line-150" class="anchor"/></p><p class="line867"><tt>App</tt> <tt>__init__</tt> <span id="line-151" class="anchor"/><tt>after</tt> <tt>MainLoop</tt> <span id="line-152" class="anchor"/><span id="line-153" class="anchor"/></p><p class="line874">这第一行在框架被打开之前生成，第二行在框架被关闭之后生成。 <span id="line-154"
class="anchor"/>通过观察控制台和框架的输出，我们可以跟踪应用程序的生命周期。 <span id="line-155" class="anchor"/><span id="line-156" class="anchor"/></p><p class="line862">下面我们将上面的程序与图2.2作个比较，图中的"<tt>Start</tt> <tt>Script</tt>"对应于程序的 <tt>__main__</tt>语句。然后立即过渡到下一“<tt>Application</tt> <tt>obect</tt> <tt>created</tt>",对应于程序的<tt>app</tt> =
<tt>App(redirect</tt>=<tt>True)</tt>。应用程序实例的创建通过调用<tt>wx.App.__init__()</tt>方法。然后是<tt>OnInit()</tt>，它被<tt>wxPython</tt>自动调用。从这里，程序跳转到<tt>wx.Frame.__init__()</tt>，它是在<tt>wx.Frame</tt>被实例化时运行。最后控制转回到<tt>__main__</tt>语句，这里，<tt>MainLoop()</tt>被调用，对应于图中的"<tt>MainLoop()</tt> <tt>called</tt>"。主循环结束后，<tt>wx.App.OnExit()</tt>被<tt>wxPython</tt>调用，对应于图中“<tt>Application</tt> <tt>object</tt> <tt>destroyed</tt>”。然后脚本的其余部分完成处理。 <span id="line-157"
class="anchor"/><span id="line-158" class="anchor"/></p><p class="line862">为什么来自<tt>OnExit()</tt>的消息既没显示在窗口中也没显示在控制台中呢？其实它是在窗口关闭之前显示在<tt>wxPython</tt>的框架中，但窗口消失太快，所以无法被屏幕捕获。 <span id="line-159" class="anchor"/><span id="line-160" class="anchor"/><span id="line-161" class="anchor"/></p><p class="line867">
</p><h3 id="head-f5824793eb626492b2f4fabab3f4f3a8ca3c21eb">1.3.2. 修改默认的重定向行为</h3>
<span id="line-162" class="anchor"/><span id="line-163" class="anchor"/><span id="line-164" class="anchor"/><p class="line862">为了修改这个行为，<tt>wxPython</tt>允许你在创建应用程序时设置两个参数。第一个参数是<tt>redirect</tt>，如果值为<tt>True</tt>，则重定向到框架，如果值为<tt>False</tt>，则输出到控制台。如果参数<tt>redirect</tt>为<tt>True</tt>，那么第二个参数<tt>filename</tt>也能够被设置，这样的话，输出被重定向到<tt>filename</tt>所指定的文件中而不定向到<tt>wxPython</tt>框架。因此，如果我们将上例中的<tt>app</tt> =
<tt>App(redirect</tt>=<tt>True)</tt>改为<tt>app</tt> = <tt>App(False)</tt>，则输出将全部到控制台中： <span id="line-165" class="anchor"/><span id="line-166" class="anchor"/></p><pre>App __init__
<span id="line-167" class="anchor"/>OnInit
<span id="line-168" class="anchor"/>Frame __init__
<span id="line-169" class="anchor"/>A pretend error message
<span id="line-170" class="anchor"/>before MainLoop
<span id="line-171" class="anchor"/>OnExit
<span id="line-172" class="anchor"/>after MainLoop
<span id="line-173" class="anchor"/></pre><span id="line-174" class="anchor"/><p class="line862">我们可以注意到<tt>OnExit()</tt>消息在这里显示出来了。 <span id="line-175" class="anchor"/>我们再作一个改变： <span id="line-176" class="anchor"/><span id="line-177" class="anchor"/><span id="line-178" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-99ba903741951d34070c2313bfd6baa4b35e2626_004\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-99ba903741951d34070c2313bfd6baa4b35e2626_004', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-99ba903741951d34070c2313bfd6baa4b35e2626_004" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">app</span> <span class="Operator">=</span> <span class="ID">App</span><span class="Operator">(</span><span class="ID">True</span><span class="Operator">,</span> <span class="String">"output"</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-179" class="anchor"/><p class="line862">这将导致所有的应用程序创建后的输出重定向到名为<tt>output</tt>的文件中。而"<tt>App__init</tt>"和"<tt>after</tt> <tt>MainLoop</tt>"消息仍将发送到控制台，这是因为它们产生在<tt>wx.App</tt>对象控制流的时期之外。 <span id="line-180" class="anchor"/><span id="line-181" class="anchor"/><span id="line-182" class="anchor"/></p><p class="line867">
</p><h2 id="head-f5bdd596e1c45d841afd84ad754a0df9188e9892">1.4. 如何关闭wxPython应用程序?</h2>
<span id="line-183" class="anchor"/><span id="line-184" class="anchor"/><span id="line-185" class="anchor"/><p
class="line862">当你的应用程序的最后的顶级窗口被用户关闭时，<tt>wxPython</tt>应用程序就退出了。我们这里所说的顶层窗口是指任何没有父亲的框架，并不只是使用<tt>SetTopWindow()</tt>方法设计的框架。这包括任何由<tt>wxPython</tt>自身创建的框架。在我们重定向的例子中，<tt>wxPython</tt>应用程序在主框架和输出重定向的框架都被关闭后退出，仅管只有主框架是使用<tt>SetTopWindow()</tt>登记的，尽管应用程序没有明确地创建这个输出重定向框架。要使用编程触发一个关闭，你可以在所有的这里所谓顶级窗口上调用<tt>Close()</tt>方法。 <span id="line-186"
class="anchor"/><span id="line-187" class="anchor"/><span id="line-188" class="anchor"/></p><p class="line867">
</p><h3 id="head-107de641c65d95d2bc8d0607d2e0e8b8c74b7839">1.4.1. 管理正常的关闭</h3>
<span id="line-189" class="anchor"/><span id="line-190" class="anchor"/><span id="line-191" class="anchor"/><p
class="line862">在关闭的过程期间，<tt>wxPython</tt>关心的是删除所有的它的窗口和释放它们的资源。你可以在退出过程中定义一个钩子来执行你自己的清理工作。由于你的<tt>wx.App</tt>子类的<tt>OnExit()</tt>方法在最后一个窗口被关闭后且在<tt>wxPython</tt>的内在的清理过程之前被调用，你可以使用<tt>OnExit()</tt>方法来清理你创建的任何非<tt>wxPython</tt>资源（例如一个数据库连接）。即使使用了<tt>wx.Exit()</tt>来关闭<tt>wxPython</tt>程序，<tt>OnExit()</tt>方法仍将被触发。 <span id="line-192" class="anchor"/><span id="line-193" class="anchor"/></p><p
class="line862">如果由于某种原因你想在最后的窗口被关闭后<tt>wxPython</tt>应用程序仍然可以继续，你可以使用<tt>wx.App</tt>的<tt>SetExitOnFrameDelete(flag)</tt>方法来改变默认的行为。如果<tt>flag</tt>参数设置为<tt>False</tt>，那么最后的窗口被关闭后<tt>wxPython</tt>应用程序仍然会继续运行。这意味着<tt>wx.App</tt>实例将继续存活，并且事件循环将继续处理事件，比如这时你还可以创建所有新的这里所谓的顶级窗口。<tt>wxPython</tt>应用程序将保持存活直到全局函数<tt>wx.Exit()</tt>被明确地调用。 <span id="line-194" class="anchor"/><span id="line-195"
class="anchor"/><span id="line-196" class="anchor"/></p><p class="line867">
</p><h3 id="head-8bd89a62b5eceb7984ef6ae397db3187e34618af">1.4.2. 管理紧急关闭</h3>
<span id="line-197" class="anchor"/><span id="line-198" class="anchor"/><span id="line-199" class="anchor"/><p class="line874">你不能总是以一个可控的方法关闭你的程序。有时候，你需要立即结束应用程序并不考虑清理工作。例如一个必不可少的资源可能已被关闭或被损坏。如果系统正在关闭，你可能不能做所有的清理工作。 <span id="line-200" class="anchor"/><span id="line-201" class="anchor"/></p><p
class="line862">这里有两种在紧急情况下退出你的<tt>wxPython</tt>应用程序的方法。你可以调用<tt>wx.App</tt>的<tt>ExitMainLoop()</tt>方法。这个方法显式地使用主消息循环终止，使用控制离开<tt>MainLoop()</tt>函数。这通常将终止应用程序，这个方法实际上等同于关闭所有这里所谓顶级窗口。 <span id="line-202" class="anchor"/><span id="line-203" class="anchor"/></p><p class="line862">你也可以调用全局方法<tt>wx.Exit()</tt>。正常使用情况下，两种方法我们都不推荐，因为它将导致一些清理函数被跳过。 <span id="line-204" class="anchor"/><span id="line-205"
class="anchor"/></p><p
class="line862">有时候，你的应用程序由于一个控制之外的事件而需要关闭。例如操作系统的关闭或注销。在这种情况下，你的应用程序将试图做一些保存文档或关闭连接等等。如果你的应用程序为<tt>wx.EVT_QUERY_END_SESSION</tt>事件绑定了一个事件处理器，那么当<tt>wxPython</tt>得到关闭通知时这个事件处理器将被调用。这个<tt>event</tt>参数是<tt>wx.CloseEvent</tt>。我们可以通过关闭事件来否决关闭。这可以使用关闭事件的<tt>CanVeto()</tt>方法，<tt>CanVeto()</tt>方法决定是否可以否决，<tt>Veto()</tt>执行否决。如果你不能成功地保存或关闭所有的资源，你可能想使用该方法。<tt>wx.EVT_QUERY_END_SESSION</tt>事件的默认处理器调用顶级窗口的<tt>Close()</tt>方法，这将依次向顶层窗口发送<tt>wx.EVT_CLOSE</tt>事件，这给了你控制关闭过程的另一选择。如果任何一个<tt>Close()</tt>方法返回<tt>False</tt>，那么应用程序将试图否决关闭。
<span id="line-206" class="anchor"/><span id="line-207" class="anchor"/><span id="line-208" class="anchor"/></p><p class="line867">
</p><h2 id="head-cf0b0b9ac4f723bcb2a9be265a88b2cc6125380f">1.5. 如何创建和使用顶级窗口对象?</h2>
<span id="line-209" class="anchor"/><span id="line-210" class="anchor"/><span id="line-211" class="anchor"/><p class="line874">在你的应用程序中一个顶级窗口对象是一个窗口部件（通常是一个框架），它不被别的窗口部件所包含。顶级窗口对象通常是你的应用程序的主窗口，它包含用户与之交互的窗口部件和界面对象。当所有的顶级窗口被关闭时应用程序退出。 <span id="line-212" class="anchor"/><span id="line-213" class="anchor"/></p><p
class="line862">你的应用程序至少必须有一个顶级窗口对象。顶级窗口对象通常是类<tt>wx.Frame</tt>的子类，尽管它也可以是<tt>wx.Dialog</tt>的子类。大多数情况下，你将为了使用为你的应用程序定义定制的<tt>wx.Frame</tt>的子类。然而，这儿也存在一定数量的预定义的<tt>wx.Dialog</tt>的子类，它们提供了许多你可能会在一个应用程序中遇到的典型的对话框。 <span id="line-214" class="anchor"/><span id="line-215" class="anchor"/></p><p
class="line862">这儿可能有一个名称上的混淆，那就是“顶级窗口”。一般意义上的顶级窗口是指在你的应用程序中任何没有父容器的窗口部件。你的应用程序必须至少有一个，但是，只要你喜欢可以有多个。但是它们中只有一个可以通过使用<tt>SetTopWindow()</tt>被<tt>wxPython</tt>作为主顶级窗口。如果你没有使用<tt>SetTopWindow()</tt>指定主顶级窗口，那么在<tt>wx.App</tt>的顶级窗口列表中的第一个框架将被认为是这个主顶级窗口。因此，明确地定义一个主顶级窗口不总是必要的，例如，你只有一个顶级窗口的时候。反复调用<tt>SetTopWindow()</tt>将反复改变当前的主顶级窗口，因为一个应用程序一次只能有一主顶级窗口。
<span id="line-216" class="anchor"/><span id="line-217" class="anchor"/><span id="line-218" class="anchor"/></p><p class="line867">
</p><h3 id="head-e82cf8110a2ea619f6f9a9639dc67c749eb8f3fa">1.5.1. 使用wx.Frame</h3>
<span id="line-219" class="anchor"/><span id="line-220" class="anchor"/><span id="line-221" class="anchor"/><p class="line862">按照<tt>wxPython</tt>中的说法，框架就是用户通常称的窗口。那就是说，框架是一个容器，用户可以将它在屏幕上任意移动，并可将它缩放，它通常包含诸如标题栏、菜单等等。在<tt>wxPython</tt>中，<tt>wx.Frame</tt>是所有框架的父类。这里也有少数专用的<tt>wx.Frame</tt>子类，你可以使用它们。 <span id="line-222" class="anchor"/><span id="line-223" class="anchor"/></p><p
class="line862">当你创建<tt>wx.Frame</tt>的子类时，你的类应该调用其父类的构造器<tt>wx.Frame.__init__()</tt>。<tt>wx.Frame</tt>的构造器所要求的参数如下： <span id="line-224" class="anchor"/><span id="line-225" class="anchor"/></p><p class="line867"><span id="line-226" class="anchor"/><span id="line-227" class="anchor"/><span id="line-228" class="anchor"/><span id="line-229" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-6cbe834dc7ee0677c96e8e6a5e4dc584b8917fac_005\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-6cbe834dc7ee0677c96e8e6a5e4dc584b8917fac_005', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-6cbe834dc7ee0677c96e8e6a5e4dc584b8917fac_005" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">=</span><span class="Operator">-</span><span class="Number">1</span><span class="Operator">,</span> <span class="ID">title</span><span class="Operator">=</span><span
class="String">""</span><span class="Operator">,</span> <span class="ID">pos</span><span class="Operator">=</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">DefaultPosition</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   2 </span>        <span class="ID">size</span><span class="Operator">=</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">DefaultSize</span><span class="Operator">,</span> <span class="ID">style</span><span class="Operator">=</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">DEFAULT_FRAME_STYLE</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   3 </span>        <span class="ID">name</span><span class="Operator">=</span><span class="String">"frame"</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-230" class="anchor"/><span id="line-231" class="anchor"/><p class="line874">我们在别的窗口部件的构造器中将会看到类似的参数。参数的说明如下： <span id="line-232" class="anchor"/><span id="line-233" class="anchor"/></p><p class="line867"><tt>parent</tt>：框架的父窗口。对于顶级窗口，这个值是<tt>None</tt>。框架随其父窗口的销毁而销毁。取决于平台，框架可被限制只出现在父窗口的顶部。在多文档界面的情况下，子窗口被限制为只能在父窗口中移动和缩放。 <span id="line-234" class="anchor"/><span id="line-235"
class="anchor"/></p><p class="line867"><tt>id</tt>：关于新窗口的<tt>wxPython</tt> <tt>ID</tt>号。你可以明确地传递一个。或传递-1，这将导致<tt>wxPython</tt>自动生成一个新的<tt>ID</tt>。 <span id="line-236" class="anchor"/><span id="line-237" class="anchor"/></p><p class="line867"><tt>title</tt>：窗口的标题。 <span id="line-238" class="anchor"/><span id="line-239" class="anchor"/></p><p
class="line867"><tt>pos</tt>：一个<tt>wx.Point</tt>对象，它指定这个新窗口的左上角在屏幕中的位置。在图形用户界面程序中，通常(0,0)是显示器的左上角。这个默认的(-1,-1)将让系统决定窗口的位置。 <span id="line-240" class="anchor"/><span id="line-241" class="anchor"/></p><p class="line867"><tt>size</tt>：一个<tt>wx.Size</tt>对象，它指定这个窗口的初始尺寸。这个默认的(-1,-1)将让系统决定窗口的初始尺寸。 <span id="line-242" class="anchor"/><span id="line-243" class="anchor"/></p><p
class="line867"><tt>style</tt>：指定窗口的类型的常量。你可以使用或运算来组合它们。 <span id="line-244" class="anchor"/><span id="line-245" class="anchor"/></p><p class="line867"><tt>name</tt>：框架的内在的名字。以后你可以使用它来寻找这个窗口。 <span id="line-246" class="anchor"/><span id="line-247" class="anchor"/></p><p class="line862">记住，这些参数将被传递给父类的构造器方法：<tt>wx.Frame.__init__()</tt>。 <span id="line-248" class="anchor"/><span id="line-249" class="anchor"/></p><p
class="line862">创建<tt>wx.Frame</tt>子类的方法如下所示： <span id="line-250" class="anchor"/><span id="line-251" class="anchor"/><span id="line-252" class="anchor"/><span id="line-253" class="anchor"/><span id="line-254" class="anchor"/><span id="line-255" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-c75f03cc1056744359fdfcee3074fc14b0fdb1a7_006\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-c75f03cc1056744359fdfcee3074fc14b0fdb1a7_006', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-c75f03cc1056744359fdfcee3074fc14b0fdb1a7_006" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ResWord">class</span> <span class="ID">MyFrame</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   2 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   3 </span>        <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">None</span><span class="Operator">,</span> <span class="Operator">-</span><span class="Number">1</span><span class="Operator">,</span> <span class="String">"My Friendly Window"</span><span
class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   4 </span>            <span class="Operator">(</span><span class="Number">100</span><span class="Operator">,</span> <span class="Number">100</span><span class="Operator">)</span><span class="Operator">,</span> <span class="Operator">(</span><span class="Number">100</span><span class="Operator">,</span> <span class="Number">100</span><span class="Operator">)</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-256" class="anchor"/><span id="line-257" class="anchor"/><p class="line867">
</p><h3 id="head-9de18bc281fdf05f9e7d8220eb5ae03c0ca2bca5">1.5.2. 使用wxPython的ID</h3>
<span id="line-258" class="anchor"/><span id="line-259" class="anchor"/><span id="line-260" class="anchor"/><p
class="line862">在<tt>wxPython</tt>中，<tt>ID</tt>号是所有窗口部件的特征。在一个<tt>wxPython</tt>应用程序中，每个窗口部件都有一个窗口标识。在每一个框架内，<tt>ID</tt>号必须是唯一的，但是在框架之间你可以重用<tt>ID</tt>号。然而，我们建议你在你的整个应用程序中保持<tt>ID</tt>号的唯一性，以防止处理事件时产生错误和混淆。在<tt>wxPython</tt>中也有一些标准的预定义的<tt>ID</tt>号，它们有特定的意思（例如，<tt>wx.ID_OK</tt>和<tt>wx.ID_CANCEL</tt>是对话框中的<tt>OK</tt>和<tt>Cancel</tt>按钮的<tt>ID</tt>号）。在你的应用程序中重用标准的<tt>ID</tt>号一般没什么问题，只要你在预期的方式中使用它们。在<tt>wxPython</tt>中，<tt>ID</tt>号的最重要的用处是在指定的对象发生的事件和响应该事件的回调函数之间建立唯一的关联。
<span id="line-261" class="anchor"/><span id="line-262" class="anchor"/></p><p class="line862">有三种方法来创建一个窗口部件使用的<tt>ID</tt>号： <span id="line-263" class="anchor"/><span id="line-264" class="anchor"/></p><p class="line874">1、明确地给构造器传递一个正的整数 <span id="line-265" class="anchor"/>2、使用<tt>wx.NewId()</tt>函数 <span id="line-266" class="anchor"/>3、传递一个全局常量<tt>wx.ID_ANY</tt>或-1给窗口部件的构造器 <span id="line-267" class="anchor"/><span id="line-268"
class="anchor"/><span id="line-269" class="anchor"/></p><p class="line867"><strong>明确地选择<tt>ID</tt>号</strong> <span id="line-270" class="anchor"/><span id="line-271" class="anchor"/></p><p
class="line862">第一个或最直接的方法是明确地给构造器传递一个正的整数作为该窗口部件的<tt>ID</tt>。如果你这样做了，你必须确保在一个框架内没有重复的<tt>ID</tt>或重用了一个预定义的常量。你可以通过调用<tt>wx.RegisterId()</tt>来确保在应用程序中<tt>wxPython</tt>不在别处使用你的<tt>ID</tt>。要防止你的程序使用相同的<tt>wxPython</tt> <tt>ID</tt>，你应该避免使用全局常量<tt>wx.ID_LOWEST</tt>和<tt>wx.ID_HIGHEST</tt>之间的<tt>ID</tt>号。 <span id="line-272" class="anchor"/><span id="line-273" class="anchor"/><span
id="line-274" class="anchor"/></p><p class="line867"><strong>使用全局性的<tt>NewID()</tt>函数</strong> <span id="line-275" class="anchor"/><span id="line-276" class="anchor"/></p><p class="line862">自己确保<tt>ID</tt>号的唯一性十分麻烦，你可以使用<tt>wx.NewId()</tt>函数让<tt>wxPython</tt>来为你创建<tt>ID</tt>： <span id="line-277" class="anchor"/><span id="line-278" class="anchor"/></p><p class="line867"><span id="line-279" class="anchor"/><span id="line-280" class="anchor"/><span id="line-281"
class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-c352067119ed01b230eef505dfe093628a16cdb8_007\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-c352067119ed01b230eef505dfe093628a16cdb8_007', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-c352067119ed01b230eef505dfe093628a16cdb8_007" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">id</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">None</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-282" class="anchor"/><span id="line-283" class="anchor"/><p class="line867"><strong>你也可以给窗口部件的构造器传递全局常量<tt>wx.ID_ANY</tt>或-1</strong>，然后<tt>wxPython</tt>将为你生成新的<tt>ID</tt>。然后你可以在需要这个<tt>ID</tt>时使用<tt>GetId()</tt>方法来得到它： <span id="line-284" class="anchor"/><span id="line-285" class="anchor"/></p><p class="line867"><span id="line-286" class="anchor"/><span id="line-287" class="anchor"/><span id="line-288"
class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-0537a86a7c30560d642636db5ff5e71e32d4454a_008\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-0537a86a7c30560d642636db5ff5e71e32d4454a_008', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-0537a86a7c30560d642636db5ff5e71e32d4454a_008" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">None</span><span class="Operator">,</span> <span class="Operator">-</span><span
class="Number">1</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="ID">id</span> <span class="Operator">=</span> <span class="ID">frame</span><span class="Operator">.</span><span class="ID">GetId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-289" class="anchor"/><span id="line-290" class="anchor"/><p class="line867">
</p><h3 id="head-ad1a1f7441809f9f8dbd83e3a4c834a635f1138b">1.5.3. 使用wx.Size和wx.Point</h3>
<span id="line-291" class="anchor"/><span id="line-292" class="anchor"/><span id="line-293" class="anchor"/><p class="line867"><tt>wx.Frame</tt>构造器的参数也引用了类<tt>wx.Size</tt>和<tt>wx.Point</tt>。这两个类在你的<tt>wxPython</tt>编程中将频繁被使用。 <span id="line-294"
class="anchor"/><tt>wx.Point</tt>类表示一个点或位置。构造器要求点的x和y值。如果不设置x,y值，则值默认为0。我们可以使用<tt>Set(x</tt>,<tt>y)</tt>和<tt>Get()</tt>函数来设置和得到x和y值。<tt>Get()</tt>函数返回一个元组。x和y值可以像下面这样作为属性被访问： <span id="line-295" class="anchor"/><span id="line-296" class="anchor"/></p><p class="line867"><span id="line-297" class="anchor"/><span id="line-298" class="anchor"/><span id="line-299" class="anchor"/><span id="line-300"
class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-b061c6526ac3eb14d9938355b8742b16f258a398_009\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-b061c6526ac3eb14d9938355b8742b16f258a398_009', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-b061c6526ac3eb14d9938355b8742b16f258a398_009" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">point</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Point</span><span class="Operator">(</span><span class="Number">10</span><span class="Operator">,</span> <span class="Number">12</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="ID">x</span> <span class="Operator">=</span> <span class="ID">point</span><span class="Operator">.</span><span class="ID">x</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ID">y</span> <span class="Operator">=</span> <span class="ID">point</span><span class="Operator">.</span><span class="ID">y</span><span class="Text"/></span>
</pre></div><span id="line-301" class="anchor"/><p class="line862">另外，<tt>wx.Point</tt>的实例可以像其它<tt>Python</tt>对象一样作加、减和比较运算，例如： <span id="line-302" class="anchor"/><span id="line-303" class="anchor"/><span id="line-304" class="anchor"/><span id="line-305" class="anchor"/><span id="line-306" class="anchor"/><span id="line-307" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-34a6a84c6a7462f870e794e4be5fcfbc8fa62bbb_010\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-34a6a84c6a7462f870e794e4be5fcfbc8fa62bbb_010', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-34a6a84c6a7462f870e794e4be5fcfbc8fa62bbb_010" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">a</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Point</span><span class="Operator">(</span><span class="Number">2</span><span class="Operator">,</span> <span class="Number">3</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="ID">b</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Point</span><span class="Operator">(</span><span class="Number">5</span><span class="Operator">,</span> <span class="Number">7</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ID">c</span> <span class="Operator">=</span> <span class="ID">a</span> <span class="Operator">+</span> <span class="ID">b</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ID">bigger</span> <span class="Operator">=</span> <span class="ID">a</span> <span class="Operator">></span> <span class="ID">b</span><span class="Text"/></span>
</pre></div><span id="line-308" class="anchor"/><p class="line862">在<tt>wx.Point</tt>的实参中，坐标值一般为整数。如果你需要浮点数坐标，你可以使用类<tt>wx.RealPoint</tt>，它的用法如同<tt>wx.Point</tt>。 <span id="line-309" class="anchor"/><span id="line-310" class="anchor"/></p><p class="line867"><tt>wx.Size</tt>类几乎和<tt>wx.Point</tt>完全相同，除了实参的名字是<tt>width</tt>和<tt>height</tt>。对<tt>wx.Size</tt>的操作与<tt>wx.Point</tt>一样。
<span id="line-311" class="anchor"/><span id="line-312" class="anchor"/></p><p class="line862">在你的应用程序中当一个<tt>wx.Point</tt>或<tt>wx.Size</tt>实例被要求的时候（例如在另一个对象的构造器中），你不必显式地创建这个实例。你可以传递一个元组给构造器，<tt>wxPython</tt>将隐含地创建这个<tt>wx.Point</tt>或<tt>wx.Size</tt>实例： <span id="line-313" class="anchor"/><span id="line-314" class="anchor"/><span id="line-315" class="anchor"/></p><div
lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-2b448e685ff20875392f61441a2942ab4ef11bf3_011\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-2b448e685ff20875392f61441a2942ab4ef11bf3_011', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-2b448e685ff20875392f61441a2942ab4ef11bf3_011" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">(</span><span class="ID">None</span><span class="Operator">,</span> <span class="Operator">-</span><span
class="Number">1</span><span class="Operator">,</span> <span class="ID">pos</span><span class="Operator">=</span><span class="Operator">(</span><span class="Number">10</span><span class="Operator">,</span> <span class="Number">10</span><span class="Operator">)</span><span class="Operator">,</span> <span class="ID">size</span><span class="Operator">=</span><span class="Operator">(</span><span class="Number">100</span><span
class="Operator">,</span> <span class="Number">100</span><span class="Operator">)</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-316" class="anchor"/><span id="line-317" class="anchor"/><p class="line867">
</p><h3 id="head-2636caa7792ad6eb5eab9cb2671cec076e326b35">1.5.4. 使用wx.Frame的样式</h3>
<span id="line-318" class="anchor"/><span id="line-319" class="anchor"/><span id="line-320" class="anchor"/><p
class="line862">每个<tt>wxPython</tt>窗口部件都要求一个样式参数。这部分我们将讨论用于<tt>wx.Frame</tt>的样式。它们中的一些也适用于别的<tt>wxPython</tt>窗口部件。一些窗口部件也定义了一个<tt>SetStyle()</tt>方法，让你可以在该窗口部件创建后改变它的样式。所有的你能使用的样式元素都有一个常量标识符（如<tt>wx.MINIMIZE_BOX</tt>）。要使用多个样式，你可以使用或运算符|。例如，<tt>wx.DEFAULT_FRAME_STYLE</tt>样式就被定义为如下几个基本样式的组合：
<span id="line-321" class="anchor"/></p><pre>#!pythton (-)
<span id="line-322" class="anchor"/>wx.MAXIMIZE_BOX | wx.MINIMIZE_BOX | wx.RESIZE_BORDER |wx.SYSTEM_MENU | wx.CAPTION | wx.CLOSE_BOX
<span id="line-323" class="anchor"/></pre><span id="line-324" class="anchor"/><p class="line874">要从一个合成的样式中去掉个别的样式，你可以使用^操作符。例如要创建一个默认样式的窗口，但要求用户不能缩放和改变窗口的尺寸，你可以这样做： <span id="line-325" class="anchor"/><span id="line-326" class="anchor"/><span id="line-327" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3ecd20a94a82338c18c7ee9a28809425321d0d10_012\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-3ecd20a94a82338c18c7ee9a28809425321d0d10_012', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-3ecd20a94a82338c18c7ee9a28809425321d0d10_012" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">DEFAULT_FRAME_STYLE</span> <span class="Operator">^</span> <span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">RESIZE_BORDER</span> <span
class="Operator">|</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">MINIMIZE_BOX</span> <span class="Operator">|</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">MAXIMIZE_BOX</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-328" class="anchor"/><p class="line862">如果你不慎使用了&操作符，那么将得到一个没有样式的、无边框图的、不能移动、不能改变尺寸和不能关闭的帧。 <span id="line-329" class="anchor"/><span id="line-330" class="anchor"/><span id="line-331" class="anchor"/></p><p class="line867"><strong>下表2.2列出了用于<tt>wx.Frame</tt>的最重要的样式</strong>： <span id="line-332" class="anchor"/><span
id="line-333" class="anchor"/></p><p class="line867"><tt>wx.CAPTION</tt>：在框架上增加一个标题栏，它显示该框架的标题属性。 <span id="line-334" class="anchor"/><tt>wx.CLOSE_BOX</tt>：指示系统在框架的标题栏上显示一个关闭框，使用系统默认的位置和样式。 <span id="line-335" class="anchor"/><tt>wx.DEFAULT_FRAME_STYLE</tt>：默认样式。 <span id="line-336"
class="anchor"/><tt>wx.FRAME_SHAPED</tt>：用这个样式创建的框架可以使用<tt>SetShape()</tt>方法去创建一个非矩形的窗口。 <span id="line-337" class="anchor"/><tt>wx.FRAME_TOOL_WINDOW</tt>：通过给框架一个比正常更小的标题栏，使框架看起来像一个工具框窗口。在<tt>Windows</tt>下，使用这个样式创建的框架不会出现在显示所有打开窗口的任务栏上。 <span id="line-338"
class="anchor"/><tt>wx.MAXIMIZE_BOX</tt>：指示系统在框架的标题栏上显示一个最大化框，使用系统默认的位置和样式。 <span id="line-339" class="anchor"/><tt>wx.MINIMIZE_BOX</tt>：指示系统在框架的标题栏上显示一个最小化框，使用系统默认的位置和样式。 <span id="line-340" class="anchor"/><tt>wx.RESIZE_BORDER</tt>：给框架增加一个可以改变尺寸的边框。 <span id="line-341"
class="anchor"/><tt>wx.SIMPLE_BORDER</tt>：没有装饰的边框。不能工作在所有平台上。 <span id="line-342" class="anchor"/><tt>wx.SYSTEM_MENU</tt>：增加系统菜单（带有关闭、移动、改变尺寸等功能）和关闭框到这个窗口。在系统菜单中的改变尺寸和关闭功能的有效性依赖于<tt>wx.MAXIMIZE_BOX</tt>, <tt>wx.MINIMIZE_BOX</tt>和<tt>wx.CLOSE_BOX</tt>样式是否被应用。 <span id="line-343" class="anchor"/><span id="line-344"
class="anchor"/></p><p class="line874">下面的四张图显示了几个通常的框架的样式。 <span id="line-345" class="anchor"/><span id="line-346" class="anchor"/></p><p class="line867"><img title="attachment:w2.4.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.4.gif" class="attachment"/> <span id="line-347" class="anchor"/><span id="line-348" class="anchor"/><span id="line-349"
class="anchor"/><span id="line-350" class="anchor"/></p><p class="line867"><img title="attachment:w2.5.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.5.gif" class="attachment"/> <span id="line-351" class="anchor"/><span id="line-352" class="anchor"/><span id="line-353" class="anchor"/><span id="line-354" class="anchor"/></p><p class="line867"><img
title="attachment:w2.6.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.6.gif" class="attachment"/> <span id="line-355" class="anchor"/><span id="line-356" class="anchor"/><span id="line-357" class="anchor"/><span id="line-358" class="anchor"/></p><p class="line867"><img title="attachment:w2.7.gif"
src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.7.gif" class="attachment"/> <span id="line-359" class="anchor"/><span id="line-360" class="anchor"/><span id="line-361" class="anchor"/></p><p class="line862">图2.4是使用<tt>wx.DEFAULT_STYLE</tt>创建的。 <span id="line-362" class="anchor"/>图2.5是使用<tt>wx.DEFAULT_FRAME_STYLE</tt> ^ (<tt>wx.RESIZE_BORDER</tt> |
<tt>wx.MINIMIZE_BOX</tt> |<tt>wx.MAXIMIZE_BOX)</tt>组合样式创建的。 <span id="line-363" class="anchor"/>图2.6使用的样式是<tt>wx.DEFAULT_FRAME_STYLE</tt> | <tt>wx.FRAME_TOOL_WINDOW</tt>。 <span id="line-364" class="anchor"/>图2.7使用了扩展样式 <tt>wx.help.FRAME_EX_CONTEXTHELP</tt>。 <span id="line-365" class="anchor"/><span id="line-366" class="anchor"/><span id="line-367" class="anchor"/></p><p class="line867">
</p><h2 id="head-9dfb3856bed3208ba6b41623e6003a072d91d49c">1.6. 如何为一个框架增加对象和子窗口?</h2>
<span id="line-368" class="anchor"/><span id="line-369" class="anchor"/><span id="line-370" class="anchor"/><p class="line862">我们已经说明了如何创建<tt>wx.Frame</tt>对象，但是创建后的是空的。本节我们将介绍在你的框架中插入对象与子窗口的基础，以便与用户交互。 <span id="line-371" class="anchor"/><span id="line-372" class="anchor"/><span id="line-373" class="anchor"/></p><p class="line867">
</p><h3 id="head-f87657ecf5e9623d3b3853fded1db129906d17f6">1.6.1. 给框架增加窗口部件</h3>
<span id="line-374" class="anchor"/><span id="line-375" class="anchor"/><span id="line-376" class="anchor"/><p class="line862">图2.8显示了一个定制的<tt>wx.Frame</tt>的子类，名为<tt>InsertFrame</tt>。当点击<tt>close</tt>按钮时，这个窗口将关闭且应用程序将退出。例2.3定义了子类<tt>InsertFrame</tt>。 <span id="line-377" class="anchor"/><span id="line-378" class="anchor"/></p><p class="line867"><img
title="attachment:w2.8.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.8.gif" class="attachment"/> <span id="line-379" class="anchor"/><span id="line-380" class="anchor"/></p><p class="line874">例2.3 <span id="line-381" class="anchor"/><span id="line-382" class="anchor"/><span id="line-383" class="anchor"/><span id="line-384" class="anchor"/><span id="line-385"
class="anchor"/><span id="line-386" class="anchor"/><span id="line-387" class="anchor"/><span id="line-388" class="anchor"/><span id="line-389" class="anchor"/><span id="line-390" class="anchor"/><span id="line-391" class="anchor"/><span id="line-392" class="anchor"/><span id="line-393" class="anchor"/><span id="line-394" class="anchor"/><span id="line-395" class="anchor"/><span id="line-396"
class="anchor"/><span id="line-397" class="anchor"/><span id="line-398" class="anchor"/><span id="line-399" class="anchor"/><span id="line-400" class="anchor"/><span id="line-401" class="anchor"/><span id="line-402" class="anchor"/><span id="line-403" class="anchor"/><span id="line-404" class="anchor"/><span id="line-405" class="anchor"/><span id="line-406" class="anchor"/><span id="line-407"
class="anchor"/><span id="line-408" class="anchor"/><span id="line-409" class="anchor"/><span id="line-410" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-a862b5ab9a8eb302b1a8d848cae6614910d6b899_013\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-a862b5ab9a8eb302b1a8d848cae6614910d6b899_013', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-a862b5ab9a8eb302b1a8d848cae6614910d6b899_013" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/env python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">   4 </span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ResWord">class</span> <span class="ID">InsertFrame</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   6 </span></span>
<span class="line"><span class="LineNumber">   7 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   8 </span>        <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span
class="Operator">,</span> <span class="String">'Frame With Button'</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   9 </span>                <span class="ID">size</span><span class="Operator">=</span><span class="Operator">(</span><span class="Number">300</span><span class="Operator">,</span> <span class="Number">100</span><span class="Operator">)</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">panel</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Panel</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span> <span class="Comment">#创建画板</span></span>
<span class="line"><span class="LineNumber">  11 </span>        <span class="ID">button</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Button</span><span class="Operator">(</span><span class="ID">panel</span><span class="Operator">,</span> <span class="ID">label</span><span class="Operator">=</span><span
class="String">"Close"</span><span class="Operator">,</span> <span class="ID">pos</span><span class="Operator">=</span><span class="Operator">(</span><span class="Number">125</span><span class="Operator">,</span> <span class="Number">10</span><span class="Operator">)</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">  12 </span>                <span class="ID">size</span><span class="Operator">=</span><span class="Operator">(</span><span class="Number">50</span><span class="Operator">,</span> <span class="Number">50</span><span class="Operator">)</span><span class="Operator">)</span> <span class="Comment">#将按钮添加到画板</span></span>
<span class="line"><span class="LineNumber">  13 </span><span class="Comment">#绑定按钮的单击事件</span></span>
<span class="line"><span class="LineNumber">  14 </span><span class="Comment"/>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">Bind</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">EVT_BUTTON</span><span class="Operator">,</span> <span class="ID">self</span><span class="Operator">.</span><span
class="ID">OnCloseMe</span><span class="Operator">,</span> <span class="ID">button</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span><span class="Comment">#绑定窗口的关闭事件</span></span>
<span class="line"><span class="LineNumber">  16 </span><span class="Comment"/>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">Bind</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">EVT_CLOSE</span><span class="Operator">,</span> <span class="ID">self</span><span class="Operator">.</span><span
class="ID">OnCloseWindow</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span></span>
<span class="line"><span class="LineNumber">  18 </span>    <span class="ResWord">def</span> <span class="ID">OnCloseMe</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  19 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">Close</span><span class="Operator">(</span><span class="ID">True</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  20 </span></span>
<span class="line"><span class="LineNumber">  21 </span>    <span class="ResWord">def</span> <span class="ID">OnCloseWindow</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  22 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">Destroy</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  23 </span></span>
<span class="line"><span class="LineNumber">  24 </span><span class="ResWord">if</span> <span class="ID">__name__</span> <span class="Operator">==</span> <span class="String">'__main__'</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  25 </span>    <span class="ID">app</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">PySimpleApp</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  26 </span>    <span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">InsertFrame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">=</span><span
class="Operator">-</span><span class="Number">1</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  27 </span>    <span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  28 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">MainLoop</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-411" class="anchor"/><span id="line-412" class="anchor"/><p class="line862">类<tt>InsertFrame</tt>的方法<tt>__init__</tt>创建了两子窗口。第一个是<tt>wx.Panel</tt>，它是其它窗口的容器，它自身也有一点功能。第二个是<tt>wx.Button</tt>，它是一个平常按钮。接下来，按钮的单击事件和窗口的关闭事件被绑定到了相应的函数，当事件发生时这相应的函数将被调用执行。 <span id="line-413"
class="anchor"/><span id="line-414" class="anchor"/></p><p class="line862">大多数情况下，你将创建一个与你的<tt>wx.Frame</tt>大小一样的<tt>wx.Panel</tt>实例以容纳你的框架上的所有的内容。这样做可以让定制的窗口内容与其他如工具栏和状态栏分开。 通过<tt>tab</tt>按钮，可以遍历<tt>wx.Panel</tt>中的元素，<tt>wx.Frame</tt>不能。 <span id="line-415" class="anchor"/><span id="line-416" class="anchor"/></p><p
class="line862">你不必像使用别的<tt>UI</tt>工具包那样，你不需要显式调用一个增加方法来向双亲中插入一个子窗口。在<tt>wxPython</tt>中，你只需在子窗口被创建时指定父窗口，这个子窗口就隐式地增加到父对象中了，例如例2.3所示。 <span id="line-417" class="anchor"/><span id="line-418" class="anchor"/></p><p
class="line862">你可能想知道在例2.3中，为什么<tt>wx.Button</tt>被创建时使用了明确的位置和尺寸，而<tt>wx.Panel</tt>没有。在<tt>wxPython</tt>中，如果只有一个子窗口的框架被创建，那么那个子窗口（例2.3中是<tt>wx.Panel</tt>）被自动重新调整尺寸去填满该框架的客户区域。这个自动调整尺寸将覆盖关于这个子窗口的任何位置和尺寸信息，尽管关于子窗口的信息已被指定，这些信息将被忽略。这个自动调整尺寸仅适用于框架内或对话框内的只有唯一元素的情况。这里按钮是<tt>panel</tt>的元素，而不是框架的，所以要使用指定的尺寸和位置。如果没有为这个按钮指定尺寸和位置，它将使用默认的位置（<tt>panel</tt>的左上角）和基于按钮标签的长度的尺寸。
<span id="line-419" class="anchor"/><span id="line-420" class="anchor"/></p><p class="line862">显式地指定所有子窗口的位置和尺寸是十分乏味的。更重要的是，当用户调整窗口大小的时候，这使得子窗口的位置和大小不能作相应调整。为了解决这两个问题，<tt>wxPython</tt>使用了称为<tt>sizers</tt>的对象来管理子窗口的复杂布局。 <span id="line-421" class="anchor"/><span id="line-422" class="anchor"/><span
id="line-423" class="anchor"/></p><p class="line867">
</p><h3 id="head-8a801765a1bc7de69b48e47cd540b9ab74d622ac">1.6.2. 给框架增加菜单栏、工具栏和状态栏。</h3>
<span id="line-424" class="anchor"/><span id="line-425" class="anchor"/><span id="line-426" class="anchor"/><p class="line874">图2.9显示了一个有菜单栏、工具栏和状态栏的框架。 <span id="line-427" class="anchor"/><span id="line-428" class="anchor"/></p><p class="line867"><img title="attachment:w2.9.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.9.gif"
class="attachment"/> <span id="line-429" class="anchor"/><span id="line-430" class="anchor"/></p><p class="line862">例2.4显示了<tt>__init__</tt>方法，它用这三个子窗口装饰了一个简单的窗口。 <span id="line-431" class="anchor"/>例2.4 <span id="line-432" class="anchor"/><span id="line-433" class="anchor"/><span id="line-434" class="anchor"/><span id="line-435" class="anchor"/><span id="line-436"
class="anchor"/><span id="line-437" class="anchor"/><span id="line-438" class="anchor"/><span id="line-439" class="anchor"/><span id="line-440" class="anchor"/><span id="line-441" class="anchor"/><span id="line-442" class="anchor"/><span id="line-443" class="anchor"/><span id="line-444" class="anchor"/><span id="line-445" class="anchor"/><span id="line-446" class="anchor"/><span id="line-447"
class="anchor"/><span id="line-448" class="anchor"/><span id="line-449" class="anchor"/><span id="line-450" class="anchor"/><span id="line-451" class="anchor"/><span id="line-452" class="anchor"/><span id="line-453" class="anchor"/><span id="line-454" class="anchor"/><span id="line-455" class="anchor"/><span id="line-456" class="anchor"/><span id="line-457" class="anchor"/><span id="line-458"
class="anchor"/><span id="line-459" class="anchor"/><span id="line-460" class="anchor"/><span id="line-461" class="anchor"/><span id="line-462" class="anchor"/><span id="line-463" class="anchor"/><span id="line-464" class="anchor"/><span id="line-465" class="anchor"/><span id="line-466" class="anchor"/><span id="line-467" class="anchor"/><span id="line-468" class="anchor"/><span id="line-469"
class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-08ee494bdfc2be9b19feab6a20c72bb66390aa48_014\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-08ee494bdfc2be9b19feab6a20c72bb66390aa48_014', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-08ee494bdfc2be9b19feab6a20c72bb66390aa48_014" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/env python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ResWord">import</span> <span class="ID">wx</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ResWord">import</span> <span class="ID">images</span></span>
<span class="line"><span class="LineNumber">   5 </span></span>
<span class="line"><span class="LineNumber">   6 </span><span class="ResWord">class</span> <span class="ID">ToolbarFrame</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   7 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   8 </span>        <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Frame</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">,</span> <span
class="ID">id</span><span class="Operator">,</span> <span class="String">'Toolbars'</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   9 </span>                <span class="ID">size</span><span class="Operator">=</span><span class="Operator">(</span><span class="Number">300</span><span class="Operator">,</span> <span class="Number">200</span><span class="Operator">)</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">panel</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Panel</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  11 </span>        <span class="ID">panel</span><span class="Operator">.</span><span class="ID">SetBackgroundColour</span><span class="Operator">(</span><span class="String">'White'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  12 </span>        <span class="ID">statusBar</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">CreateStatusBar</span><span class="Operator">(</span><span class="Operator">)</span> <span class="Comment">#1 创建状态栏</span></span>
<span class="line"><span class="LineNumber">  13 </span>        <span class="ID">toolbar</span> <span class="Operator">=</span> <span class="ID">self</span><span class="Operator">.</span><span class="ID">CreateToolBar</span><span class="Operator">(</span><span class="Operator">)</span>     <span class="Comment">#2 创建工具栏</span></span>
<span class="line"><span class="LineNumber">  14 </span>        <span class="ID">toolbar</span><span class="Operator">.</span><span class="ID">AddSimpleTool</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span
class="ID">images</span><span class="Operator">.</span><span class="ID">getNewBitmap</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">  15 </span>                <span class="String">"New"</span><span class="Operator">,</span> <span class="String">"Long help for 'New'"</span><span class="Operator">)</span> <span class="Comment">#3 给工具栏增加一个工具</span></span>
<span class="line"><span class="LineNumber">  16 </span>        <span class="ID">toolbar</span><span class="Operator">.</span><span class="ID">Realize</span><span class="Operator">(</span><span class="Operator">)</span> <span class="Comment">#4 准备显示工具栏</span></span>
<span class="line"><span class="LineNumber">  17 </span>        <span class="ID">menuBar</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">MenuBar</span><span class="Operator">(</span><span class="Operator">)</span> <span class="Comment"># 创建菜单栏</span></span>
<span class="line"><span class="LineNumber">  18 </span><span class="Comment"># 创建两个菜单</span></span>
<span class="line"><span class="LineNumber">  19 </span><span class="Comment"/>        <span class="ID">menu1</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Menu</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  20 </span>        <span class="ID">menuBar</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">menu1</span><span class="Operator">,</span> <span class="String">" "</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  21 </span>        <span class="ID">menu2</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">Menu</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  22 </span><span class="Comment">#6 创建菜单的项目</span></span>
<span class="line"><span class="LineNumber">  23 </span><span class="Comment"/>        <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span
class="Operator">,</span> <span class="String">" "</span><span class="Operator">,</span> <span class="String">"Copy in status bar"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  24 </span>        <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span
class="String">"C "</span><span class="Operator">,</span> <span class="String">""</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  25 </span>        <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span
class="String">"Paste"</span><span class="Operator">,</span> <span class="String">""</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  26 </span>        <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">AppendSeparator</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  27 </span>        <span class="ID">menu2</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">NewId</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">,</span> <span
class="String">" "</span><span class="Operator">,</span> <span class="String">"Display Options"</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  28 </span>        <span class="ID">menuBar</span><span class="Operator">.</span><span class="ID">Append</span><span class="Operator">(</span><span class="ID">menu2</span><span class="Operator">,</span> <span class="String">" "</span><span class="Operator">)</span> <span class="Comment"># 在菜单栏上附上菜单</span></span>
<span class="line"><span class="LineNumber">  29 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">SetMenuBar</span><span class="Operator">(</span><span class="ID">menuBar</span><span class="Operator">)</span>  <span class="Comment"># 在框架上附上菜单栏</span></span>
<span class="line"><span class="LineNumber">  30 </span></span>
<span class="line"><span class="LineNumber">  31 </span></span>
<span class="line"><span class="LineNumber">  32 </span><span class="ResWord">if</span> <span class="ID">__name__</span> <span class="Operator">==</span> <span class="String">'__main__'</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  33 </span>    <span class="ID">app</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">PySimpleApp</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  34 </span>    <span class="ID">frame</span> <span class="Operator">=</span> <span class="ID">ToolbarFrame</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">,</span> <span class="ID">id</span><span class="Operator">=</span><span
class="Operator">-</span><span class="Number">1</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  35 </span>    <span class="ID">frame</span><span class="Operator">.</span><span class="ID">Show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  36 </span>    <span class="ID">app</span><span class="Operator">.</span><span class="ID">MainLoop</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-470" class="anchor"/><span id="line-471" class="anchor"/><p class="line867"><strong>说明：</strong> <span id="line-472" class="anchor"/><span id="line-473" class="anchor"/><span id="line-474" class="anchor"/></p><ul><li style="list-style-type: none;"><p
class="line891"><strong>#1</strong>：这行创建了一个状态栏，它是类<tt>wx.StatusBar</tt>的实例。它被放置在框架的底部，宽度与框架相同，高度由操作系统决定。状态栏的目的是显示在应用程序中被各种事件所设置的文本。 <span id="line-475" class="anchor"/><span id="line-476" class="anchor"/></p><p
class="line891"><strong>#2</strong>：创建了一个<tt>wx.ToolBar</tt>的实例，它是命令按钮的容器。它被自动放置在框架的顶部 <span id="line-477" class="anchor"/><span id="line-478" class="anchor"/></p><p
class="line891"><strong>#3</strong>：有两种方法来为你工具栏增加工具，这行使用了参数较少的一种：<tt>AddSimpleTool()</tt>。参数分别是<tt>ID</tt>，位图，该工具的短的帮助提示文本，显示在状态栏中的该工具的长的帮助文本信息。（此刻不要考虑位图从哪儿来） <span id="line-479" class="anchor"/><span id="line-480" class="anchor"/></p><p
class="line891"><strong>#4</strong>：<tt>Realize()</tt>方法告诉工具栏这些工具按钮应该被放置在哪儿。这是必须的。 <span id="line-481" class="anchor"/><span id="line-482" class="anchor"/></p><p class="line891"><strong>#6</strong>：创建菜单的项目，其中参数分别代表<tt>ID</tt>，选项的文本，当鼠标位于其上时显示在状态栏的文本。 <span id="line-483" class="anchor"/><span id="line-484"
class="anchor"/><span id="line-485" class="anchor"/></p></li></ul><p class="line867">
</p><h2 id="head-f308c882f5ea62be5149d867598379966fb6c871">1.7. 如何使用一般的对话框?</h2>
<span id="line-486" class="anchor"/><span id="line-487" class="anchor"/><span id="line-488" class="anchor"/><p class="line867"><tt>wxPython</tt>提供了一套丰富的预定义的对话框。这部分，我们将讨论三种用对话框得到来自用户的信息： <span id="line-489" class="anchor"/><span id="line-490" class="anchor"/></p><p class="line874">1、消息对话框 <span id="line-491"
class="anchor"/>2、文本输入对话框 <span id="line-492" class="anchor"/>3、从一个列表中选择 <span id="line-493" class="anchor"/><span id="line-494" class="anchor"/></p><p class="line862">在<tt>wxPython</tt>中有许多别的标准对话框，包括文件选择器、色彩选择器、进度对话框、打印设置和字体选择器。这些将在第9章介绍。 <span id="line-495" class="anchor"/><span id="line-496"
class="anchor"/><span id="line-497" class="anchor"/></p><p class="line867"><strong>消息对话框</strong> <span id="line-498" class="anchor"/><span id="line-499" class="anchor"/></p><p
class="line862">与用户通信最基本的机制是<tt>wx.MessageDialog</tt>，它是一个简单的提示框。<tt>wx.MessageDialog</tt>可用作一个简单的<tt>OK</tt>框或<tt>yes</tt>/<tt>no</tt>对话框。下面的片断显示了<tt>yes</tt>/<tt>no</tt>对话框： <span id="line-500" class="anchor"/><span id="line-501" class="anchor"/><span id="line-502" class="anchor"/><span id="line-503" class="anchor"/><span
id="line-504" class="anchor"/><span id="line-505" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-0b9cf4be796d4b92acc644bea6bbdb5963e4c354_015\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-0b9cf4be796d4b92acc644bea6bbdb5963e4c354_015', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-0b9cf4be796d4b92acc644bea6bbdb5963e4c354_015" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">dlg</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">MessageDialog</span><span class="Operator">(</span><span class="ID">None</span><span
class="Operator">,</span> <span class="String">'Is this the coolest thing ever!'</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   2 </span>                      <span class="String">'MessageDialog'</span><span class="Operator">,</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">YES_NO</span> <span class="Operator">|</span> <span class="ID">wx</span><span class="Operator">.</span><span
class="ID">ICON_QUESTION</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ID">result</span> <span class="Operator">=</span> <span class="ID">dlg</span><span class="Operator">.</span><span class="ID">ShowModal</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ID">dlg</span><span class="Operator">.</span><span class="ID">Destroy</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-506" class="anchor"/><p class="line874">显示结果如图2.10所示： <span id="line-507" class="anchor"/><span id="line-508" class="anchor"/></p><p class="line867"><img title="attachment:w2.10.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.10.gif" class="attachment"/> <span id="line-509"
class="anchor"/><span id="line-510" class="anchor"/><span id="line-511" class="anchor"/></p><p class="line867"><tt>wx.MessageDialog</tt>参数如下： <span id="line-512" class="anchor"/><span id="line-513" class="anchor"/><span id="line-514" class="anchor"/><span id="line-515" class="anchor"/><span id="line-516" class="anchor"/><span id="line-517"
class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-fe5ada8e866bbf639f45076adad998e1907f3b52_016\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-fe5ada8e866bbf639f45076adad998e1907f3b52_016', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-fe5ada8e866bbf639f45076adad998e1907f3b52_016" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">MessageDialog</span><span class="Operator">(</span><span class="ID">parent</span><span class="Operator">,</span> <span
class="ID">message</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   2 </span>        <span class="ID">caption</span><span class="Operator">=</span><span class="String">"Message box"</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   3 </span>        <span class="ID">style</span><span class="Operator">=</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">OK</span> <span class="Operator">|</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">CANCEL</span><span
class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   4 </span>        <span class="ID">pos</span><span class="Operator">=</span><span class="ID">wx</span><span class="Operator">.</span><span class="ID">DefaultPosition</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-518" class="anchor"/><span id="line-519" class="anchor"/><p class="line867"><strong>参数说明</strong>： <span id="line-520" class="anchor"/><span id="line-521" class="anchor"/></p><p class="line867"><tt>parent</tt>：对话框的父窗口，如果对话框是顶级的则为<tt>None</tt>。 <span id="line-522"
class="anchor"/><tt>message</tt>：显示在对话框中的字符串。 <span id="line-523" class="anchor"/><tt>caption</tt>：显示在对话框标题栏上的字符串。 <span id="line-524" class="anchor"/><tt>style</tt>：对话框中按钮的样式。 <span id="line-525" class="anchor"/><tt>pos</tt>：对话框出现的位置。 <span id="line-526" class="anchor"/><span id="line-527"
class="anchor"/></p><p class="line867"><tt>ShowModal()</tt>方法将对话框以模式框架的方式显示，这意味着在对话框关闭之前，应用程序中的别的窗口不能响应用户事件。<tt>ShowModal()</tt>方法的返回值是一个整数，对于<tt>wx.MessageDialog</tt>，返回值是下面常量之一： <tt>wx.ID_YES</tt>, <tt>wx.ID_NO</tt>, <tt>wx.ID_CANCEL</tt>, <tt>wx.ID_OK</tt>。 <span
id="line-528" class="anchor"/><span id="line-529" class="anchor"/><span id="line-530" class="anchor"/></p><p class="line867"><strong>文本输入对话框</strong> <span id="line-531" class="anchor"/><span id="line-532" class="anchor"/></p><p
class="line862">如果你想从用户那里得到单独一行文本，你可能使用类<tt>wx.TextEntryDialog</tt>。下面的片断创建了一个文本输入域，当用户单击<tt>OK</tt>按钮退出时，获得用户输入的值： <span id="line-533" class="anchor"/><span id="line-534" class="anchor"/><span id="line-535" class="anchor"/><span id="line-536" class="anchor"/><span id="line-537"
class="anchor"/><span id="line-538" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-35eaaff90acbd1c77d07a3b3872a791f2031184c_017\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-35eaaff90acbd1c77d07a3b3872a791f2031184c_017', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-35eaaff90acbd1c77d07a3b3872a791f2031184c_017" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">dlg</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">TextEntryDialog</span><span class="Operator">(</span><span
class="ID">None</span><span class="Operator">,</span> <span class="String">"Who is buried in Grant's tomb?"</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   2 </span>        <span class="String">'A Question'</span><span class="Operator">,</span> <span class="String">'Cary Grant'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="ResWord">if</span> <span class="ID">dlg</span><span class="Operator">.</span><span class="ID">ShowModal</span><span class="Operator">(</span><span class="Operator">)</span> <span class="Operator">==</span> <span class="ID">wx</span><span
class="Operator">.</span><span class="ID">ID_OK</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   4 </span>    <span class="ID">response</span> <span class="Operator">=</span> <span class="ID">dlg</span><span class="Operator">.</span><span class="ID">GetValue</span><span class="Operator">(</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-539" class="anchor"/><p class="line874">图2.11显示了上面这个对话框： <span id="line-540" class="anchor"/><span id="line-541" class="anchor"/></p><p class="line867"><img title="attachment:w2.11.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.11.gif" class="attachment"/>
<span id="line-542" class="anchor"/><span id="line-543" class="anchor"/><span id="line-544" class="anchor"/></p><p class="line862">上面的<tt>wx.TextEntryDialog</tt>的参数按顺序说明是，父窗口，显示在窗口中的文本标签，窗口的标题（默认是“<tt>Please</tt> <tt>enter</tt>
<tt>text</tt>”），输入域中的默认值。同样它也有一个样式参数，默认是<tt>wx.OK</tt> | <tt>wx.CANCEL</tt>。与<tt>wx.MessageDialog</tt>一样，<tt>ShowModal()</tt>方法返回所按下的按钮的<tt>ID</tt>。<tt>GetValue()</tt>方法得到用户输入在文本域中的值（这有一个相应的<tt>SetValue()</tt>方法让你可以改变文本域中的值）。 <span id="line-545"
class="anchor"/><span id="line-546" class="anchor"/><span id="line-547" class="anchor"/></p><p class="line867"><strong>从一个列表中选择</strong> <span id="line-548" class="anchor"/><span id="line-549" class="anchor"/></p><p
class="line862">你可以让用户只能从你所提供的列表中选择，你可以使用类<tt>wx.SingleChoiceDialog</tt>。下面是一个简单的用法： <span id="line-550" class="anchor"/><span id="line-551" class="anchor"/><span id="line-552" class="anchor"/><span id="line-553" class="anchor"/><span id="line-554" class="anchor"/><span id="line-555"
class="anchor"/><span id="line-556" class="anchor"/><span id="line-557" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-0aeb8cd60483c611007769d00274a7da5a605b21_018\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-0aeb8cd60483c611007769d00274a7da5a605b21_018', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-0aeb8cd60483c611007769d00274a7da5a605b21_018" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="ID">dlg</span> <span class="Operator">=</span> <span class="ID">wx</span><span class="Operator">.</span><span class="ID">SingleChoiceDialog</span><span
class="Operator">(</span><span class="ID">None</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   2 </span>        <span class="String">'What version of Python are you using?'</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   3 </span>        <span class="String">'Single Choice'</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   4 </span>        <span class="Operator">[</span><span class="String">'1.5.2'</span><span class="Operator">,</span> <span class="String">'2.0'</span><span class="Operator">,</span> <span class="String">'2.1.3'</span><span class="Operator">,</span> <span
class="String">'2.2'</span><span class="Operator">,</span> <span class="String">'2.3.1'</span><span class="Operator">]</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ResWord">if</span> <span class="ID">dlg</span><span class="Operator">.</span><span class="ID">ShowModal</span><span class="Operator">(</span><span class="Operator">)</span> <span class="Operator">==</span> <span class="ID">wx</span><span
class="Operator">.</span><span class="ID">ID_OK</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   6 </span>    <span class="ID">response</span> <span class="Operator">=</span> <span class="ID">dlg</span><span class="Operator">.</span><span class="ID">GetStringSelection</span><span class="Operator">(</span><span class="Operator">)</span>
<strong>ERROR: EOF in multi-line statement</strong>
</span>
</pre></div><span id="line-558" class="anchor"/><p class="line874">图2.12显示了上面代码片断的结果。 <span id="line-559" class="anchor"/><span id="line-560" class="anchor"/></p><p class="line867"><img title="attachment:w2.12.gif" src="/moin/WxPythonInAction/ChapterTwo?action=AttachFile&amp;do=get&amp;target=w2.12.gif"
class="attachment"/> <span id="line-561" class="anchor"/><span id="line-562" class="anchor"/></p><p
class="line867"><tt>wx.SingleChoiceDialog</tt>的参数类似于文本输入对话框，只是以字符串的列表代替了默认的字符串文本。要得到所选择的结果有两种方法，<tt>GetSelection()</tt>方法返回用户选项的索引，而<tt>GetStringSelection()</tt>返回实际所选的字符串。 <span id="line-563" class="anchor"/><span id="line-564"
class="anchor"/></p><p class="line867">
</p><h2 id="head-e56318344aa2af1151a751381e61a972221ea9b9">1.8. 一些最常见的错误现象及解决方法?</h2>
<span id="line-565" class="anchor"/><span id="line-566" class="anchor"/><span id="line-567" class="anchor"/><p class="line862">有一些错误它们可能会发生在你的<tt>wxPython</tt>应用程序对象或初始的顶级窗口在创建时，这些错误可能是很难诊断的。下面我们列出一些最常见的错误现象及解决方法： <span id="line-568"
class="anchor"/><span id="line-569" class="anchor"/><span id="line-570" class="anchor"/></p><p class="line867"><strong>错误现象</strong>： <span id="line-571" class="anchor"/>程序启动时提示“<tt>unable</tt> <tt>to</tt> <tt>import</tt> <tt>module</tt> <tt>wx</tt>。” <span id="line-572" class="anchor"/><span id="line-573"
class="anchor"/></p><p class="line867"><strong>原因</strong>： <span id="line-574" class="anchor"/><tt>wxPython</tt>模块不在你的<tt>PYTHONPATH</tt>中。这意味着<tt>wxPython</tt>没有被正确地安装。如果你的系统上有多个版本的<tt>Python</tt>，<tt>wxPython</tt>可能安装在了你没有使用的<tt>Python</tt>版本中。 <span
id="line-575" class="anchor"/><span id="line-576" class="anchor"/></p><p class="line867"><strong>解决方法</strong>： <span id="line-577" class="anchor"/>首先，确定你的系统上安装了哪些版本的<tt>Python</tt>。在<tt>Unix</tt>系统上，使用<tt>which</tt>
<tt>python</tt>命令将告诉你默认的安装。在<tt>Windows</tt>系统上，如果<tt>wxPython</tt>被安装到了相应的<tt>Python</tt>版本中，它将位于 <tt>python</tt>-<tt>home</tt> /<tt>Lib</tt>/<tt>site</tt>-<tt>packages</tt>子目录下。然后重装<tt>wxPython</tt>。 <span id="line-578" class="anchor"/><span id="line-579"
class="anchor"/><span id="line-580" class="anchor"/></p><p class="line867"><strong>错误现象</strong>： <span id="line-581" class="anchor"/>应用程序启动时立即崩溃，或崩溃后出现一空白窗口。 <span id="line-582" class="anchor"/><span id="line-583" class="anchor"/></p><p class="line867"><strong>原因</strong>： <span
id="line-584" class="anchor"/>在<tt>wx.App</tt>创建之前，创建或使用了一个<tt>wxPython</tt>对象。 <span id="line-585" class="anchor"/><span id="line-586" class="anchor"/></p><p class="line867"><strong>解决方法</strong>： <span id="line-587" class="anchor"/>在启动你的脚本时立即创建<tt>wx.App</tt>对象。 <span
id="line-588" class="anchor"/><span id="line-589" class="anchor"/><span id="line-590" class="anchor"/></p><p class="line867"><strong>错误现象</strong>： <span id="line-591" class="anchor"/>顶级窗口被创建同时又立刻关闭。应用程序立即退出。 <span id="line-592" class="anchor"/><span id="line-593" class="anchor"/></p><p
class="line867"><strong>原因</strong>： <span id="line-594" class="anchor"/>没有调用<tt>wx.App</tt>的<tt>MainLoop()</tt>方法。 <span id="line-595" class="anchor"/><span id="line-596" class="anchor"/></p><p class="line867"><strong>解决方法</strong>： <span id="line-597"
class="anchor"/>在你的所有设置完成后调用<tt>MainLoop()</tt>方法。 <span id="line-598" class="anchor"/><span id="line-599" class="anchor"/><span id="line-600" class="anchor"/></p><p class="line867"><strong>错误现象</strong>： <span id="line-601"
class="anchor"/>顶级窗口被创建同时又立刻关闭。应用程序立即退出。但我调用了<tt>MainLoop()</tt>方法。 <span id="line-602" class="anchor"/><span id="line-603" class="anchor"/></p><p class="line867"><strong>原因</strong>： <span id="line-604"
class="anchor"/>你的应用程序的<tt>OnInit()</tt>方法中有错误，或<tt>OnInit()</tt>方法调用了某些方法（如帧的<tt>__init__()</tt>方法）。 <span id="line-605" class="anchor"/><span id="line-606" class="anchor"/></p><p class="line867"><strong>解决方法</strong>： <span id="line-607"
class="anchor"/>在<tt>MainLoop()</tt>被调用之前出现错误的话，这将触发一个异常且程序退出。如果你的应用程序设置了重定向输出到窗口，那么那些窗口将一闪而过，你不能看到显示在窗口中的错误信息。这种情况下，你要使用 <tt>redirect</tt>=<tt>False</tt>关闭重定向选项，以便看到错误提示。 <span id="line-608" class="anchor"/><span
id="line-609" class="anchor"/><span id="line-610" class="anchor"/></p><p class="line867">
</p><h2 id="head-b56bff8de1dcb12fbb89f4eea9c412e8dc637c20">1.9. 总结</h2>
<span id="line-611" class="anchor"/><span id="line-612" class="anchor"/><span id="line-613" class="anchor"/><ol type="1"><li><p class="line891"><tt>wxPython</tt>程序的实现基于两个必要的对象：应用程序对象和顶级窗口。任何<tt>wxPython</tt>应用程序都需要去实例化一个<tt>wx.App</tt>，并且至少有一个顶级窗口。 <span
id="line-614" class="anchor"/><span id="line-615" class="anchor"/></p></li><li class="gap"><p class="line862">应用程序对象包含<tt>OnInit()</tt>方法，它在启动时被调用。在这个方法中，通常要初始化框架和别的全局对象。<tt>wxPython</tt>应用程序通常在它的所有的顶级窗口被关闭或主事件循环退出时结束。 <span id="line-616"
class="anchor"/><span id="line-617" class="anchor"/></p></li><li class="gap"><p
class="line862">应用程序对象也控制<tt>wxPython</tt>文本输出的位置。默认情况下，<tt>wxPython</tt>重定向<tt>stdout</tt>和<tt>stderr</tt>到一个特定的窗口。这个行为使得诊断启动时产生的错误变得困难了。但是我们可以通过让<tt>wxPython</tt>把错误消息发送到一个文件或控制台窗口来解决。 <span id="line-618" class="anchor"/><span
id="line-619" class="anchor"/></p></li><li class="gap"><p
class="line862">一个<tt>wxPython</tt>应用程序通常至少有一个<tt>wx.Frame</tt>的子类。一个<tt>wx.Frame</tt>对象可以使用<tt>style</tt>参数来创建组合的样式。每个<tt>wxWidget</tt>对象，包括框架，都有一个<tt>ID</tt>，这个<tt>ID</tt>可以被应用程序显式地赋值或由<tt>wxPython</tt>生成。子窗口是框架的内容，框架是它的双亲。通常，一个框架包含一个单一的<tt>wx.Panel</tt>，更多的子窗口被放置在这个<tt>Panel</tt>中。框架的唯一的子窗口的尺寸自动随其父框架的尺寸的改变而改变。框架有明确的关于管理菜单栏、工具栏和状态栏的机制。
<span id="line-620" class="anchor"/><span id="line-621" class="anchor"/></p></li><li class="gap">尽管你将使用框架做任何复杂的事情，但当你想简单而快速地得到来自用户的信息时，你可以给用户显示一个标准的对话窗口。对于很多任务都有标准的对话框，包括警告框、简单的文本输入框和列表选择框等等。 <span id="line-622"
class="anchor"/></li></ol><span id="bottom" class="anchor"/></div>
