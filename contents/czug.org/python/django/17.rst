  
  <h1 style="margin:25px 0 10px 10px">翻译www.djangobook.com之第十七章：与遗留系统和数据库集成 
    
  </h1>
  <div class="content">
    <span style="color: red"><strong>The Django Book：第17章 与遗留系统和数据库集成</strong></span><br /><br />尽管Django最适合从零开始开发项目--所谓的"绿色领域"开发--将框架与遗留系统和数据库集成是可能的，本章解释一些<br />集成策略<br /><br /><strong>与遗留数据库集成</strong><br />Django的数据库层从Python代码生成SQL schemas--但是对于遗留数据库，你已经拥有SQL schemas，这种情况下你需要为你<br />已经存在的数据库表写模型(由于性能的原因，Django的数据库层不支持通过运行时自省数据库的不工作的对象-关系映射，<br />为了使用数据库API，你需要写模型代码)，幸运的是，Django带有通过阅读你的数据库表规划来生成模型代码的辅助工具<br />该辅助工具称为manage.py inspectdb<br /><br /><strong>使用inspectdb</strong><br />inspectdb辅助工具检查你的settings文件指向的数据库，决定你表示你的表的Django模型并打印Python模型代码到标准输出<br />这里是典型的从零开始的遗留数据库处理的过程，唯一的前提是Django已经安装并且你有一个遗留数据库<br />1，通过运行django-admin.py startproject mysite(这里mysite是你的项目名)创建Django项目，我们将在例子中使用mysit<br />e作为项目名<br />2，在项目中编辑settings文件mysite/settings.py来告诉Django你的数据库连接参数是什么以及数据库名是什么，特别的，<br />你将想指定DATABASE_NAME，DATABASE_ENGINE，DATABASE_USER，DATABASE_PASSWORD，DATABASE_HOST和DATABASE_PROT设置<br />3，通过运行python mysite/manage.py startapp myapp(这里myapp是你的app名)来在你的项目中创建Django app，我们这里<br />将使用myapp作为项目名<br />4，运行命令python mysite/manage.py inspectdb，这将检查DATABASE_NAME数据库中的表并为每个表打印模型类，看看输出<br />来了解inspectdb可以做什么事情<br />5，在你的app里通过使用标注shell输出重定向保存输出到models.py文件:<br />python mysite/manage.py inspectdb &gt; mysite/myapp/models.py<br />6，编辑mysite/myapp/models.py文件，整理生成的模型并且做你需要的自定义，我们将在下一节对此给出一些提示<br /><br /><strong>整理生成的模型</strong><br />你可能料想到了，数据库省查不是完美的，你将需要做一些轻量的结果模型代码的整理，这里是处理生成的模型的一些指示:<br />1，每个数据库表都被转换为一个模型类--即，在数据库表和模型类之间有一个一对一映射，这意味着你将需要对任何多对多<br />链接表重整模型为ManyToManyField对象<br />2，每个生成的模型对每个域有一个属性--包括id主键域，尽管如此，如果模型没有主键，调用它Django会自动添加id主键域<br />这样，如果你非常肛门，你将像删除任何像这样的行，因为它们是冗余的:<br />id = models.IntegerField(primary_key=True)<br />3，每个域的类型(如CharField，DateField)通过查看数据库列类型(如VARCHAR，DATE)来决定，如果inspectdb不能映射一个<br />列的类型到模型域，它将使用TextField并在生成的模型中该域附近插入Python注释"该域类型是猜的"，当心它，如果需要则<br />对应的改变域类型<br />4，如果数据库列名是Python保留字(如pass，class或者for)，inspectdb将添加'_field'到属性名，例如，如果一个表有一<br />个列for，生成的模型将有一个域for_field，db_column属性设置为'for'.inspectdb将插入Python注释'域被重命名因为它是<br />Python保留字'到域附近<br />5，如果你的数据库包含引用到其它表的表(大部分数据库这样做)，你可能需要重新安排生成的模型的顺序来使引用其它模型<br />的模型正确的排序，例如，模型Foo有一个ForeignKey到模型Bar，则模型Bar应该在模型Foo之前定义<br />6，inspectdb为PostgreSQL，MySQL和SQLite检测主键，即它在合适的地方插入primary_key=True，对于其它数据库，你将需<br />要在每个模型中为至少一个域插入primary_key=True，因为Django模型需要有一个primary=True的域<br />7，外键检测只与PostgreSQL和某些类型的MySQL表工作，其他情况下，外键域将生成为IntegerField(假设外键列为INT列)<br /><br /><strong>更多</strong><br />本章你还想看到什么内容?你对Django与遗留系统/数据库集成有什么问题?在本段留下注释来让我们知道
  </div>

  

  
