<div lang="en" id="content" dir="ltr"><span id="top" class="anchor"/>
<span id="line-4" class="anchor"/><p class="line867"><strong> 含有章节索引的中文 文章模板 </strong> <span id="line-5" class="anchor"/><span id="line-6" class="anchor"/></p><p class="line862">::-- <a href="/moin/zhuyj">zhuyj</a> [2008-06-11 10:01:23] </p><div class="table-of-contents"><p class="table-of-contents-heading">目录</p><ol><li><a href="#head-bba776156e0cdaf310da03b4b2733d699c45321e">Events and Signals in PyQt4</a><ol><li><a href="#head-fad130de8ac28e9923e24aeb16ce28e23ba9a942">Events</a></li><li><a href="#head-67ac88a2d507e35cef90a3de0f0d328ffc02b83a">Signals & Slots</a></li><li><a href="#head-a6f77092ec1fcb9b138d581fbfd349a277f1db83">Reimplementing event handler</a></li><li><a href="#head-2a9e5bde88baa066dc6a99bc346003922513b4a2">Emitting
signals</a></li></ol></li></ol></div> <span id="line-7" class="anchor"/><span id="line-8" class="anchor"/><p class="line867">
</p><h1 id="head-bba776156e0cdaf310da03b4b2733d699c45321e">1. Events and Signals in PyQt4</h1>
<span id="line-9" class="anchor"/><p class="line867"><strong><a href="/moin/PyQt4" class="nonexistent">PyQt4</a>中的事件和信号</strong> <span id="line-10" class="anchor"/><span id="line-11" class="anchor"/></p><p class="line867"><em> In this part of the <a href="/moin/PyQt4" class="nonexistent">PyQt4</a> programming tutorial, we will explore events and singnals occuring in applications.</em> <span id="line-12" class="anchor"/><span id="line-13" class="anchor"/></p><ul><li style="list-style-type: none;"><p class="line862">在<a href="/moin/PyQt4" class="nonexistent">PyQt4</a>编程指导的这一部分，我们将探索事件和信号在程序里的存在。 <span id="line-14" class="anchor"/><span id="line-15" class="anchor"/></p></li></ul><p class="line867">
</p><h2 id="head-fad130de8ac28e9923e24aeb16ce28e23ba9a942">1.1. Events</h2>
<span id="line-16" class="anchor"/><p class="line867"><strong>事件</strong> <span id="line-17" class="anchor"/><span id="line-18" class="anchor"/></p><p class="line867"><em> Events are an important part in any GUI program. Events are generated by users or by the system. When we call the application's exec_() method, the application enters the main loop. The main loop fetches events and sends them to the objects. Trolltech has introduced a unique signal and slot mechanism.</em> <span id="line-19" class="anchor"/><span id="line-20" class="anchor"/></p><ul><li style="list-style-type:
none;">事件是任何GUI程序中最重要的部分。事件由用户或者系统生成，当我们调用应用程序的exec_()方法时，应用程序进入了它的主循环，主循环获取事件并将他们送给对象处理。奇趣科技引入了一种独一无二的信号和插槽机制来处理事件。 <span id="line-21" class="anchor"/><span id="line-22" class="anchor"/></li></ul><p class="line867">
</p><h2 id="head-67ac88a2d507e35cef90a3de0f0d328ffc02b83a">1.2. Signals & Slots</h2>
<span id="line-23" class="anchor"/><p class="line867"><strong>信号和插槽</strong> <span id="line-24" class="anchor"/><span id="line-25" class="anchor"/></p><p class="line867"><em>Signals are emitted, when users click on the button, drag a slider etc. Signals can be emitted also by the environment. For example, when a clock ticks. A slot is a method, that reacts to a signal. In python, a slot can be any python callable. </em> <span id="line-26" class="anchor"/><span id="line-27" class="anchor"/></p><ul><li style="list-style-type: none;">当用户点击按钮，拖动滑块等操作时会产生信号，同时环境也可以产生信号，比如时钟的信号。插槽是一种针对信号进行处理的方法。python中插槽可以是任何的python可调用部分。 <span id="line-28" class="anchor"/><span id="line-29" class="anchor"/></li></ul><p
class="line867"><span id="line-30" class="anchor"/><span id="line-31" class="anchor"/><span id="line-32" class="anchor"/><span id="line-33" class="anchor"/><span id="line-34" class="anchor"/><span id="line-35" class="anchor"/><span id="line-36" class="anchor"/><span id="line-37" class="anchor"/><span id="line-38" class="anchor"/><span id="line-39" class="anchor"/><span id="line-40" class="anchor"/><span id="line-41" class="anchor"/><span id="line-42" class="anchor"/><span id="line-43" class="anchor"/><span id="line-44" class="anchor"/><span id="line-45" class="anchor"/><span id="line-46" class="anchor"/><span id="line-47" class="anchor"/><span id="line-48" class="anchor"/><span id="line-49" class="anchor"/><span id="line-50" class="anchor"/><span id="line-51"
class="anchor"/><span id="line-52" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
function isnumbered(obj) {
return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
var nlen = Math.max(0,chrs-(''+num).length), res = '';
while (nlen>0) { res += ' '; nlen-- }
return res+num+add;
}
function addnumber(did, nstart, nstep) {
var c = document.getElementById(did), l = c.firstChild, n = 1;
if (!isnumbered(c))
if (typeof nstart == 'undefined') nstart = 1;
if (typeof nstep  == 'undefined') nstep = 1;
n = nstart;
while (l != null) {
if (l.tagName == 'SPAN') {
var s = document.createElement('SPAN');
s.className = 'LineNumber'
s.appendChild(document.createTextNode(nformat(n,4,' ')));
n += nstep;
if (l.childNodes.length)
l.insertBefore(s, l.firstChild)
else
l.appendChild(s)
}
l = l.nextSibling;
}
return false;
}
function remnumber(did) {
var c = document.getElementById(did), l = c.firstChild;
if (isnumbered(c))
while (l != null) {
if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
l = l.nextSibling;
}
return false;
}
function togglenumber(did, nstart, nstep) {
var c = document.getElementById(did);
if (isnumbered(c)) {
remnumber(did);
} else {
addnumber(did,nstart,nstep);
}
return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-19070c31b70009bb32d676aa15764fffa5146e83_000\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-19070c31b70009bb32d676aa15764fffa5146e83_000', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-19070c31b70009bb32d676aa15764fffa5146e83_000" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/><span class="Comment"># sigslot.py</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="Comment"/><span class="ResWord">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ResWord">from</span> <span class="ID">PyQt4</span> <span class="ResWord">import</span> <span class="ID">QtGui</span><span class="Operator">,</span> <span class="ID">QtCore</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ResWord">class</span> <span class="ID">SigSlot</span><span class="Operator">(</span><span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QWidget</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   6 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   7 </span>        <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QWidget</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   8 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">setWindowTitle</span><span class="Operator">(</span><span class="String">'signal & slot'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   9 </span>        <span class="ID">lcd</span> <span class="Operator">=</span> <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QLCDNumber</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">slider</span> <span class="Operator">=</span> <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QSlider</span><span class="Operator">(</span><span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">Qt</span><span class="Operator">.</span><span class="ID">Horizontal</span><span class="Operator">,</span> <span class="ID">self</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  11 </span>        <span class="ID">vbox</span> <span class="Operator">=</span> <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QVBoxLayout</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  12 </span>        <span class="ID">vbox</span><span class="Operator">.</span><span class="ID">addWidget</span><span class="Operator">(</span><span class="ID">lcd</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  13 </span>        <span class="ID">vbox</span><span class="Operator">.</span><span class="ID">addWidget</span><span class="Operator">(</span><span class="ID">slider</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">setLayout</span><span class="Operator">(</span><span class="ID">vbox</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">connect</span><span class="Operator">(</span><span class="ID">slider</span><span class="Operator">,</span>  <span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">SIGNAL</span><span class="Operator">(</span><span class="String">'valueChanged(int)'</span><span class="Operator">)</span><span class="Operator">,</span> <span class="ID">lcd</span><span class="Operator">,</span></span>
<span class="line"><span class="LineNumber">  16 </span>                <span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">SLOT</span><span class="Operator">(</span><span class="String">'display(int)'</span><span class="Operator">)</span> <span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">resize</span><span class="Operator">(</span><span class="Number">250</span><span class="Operator">,</span> <span class="Number">150</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  18 </span><span class="ID">app</span> <span class="Operator">=</span> <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QApplication</span><span class="Operator">(</span><span class="ID">sys</span><span class="Operator">.</span><span class="ID">argv</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  19 </span><span class="ID">qb</span> <span class="Operator">=</span> <span class="ID">SigSlot</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  20 </span><span class="ID">qb</span><span class="Operator">.</span><span class="ID">show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  21 </span><span class="ID">sys</span><span class="Operator">.</span><span class="ID">exit</span><span class="Operator">(</span><span class="ID">app</span><span class="Operator">.</span><span class="ID">exec_</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-53" class="anchor"/><p class="line867"><em> In our example, we display an lcd number and a slider. We change the lcd number by dragging the slider. </em> <span id="line-54" class="anchor"/><span id="line-55" class="anchor"/></p><ul><li style="list-style-type: none;">在这个例子中，我们显示一个lcd数字和一个滑块，我们可以通过拖拽滑块来改变lcs的数字显示。 <span id="line-56" class="anchor"/><span id="line-57" class="anchor"/></li></ul><p class="line867"><span id="line-58" class="anchor"/></p><pre> self.connect(slider,  QtCore.SIGNAL('valueChanged(int)'), lcd,
QtCore.SLOT('display(int)') )
<span id="line-59" class="anchor"/></pre><span id="line-60" class="anchor"/><p class="line867"><em> Here we connect a valueChanged() signal of the slider to the display() slot of the lcd number.</em> <span id="line-61" class="anchor"/><span id="line-62" class="anchor"/></p><ul><li style="list-style-type: none;">这里我们将滑块的valueChanged()信号与lcd数字的display()插槽相关联。 <span id="line-63" class="anchor"/><span id="line-64" class="anchor"/></li></ul><p class="line867"><em> The connect method has four parameters. The sender is an object that sends a signal. The signal is the signal, which is
emitted. The receiver is the object, that receives the signal. Finally the slot is the method, that reacts to the signal.</em> <span id="line-65" class="anchor"/><span id="line-66" class="anchor"/></p><ul><li style="list-style-type: none;">连接方法有四个参数。sender是发送信号的对象，signal是它产生的信号，receiver是接收信号的对象，最后的slot是相应信号的方法。 <span id="line-67" class="anchor"/><span id="line-68" class="anchor"/></li><li style="list-style-type: none;" class="gap"><p class="line862">signals & slots <span id="line-69" class="anchor"/></p></li></ul><p class="line862">Figure: signal & slot
<span id="line-70" class="anchor"/><span id="line-71" class="anchor"/></p><p class="line867">
</p><h2 id="head-a6f77092ec1fcb9b138d581fbfd349a277f1db83">1.3. Reimplementing event handler</h2>
<span id="line-72" class="anchor"/><p class="line867"><strong>事件处理重载</strong> <span id="line-73" class="anchor"/><span id="line-74" class="anchor"/></p><p class="line867"><em> Events in <a href="/moin/PyQt">PyQt</a> are processed mainly by reimplementing event handlers .</em> <span id="line-75" class="anchor"/><span id="line-76" class="anchor"/></p><ul><li style="list-style-type: none;"><p class="line891"><a href="/moin/PyQt">PyQt</a>中的事件处理主要是通过对事件处理者的重载来进行的。 <span id="line-77" class="anchor"/><span id="line-78" class="anchor"/></p></li></ul><p class="line867"><span
id="line-79" class="anchor"/><span id="line-80" class="anchor"/><span id="line-81" class="anchor"/><span id="line-82" class="anchor"/><span id="line-83" class="anchor"/><span id="line-84" class="anchor"/><span id="line-85" class="anchor"/><span id="line-86" class="anchor"/><span id="line-87" class="anchor"/><span id="line-88" class="anchor"/><span id="line-89" class="anchor"/><span id="line-90" class="anchor"/><span id="line-91" class="anchor"/><span id="line-92" class="anchor"/><span id="line-93" class="anchor"/><span id="line-94" class="anchor"/><span id="line-95" class="anchor"/><span id="line-96"
class="anchor"/><span id="line-97" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-15aa51d909588a91856b6580c969a284fe72f2e5_001\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-15aa51d909588a91856b6580c969a284fe72f2e5_001', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-15aa51d909588a91856b6580c969a284fe72f2e5_001" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/><span class="Comment"># escape.py</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="Comment"/><span class="ResWord">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ResWord">from</span> <span class="ID">PyQt4</span> <span class="ResWord">import</span> <span class="ID">QtGui</span><span class="Operator">,</span> <span class="ID">QtCore</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ResWord">class</span> <span class="ID">Escape</span><span class="Operator">(</span><span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QWidget</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   6 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   7 </span>        <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QWidget</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   8 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">setWindowTitle</span><span class="Operator">(</span><span class="String">'escape'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   9 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">resize</span><span class="Operator">(</span><span class="Number">250</span><span class="Operator">,</span> <span class="Number">150</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">connect</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">SIGNAL</span><span class="Operator">(</span><span class="String">'closeEmitApp()'</span><span class="Operator">)</span><span class="Operator">,</span> <span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">SLOT</span><span
class="Operator">(</span><span class="String">'close()'</span><span class="Operator">)</span> <span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  11 </span>    <span class="ResWord">def</span> <span class="ID">keyPressEvent</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  12 </span>        <span class="ResWord">if</span> <span class="ID">event</span><span class="Operator">.</span><span class="ID">key</span><span class="Operator">(</span><span class="Operator">)</span> <span class="Operator">==</span> <span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">Qt</span><span class="Operator">.</span><span class="ID">Key_Escape</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  13 </span>            <span class="ID">self</span><span class="Operator">.</span><span class="ID">close</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span><span class="ID">app</span> <span class="Operator">=</span> <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QApplication</span><span class="Operator">(</span><span class="ID">sys</span><span class="Operator">.</span><span class="ID">argv</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span><span class="ID">qb</span> <span class="Operator">=</span> <span class="ID">Escape</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  16 </span><span class="ID">qb</span><span class="Operator">.</span><span class="ID">show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  17 </span><span class="ID">sys</span><span class="Operator">.</span><span class="ID">exit</span><span class="Operator">(</span><span class="ID">app</span><span class="Operator">.</span><span class="ID">exec_</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-98" class="anchor"/><p class="line867"><em> In our example, we reimplement the keyPressEvent() event handler.</em> <span id="line-99" class="anchor"/><span id="line-100" class="anchor"/></p><ul><li style="list-style-type: none;">在这个例子里，我们重载了keyPressEvent()方法。 <span id="line-101" class="anchor"/><span id="line-102" class="anchor"/></li></ul><p class="line867"><span id="line-103" class="anchor"/></p><pre> def keyPressEvent(self, event):
<span id="line-104" class="anchor"/>     if event.key() == QtCore.Qt.Key_Escape:
<span id="line-105" class="anchor"/>         self.close()
<span id="line-106" class="anchor"/></pre><span id="line-107" class="anchor"/><p class="line867"><em> If we click the escape button, we close the application.</em> <span id="line-108" class="anchor"/><span id="line-109" class="anchor"/></p><ul><li style="list-style-type: none;">如果我们按下ESC键，程序将关闭。 <span id="line-110" class="anchor"/><span id="line-111" class="anchor"/></li></ul><p class="line867">
</p><h2 id="head-2a9e5bde88baa066dc6a99bc346003922513b4a2">1.4. Emitting signals</h2>
<span id="line-112" class="anchor"/><p class="line874">发送信号 <span id="line-113" class="anchor"/><span id="line-114" class="anchor"/></p><p class="line867"><em> Objects created from <a href="/moin/QtCore" class="nonexistent">QtCore</a>.QObject can emit signals. If we click on the button, a clicked() signal is generated. In the following example we will see, how we can emit signals.</em> <span id="line-115" class="anchor"/><span id="line-116" class="anchor"/></p><ul><li style="list-style-type: none;"><p class="line862">通过<a href="/moin/QtCore"
class="nonexistent">QtCore</a>.QObject创建的对象可以发送信号。如果我们点击按钮，就会生成一个clicked()信号。在以下的例子里我们会看到如何发送一个信号。 <span id="line-117" class="anchor"/><span id="line-118" class="anchor"/></p></li></ul><p class="line867"><span id="line-119" class="anchor"/><span id="line-120" class="anchor"/><span id="line-121" class="anchor"/><span id="line-122" class="anchor"/><span id="line-123" class="anchor"/><span id="line-124" class="anchor"/><span id="line-125" class="anchor"/><span id="line-126" class="anchor"/><span id="line-127" class="anchor"/><span
id="line-128" class="anchor"/><span id="line-129" class="anchor"/><span id="line-130" class="anchor"/><span id="line-131" class="anchor"/><span id="line-132" class="anchor"/><span id="line-133" class="anchor"/><span id="line-134" class="anchor"/><span id="line-135" class="anchor"/><span id="line-136" class="anchor"/></p><div lang="en" dir="ltr" class="codearea">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-9e24edc60b78ef6dda25132bc8f6e816213717b2_002\', 1, 1);" \
class="codenumbers">切换行号显示<\/a>');
</script><a class="codenumbers" onclick="return togglenumber('CA-9e24edc60b78ef6dda25132bc8f6e816213717b2_002', 1, 1);" href="#">切换行号显示</a>
<pre lang="en" id="CA-9e24edc60b78ef6dda25132bc8f6e816213717b2_002" dir="ltr"><span class="line"><span class="LineNumber">   1 </span><span class="Comment">#!/usr/bin/python</span></span>
<span class="line"><span class="LineNumber">   2 </span><span class="Comment"/><span class="Comment"># emit.py</span></span>
<span class="line"><span class="LineNumber">   3 </span><span class="Comment"/><span class="ResWord">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineNumber">   4 </span><span class="ResWord">from</span> <span class="ID">PyQt4</span> <span class="ResWord">import</span> <span class="ID">QtGui</span><span class="Operator">,</span> <span class="ID">QtCore</span></span>
<span class="line"><span class="LineNumber">   5 </span><span class="ResWord">class</span> <span class="ID">Emit</span><span class="Operator">(</span><span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QWidget</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   6 </span>    <span class="ResWord">def</span> <span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">=</span><span class="ID">None</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">   7 </span>        <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QWidget</span><span class="Operator">.</span><span class="ID">__init__</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">parent</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   8 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">setWindowTitle</span><span class="Operator">(</span><span class="String">'emit'</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">   9 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">resize</span><span class="Operator">(</span><span class="Number">250</span><span class="Operator">,</span> <span class="Number">150</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  10 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">connect</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">SIGNAL</span><span class="Operator">(</span><span class="String">'closeEmitApp()'</span><span class="Operator">)</span><span class="Operator">,</span> <span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">SLOT</span><span
class="Operator">(</span><span class="String">'close()'</span><span class="Operator">)</span> <span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  11 </span>    <span class="ResWord">def</span> <span class="ID">mousePressEvent</span><span class="Operator">(</span><span class="ID">self</span><span class="Operator">,</span> <span class="ID">event</span><span class="Operator">)</span><span class="Operator">:</span></span>
<span class="line"><span class="LineNumber">  12 </span>        <span class="ID">self</span><span class="Operator">.</span><span class="ID">emit</span><span class="Operator">(</span><span class="ID">QtCore</span><span class="Operator">.</span><span class="ID">SIGNAL</span><span class="Operator">(</span><span class="String">'closeEmitApp()'</span><span class="Operator">)</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  13 </span><span class="ID">app</span> <span class="Operator">=</span> <span class="ID">QtGui</span><span class="Operator">.</span><span class="ID">QApplication</span><span class="Operator">(</span><span class="ID">sys</span><span class="Operator">.</span><span class="ID">argv</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  14 </span><span class="ID">qb</span> <span class="Operator">=</span> <span class="ID">Emit</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  15 </span><span class="ID">qb</span><span class="Operator">.</span><span class="ID">show</span><span class="Operator">(</span><span class="Operator">)</span></span>
<span class="line"><span class="LineNumber">  16 </span><span class="ID">sys</span><span class="Operator">.</span><span class="ID">exit</span><span class="Operator">(</span><span class="ID">app</span><span class="Operator">.</span><span class="ID">exec_</span><span class="Operator">(</span><span class="Operator">)</span><span class="Operator">)</span><span class="Text"/></span>
</pre></div><span id="line-137" class="anchor"/><p class="line867"><em> We create a new signal called closeEmitApp(). This signal is emitted, during a mouse press event. </em> <span id="line-138" class="anchor"/><span id="line-139" class="anchor"/></p><ul><li style="list-style-type: none;">我们创建一个叫做closeEmitApp()的新的信号。这个信号在鼠标按下时产生。 <span id="line-140" class="anchor"/><span id="line-141" class="anchor"/></li></ul><p class="line867"><span id="line-142" class="anchor"/></p><pre> def mousePressEvent(self, event):
<span id="line-143" class="anchor"/>     self.emit(QtCore.SIGNAL('closeEmitApp()'))
<span id="line-144" class="anchor"/></pre><span id="line-145" class="anchor"/><p class="line867"><em> Emitting a signal with the emit() method.</em> <span id="line-146" class="anchor"/><span id="line-147" class="anchor"/></p><ul><li style="list-style-type: none;">通过emit()来产生一个信号。 <span id="line-148" class="anchor"/><span id="line-149" class="anchor"/></li></ul><p class="line867"><span id="line-150" class="anchor"/></p><pre> self.connect(self, QtCore.SIGNAL('closeEmitApp()'), QtCore.SLOT('close()') )
<span id="line-151" class="anchor"/></pre><span id="line-152" class="anchor"/><p class="line867"><em> Here we connect the manually created closeEmitApp() signal with the close() slot.</em> <span id="line-153" class="anchor"/><span id="line-154" class="anchor"/></p><ul><li style="list-style-type: none;">这里我们将我们手工产生的closeEmitApp()信号与close()插槽连接。 <span id="line-155" class="anchor"/><span id="line-156" class="anchor"/></li></ul><p class="line867"/><div id="pagecomment">
<a name="pagecomment1"/>
<table border="0" class="pagecomment">
<tbody><tr><td colspan="5" style="border-width: 1px; margin: 10px 0pt;">

<script language="javascript">
<!--
function setCookie(name, value) {
var today = new Date();
var expire = new Date(today.getTime() + 60*60*24*365*1000);
document.cookie = name + "=" + encodeURIComponent(value) + "; expires=" + expire.toGMTString() + "; path=/moin";
}
//-->
</script>
<form onsubmit="setCookie('PG2AUTHOR', this.comauthor.value);" method="post" name="comment" action="Events_and_Signals_%E4%BA%8B%E4%BB%B6%E5%92%8C%E4%BF%A1%E5%8F%B7#pagecomment1">
<table class="addcommentform">
<tbody><tr>
<td style="border-width: 0px; vertical-align: middle; font-size: 0.9em;"><textarea onblur="if (this.value=='') {this.value='Add your comment';};" onfocus="if (this.value=='Add your comment') {this.value='';};" style="font-size: 9pt;" cols="60" rows="4" name="comtext">Add your comment</textarea></td>
<td style="border-width: 0px; font-size: 0.9em; vertical-align: bottom;"><input type="submit" style="font-size: 9pt; width: 6em; height: 3em;" value="保存" name="button_save"/></td>
</tr>
<tr><td style="border-width: 0px; vertical-align: middle; font-size: 0.9em;">
Name<input type="text" onblur="if (this.value=='') {this.value='58';};" onfocus="if (this.value=='58') {this.value='';};" value="58" name="comauthor" maxlength="20" size="6" style="font-size: 9pt;"/>
Password4deL<input type="password" onblur="if (this.value=='') {this.value='der4';};" onfocus="if (this.value=='der4') {this.value='';};" value="der4" name="compasswd" maxlength="10" size="4" style="font-size: 9pt;"/>
<input type="hidden" name="autopasswd" value="der4"/>
<input type="radio" value=";)" name="comicon"/><img width="15" height="15" title=";)" src="/htdocs/woodpecker/img/smile4.png" alt=";)"/>
<input type="radio" value="=D" name="comicon"/>
<input type="radio" value="=)" name="comicon"/>
<input type="radio" value=":P" name="comicon"/>
<input type="radio" value=":(|)" name="comicon"/>
<input type="radio" value=":-|" name="comicon"/>
<input type="radio" value=":(" name="comicon"/><img width="15" height="15" title=":(" src="/htdocs/woodpecker/img/sad.png" alt=":("/>
<input type="radio" value="X-(" name="comicon"/><img width="15" height="15" title="X-(" src="/htdocs/woodpecker/img/angry.png" alt="X-("/>
<input type="radio" value="B-)" name="comicon"/><img width="15" height="15" title="B-)" src="/htdocs/woodpecker/img/smile2.png" alt="B-)"/>

</td>
<td style="border-width: 0px; vertical-align: middle; text-align: right; font-size: 9pt;"/>
</tr>
</tbody></table>
<input type="hidden" value="show" name="action"/>
<input type="hidden" value="0" name="comrev"/>
<input type="hidden" value="addcomment1" name="commentaction"/>
</form>
</td></tr>
<tr><td style="border-width: 0px; height: 20px;" class="commentblankline" colspan="5"/></tr>
<script language="javascript">
<!--
function requesttodeleteadmin1(delform, comkey) {
if (confirm("Really delete this comment?")) {;
delform.delkey.value = comkey;
delform.delpasswd.value = "****";
delform.submit();
}
}
function requesttodelete1(delform, comkey) {
var passwd = prompt("请输入一个密码!:", "");
if(!(passwd == "" || passwd == null)) {
delform.delkey.value = comkey;
delform.delpasswd.value = passwd;
delform.submit();
}
}
//-->
</script>
<form method="post" action="Events_and_Signals_%E4%BA%8B%E4%BB%B6%E5%92%8C%E4%BF%A1%E5%8F%B7#pagecomment1" name="delform1"/>
<input type="hidden" name="action" value="show"/>
<input type="hidden" value="****" name="delpasswd"/>
<input type="hidden" value="" name="delkey"/>
<input type="hidden" value="delcomment1" name="commentaction"/>


</tbody></table>
</div> <span id="line-157" class="anchor"/><span id="bottom" class="anchor"/></div>
