---
created: 2010-06-26 12:14
creator: 潘俊勇
description: 容易掌握是硬道理，脚本开发是web开发的方向
title: 脚本化的web开发
---
================================
脚本化的web开发
================================

.. Contents::
.. sectnum::

背景
===============
这章退回到10年前的那个时代，我们来讲一个zope已经冷落的技术：脚本化的web开发。

在那个时代，还是cgi的时代，web开发还是非常高深、非常复杂的技术。zope第一次，提出了脚本化的web开发的概念，极大的简化了web 开发，领先其他技术一大截。

zope脚本化开发的核心在于：

1. zope定位是一个web应用服务器
2. 在一个运行的web应用服务器上，在浏览器上写脚本，进行web开发

优势：内强外简！
==============================
主要优势在于：

1. 即写即用，马上看到结果，马上调试

   不需要重启服务器，不需要配置xml文件，或者注册什么，开发速度非常快

2. 只有一个DTML，非常容易掌握

   当年zope只有一个核心技术: DTML，这个DTML，其实类似jsp/asp。没有python script，也没有page template。

   当年我记得有个医院管理系统的公司赞扬zope，这么说：Zope最大的优点，就是能够随便找个懂一点开发的人，培训一个星期，就能够上手开发。

   这和php开发人员的评论何等相似。

3. zope应用服务器自身提供非常多的功能

   包括权限、登录认证、用户管理等。全部在浏览器上设置，很多功能可插拔。这样，开发一个网站，一点都不需要做重做车轮的事情。

4. 在浏览器上开发

   这个不得不说是个很酷的特性，我记得我就和远在奥地利的朋友在web上做过一些开发。马上见效，调试错误也非常方便，不需要任何开发环境。

5. 容易做定制

   因为在浏览器上可做非常多的事情，因此高可定制就容易达到。plone的高可定制正式由zope得来的。

缺点
============
zope的脚本开发，缺点也是存在的：

1. 越来越复杂

   后来引入了zclass，在浏览器上定义类。这个zclasss，确实比较理想化。作为脚本开发人员，我认为是不应该接触到类的，这个zclass，不伦不类，是在是一个败笔。

2. 太多怪异的东西

   比如获取技术、acccess rule、虚拟主机，还有dtml的语法也比较怪。这些也可以说是创新，但是意味着学习成本、调试的复杂性。

3. 浏览器上很难组织大规模的开发

   基本的一点，浏览器上开发需要进行版本管理。这个zope做了很多尝试，效果都不好。

4. 没有明确的脚本开发模式

   每个人有自己的开发方法，发布产品就是导出一个zexp的包。哪里存放代码，哪里存放数据，很多都混在一起，难以升级。

5. 太多想法，太快出来

   zope有好些东西，弄出来缺乏成熟的思考。比如zope把page template弄得那么复杂，真的是过分。。。dtml还搞出个dtml document和dtml method，然后说某个过时。。。眼花缭乱

易度的新脚本开发模式
=============================
最后章节里面，说说易度的改进：

1. 有标准的插件产品开发规范，这个学习了最新的django等轻量级开发框架。

2. 不仅仅是浏览器开发，也支持线下开发

   线下开发，是可以支持版本管理的。而且未来 会学app engine，整个开发调试环境出来

3. 只有python script和page template2种，学习更简单

4. 有 插件产品的管理界面，方便安装、卸载、升级

易度的脚本开发环境出来后，我们立即感受到了优势：

没什么经验的实习生，也能在短期内掌握。

这样，易度开始用自己做的工具生产了，好多开发，包括我们的系统代理商后台，我们都准备转移到脚本开发模式上：我们没必要给自己设置那么多的门槛。

就如同大妈的那句话：人生苦短，快用python。

我说，人生苦短，脚本开发

累了，到这里，先到这里吧。。。 

脚本开发大趋势
================================
写完这个稿子，我自己也把有些概念提升了。

我现在真的是觉得上层应用应该是脚本开发的，而不应该是从头到脚自己整。

我很早记得当年powerbuilder出来的时候，自己称自己是第4代语言，其实就是脚本开发。

powerbuilder主要是基于c/s的脚本开发，这个架构落后了。

但是基于web的脚本开发，而且上升到应用级别的，却一直没有代表。

zoho的也是脚本开发，但是zoho的知名弱点，是自己发明了一种语言。自己发明语言，就不像python那样有那么多类库了。python的类库是python最引以为豪的。

今天给公司员工培训，看到他们快速做了几个界面，我自己都惊叹了。这些要是我用zope来整，很头疼。他们只是在界面上，用10行代码解决问题了。

所以，我非常认同我最后的一句话：生命短暂，脚本开发。

说大一点，脚本开发是第N代语言。是人类偷懒习惯的产物。

这个道理，在目前工业化做得比较好的游戏开发里面已经实现了。游戏分引擎和逻辑2部分。游戏引擎就是平台。游戏逻辑就是脚本。

同样，对于企业应用开发来说，一定是需要一个企业应用引擎的。写具体应用，只是上层的脚本而已。无他。

所以，我准备把易度PaaS开发平台，换名叫做 易度企业应用引擎。 

脚本开发的安全性
===================================
python有很多类库，但能在易度paas里面用么？易度怎样控制脚本安全地执行呢？对于while True:pass这类程序在易度上面运行，会有什么后果？

恩恩。和google app engine一样，易度的python运行在沙箱里面

易度不会开放所有的包，但是一些易度认为安全的包会开放的。

while True:pass这样的死循环，其实python就有处理。系统会有死循环检测，循环达到系统上线就认为抛出异常了。

这个在10年前zope2时代，这个工作就做了。
