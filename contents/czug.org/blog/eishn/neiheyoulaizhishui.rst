---
created: 2007-01-08 14:31:44
creator: eishn
description: 即将冻结的瞬间,  你睁开了眼睛, 于是 —— 你看见了内核。是你创造了它? 就在你见到它的刹那? 不! 它一直就在那里。它已经存在了千年,  就好像漫长的黑夜、血腥的杀戮都与它无关似的。在这个清晨。它只是慢慢地拨开迷雾,
  洗去我们沉重的铅华, 于是, 你看到了它。…… 这一秒重新开始。
title: 内核由来之说
---
<h1>内核由来之说</h1>
<div style="text-align: left;"><img src="http://nationalzoo.si.edu/Animals/BackyardBiology/PlantoftheMonth/images/butterflybush1.jpg" /><br /></div><br /><br />    编写程序库, 有时候怎么写都写不好。不负责任的话你可以按照 TODO 列表填鸭式地增加功能和接口, 直到加不上去为止。这个时候, 你又可以进一步选择增加层次和抽象, 把事情变得复杂。接下来的瓶颈将出现得更快, 程序库很快又会变成无法用。这个时候你就会选择设计模式, 试图让事情变得更抽象和更复杂。最后, 这个程序变得根本无法使用, 这时一切就走到了尽头, 你开始增加开发人员, 你的项目开始无限制地延期 …… 我拒绝这些不负责任的行为。尽管维护一个看上去很大很复杂的程序库好像很酷, 更容易让人名利双收。<br /> <br />    编程是一种艺术的工作, 充满灵感的作品非常简单, 它可以比别的程序小 100 倍, 功能强 100 倍, 没有封装也没有多余代码, 同时代码非常容易阅读。最重要的, 这种类型的程序库要比软件工程下那些行将就木的程序库好用 100 倍。这好像是神话, 但是在 10 多年的编程生涯中我不止一次地接触过这种灵感。最后, 我选择追随这种被称为 '编程之道' 的编程艺术。而 '编程之道' 的化身之一, 就是 Pythonic 及其背后的 Python 语言。<br /> <br />    有时候, 一个程序上的灵感可能需要等待许多年才会出现, 一年、两年、三年, 就好像陈酒, 越久的想法越美妙。最后, 好像是突然之间, 一个令灵感突然冒了出来。这也种情况也不止一次地出现过, 所以我决定追随灵感的足迹, 在灵感出现之前, 我常常冥想, 或者在远古哲学中捕捉它的蛛丝马迹, 我们必须等待。<br /> <br />    当多年的跋涉到达终点的时候, 你会发现这段代码并不是你自己创造出来的。其实这段程序早在多年以前就已经在这里, 它一直在等待着你的到来。<br /> <br />    起初, 我们会被这个世界的世俗哲学和比如面向对象这些方法所迷惑, 还有许多功能等待我们的程序库来完成。我们的负担很重, 但是如果我们坚定信心, 不被这些东西所迷惑而变得浮躁, 我们就能抛开这些东西。原来那些需要完成的功能也渐渐显露出本质, 你找到了他们的弱点, 你将绕开所有问题, 并且找到捷径。最后, 你箭步如飞地到达那段代码面前。那就好像一个远离凡尘的仙境。你俯视着原先的那些负担和岔路, 现在你的程序库显现出它的本质 —— 一个抽离了所有噪音的内核, 那是一种无以复加的简洁。并且这种程序库也将强迫你的用户工作在凡尘之外。<br />
